import { u as unwrapExports, c as createCommonjsModule } from './index-1a7f038e.js';

var AgoraRTC = createCommonjsModule(function (module, exports) {
/*! AgoraRTC|BUILD v2.8.0-174-g8cc3071 */
/*eslint-disable */
!function(e,t) {  module.exports = t() ; }(window,function() { return function(e) { const t = {};function n(i) { if (t[i]) return t[i].exports;const o = t[i] = { i,l:!1,exports:{} };return e[i].call(o.exports,o,o.exports,n),o.l = !0,o.exports } return n.m = e,n.c = t,n.d = function(e,t,i) { n.o(e,t) || Object.defineProperty(e,t,{ enumerable:!0,get:i }); },n.r = function(e) { typeof Symbol !== 'undefined' && Symbol.toStringTag && Object.defineProperty(e,Symbol.toStringTag,{ value:'Module' }),Object.defineProperty(e,'__esModule',{ value:!0 }); },n.t = function(e,t) { if (1 & t && (e = n(e)),8 & t) return e;if (4 & t && typeof e === 'object' && e && e.__esModule) return e;const i = Object.create(null);if (n.r(i),Object.defineProperty(i,'default',{ enumerable:!0,value:e }),2 & t && typeof e !== 'string') for (const o in e)n.d(i,o,function(t) { return e[t] }.bind(null,o));return i },n.n = function(e) { const t = e && e.__esModule ? function() { return e.default } : function() { return e };return n.d(t,'a',t),t },n.o = function(e,t) { return Object.prototype.hasOwnProperty.call(e,t) },n.p = '',n(n.s = 26) }([function(e,t,n) {n.r(t);const i = n(5); const o = n.n(i); const a = n(6); const r = n(2); const s = n(1); let c = 0; let d = 'free'; const u = []; let l = []; let p = 0;setInterval(function() { Object(r.getParameter)('UPLOAD_LOG') && f.info('console log upload'); },9e5);var f = function() { let e; let t; let n; let i; let f; let m; let g = 'https://'.concat(Object(r.getParameter)('LOG_UPLOAD_SERVER'),'/upload/v1'); const v = ['DEBUG','INFO','WARNING','ERROR','NONE']; let S = 0; const I = function e(t) { d = 'uploading',setTimeout(function() { !function(e,t,n) { let i;Array.isArray(e) || (e = [e]),e = e.map(function(e) { return { log_item_id:c++,log_level:e.log_level,payload_str:e.payload } }),i = { sdk_version:r.VERSION,process_id:Object(s.a)(),payload:JSON.stringify(e) };try { Object(a.c)(g,i,function(e) { e === 'OK' ? t && t(e) : n && n(e); },function(e) { n && n(e); },{ withCredentials:!0 }); } catch (e) { n && n(e); } }(t,function() { p = 0,u.length !== 0 ? (l = u.length < 10 ? u.splice(0,u.length) : u.splice(0,10),e(l)) : d = 'free'; },function() { setTimeout(function() { e(l); },p++ < 2 ? 200 : 1e4); }); },3e3); };t = function() { for (var t = [0],n = 0;n < arguments.length;n++)t.push(arguments[n]);e.apply(this,t); },n = function() { for (var t = [1],n = 0;n < arguments.length;n++)t.push(arguments[n]);e.apply(this,t); },i = function() { for (var t = [2],n = 0;n < arguments.length;n++)t.push(arguments[n]);e.apply(this,t); },f = function() { for (var t = [3],n = 0;n < arguments.length;n++)t.push(arguments[n]);e.apply(this,t); };const h = {};return m = function(e) { h[e] || (i.apply(void 0,arguments),h[e] = !0); },{ DEBUG:0,INFO:1,WARNING:2,ERROR:3,NONE:4,enableLogUpload() { Object(r.setParameter)('UPLOAD_LOG',!0); },disableLogUpload() { Object(r.setParameter)('UPLOAD_LOG',!1); },setProxyServer(e) { g = e ? 'https://'.concat(e,'/ls/?h=').concat(Object(r.getParameter)('LOG_UPLOAD_SERVER'),'&p=443&d=upload/v1') : 'https://'.concat(Object(r.getParameter)('LOG_UPLOAD_SERVER'),'/upload/v1'); },setLogLevel(e) { e > 4 ? e = 4 : e < 0 && (e = 0),S = e; },log:e = function() { let e; const t = arguments[0]; const n = arguments;if (n[0] = (e = new Date).toTimeString().split(' ')[0] + ':' + e.getMilliseconds() + ' Agora-SDK [' + (v[t] || 'DEFAULT') + ']:',function(e,t) { if (Object(r.getParameter)('UPLOAD_LOG')) try { t = Array.prototype.slice.call(t);let n = '';t.forEach(function(e) { o()(e) === 'object' && (e = JSON.stringify(e)),n = n + e + ' '; }),u.push({ payload:n,log_level:e }),d === 'free' && (l = u.length < 10 ? u.splice(0,u.length) : u.splice(0,10),I(l)); } catch (e) {} }(t,n),!(t < S)) switch (t) { case 0:case 1:console.log.apply(console,n);break;case 2:console.warn.apply(console,n);break;case 3:console.error.apply(console,n);break;default:return void console.log.apply(console,n) } },debug:t,info:n,warning:i,deprecate:m,error:f } }();t.default = f; },function(e,t,n) {const i = n(9); const o = n.n(i); const a = n(4); const r = n.n(a); const s = n(2); const c = n(0); const d = n(6); const u = n(11); const l = n.n(u);n.d(t,'b',function() { return g }),n.d(t,'a',function() { return m });const p = { eventType:null,sid:null,lts:null,success:null,cname:null,uid:null,peer:null,cid:null,elapse:null,extend:null,vid:0 }; let f = null; var m = function() { return f || (f = 'process-' + l()(),c.default.info('processId: ' + f)),f }; var g = function() { const e = { list:{} };e.url = Object(d.e)() ? 'https://'.concat(Object(s.getParameter)('EVENT_REPORT_DOMAIN'),':6443/events/message') : 'http://'.concat(Object(s.getParameter)('EVENT_REPORT_DOMAIN'),':6080/events/message'),e.urlBackup = Object(d.e)() ? 'https://'.concat(Object(s.getParameter)('EVENT_REPORT_BACKUP_DOMAIN'),':6443/events/message') : 'http://'.concat(Object(s.getParameter)('EVENT_REPORT_BACKUP_DOMAIN'),':6080/events/message'),e.setProxyServer = function(t) { t ? (e.url = Object(d.e)() ? 'https://'.concat(t,'/rs/?h=').concat(Object(s.getParameter)('EVENT_REPORT_DOMAIN'),'&p=6443&d=events/message') : 'http://'.concat(t,'/rs/?h=').concat(Object(s.getParameter)('EVENT_REPORT_DOMAIN'),'&p=6080&d=events/message'),e.urlBackup = Object(d.e)() ? 'https://'.concat(t,'/rs/?h=').concat(Object(s.getParameter)('EVENT_REPORT_BACKUP_DOMAIN'),'&p=6443&d=events/message') : 'http://'.concat(t,'/rs/?h=').concat(Object(s.getParameter)('EVENT_REPORT_BACKUP_DOMAIN'),'&p=6080&d=events/message'),c.default.debug('reportProxyServerURL: '.concat(e.url)),c.default.debug('reportProxyServerBackupURL: '.concat(e.urlBackup))) : (e.url = Object(d.e)() ? 'https://'.concat(Object(s.getParameter)('EVENT_REPORT_DOMAIN'),':6443/events/message') : 'http://'.concat(Object(s.getParameter)('EVENT_REPORT_DOMAIN'),':6080/events/message'),e.urlBackup = Object(d.e)() ? 'https://'.concat(Object(s.getParameter)('EVENT_REPORT_BACKUP_DOMAIN'),':6443/events/message') : 'http://'.concat(Object(s.getParameter)('EVENT_REPORT_BACKUP_DOMAIN'),':6080/events/message')); },e.sessionInit = function(t,n) { const i = r()({},p);i.startTime = +new Date,i.sid = t,i.cname = n.cname,e.list[t] = i;const o = r()({},{ willUploadConsoleLog:Object(s.getParameter)('UPLOAD_LOG') },n.extend); const a = r()({},i);a.eventType = 'session_init',a.appid = n.appid,a.browser = navigator.userAgent,a.build = s.BUILD,a.lts = +new Date,a.elapse = a.lts - a.startTime,a.extend = JSON.stringify(o),a.mode = n.mode,a.process = m(),a.success = n.succ,a.version = s.VERSION,delete a.startTime,e.send({ type:'io.agora.pb.Wrtc.Session',data:a }),e._flushInvokeReport(t); },e.joinChooseServer = function(t,n,i) { n.uid && (e.list[t].uid = parseInt(n.uid)),n.cid && (e.list[t].cid = parseInt(n.cid));const o = r()({},e.list[t]);o.eventType = 'join_choose_server';const a = n.lts;o.lts = Date.now(),o.eventElapse = o.lts - a,o.chooseServerAddr = n.csAddr,o.errorCode = n.ec,o.elapse = o.lts - o.startTime,o.success = n.succ,o.chooseServerAddrList = JSON.stringify(n.serverList),delete o.startTime,e.send({ type:'io.agora.pb.Wrtc.JoinChooseServer',data:o }); },e.reqUserAccount = function(t,n) { n.vid && (e.list[t].vid = n.vid);const i = r()({},e.list[t]); const o = n.lts;i.eventType = 'req_user_account',i.lts = Date.now(),i.success = n.success,i.serverAddress = n.serverAddress,i.stringUid = n.stringUid,i.uid = n.uid,i.errorCode = n.errorCode,i.elapse = i.lts - i.startTime,i.eventElapse = i.lts - o,i.extend = typeof n.extend === 'string' ? n.extend : JSON.stringify(n.extend),delete i.startTime,e.send({ type:'io.agora.pb.Wrtc.ReqUserAccount',data:i }); },e.joinGateway = function(t,n) { n.vid && (e.list[t].vid = n.vid);const i = r()({},e.list[t]); const o = n.lts;i.eventType = 'join_gateway',i.lts = Date.now(),i.gatewayAddr = n.addr,i.success = n.succ,i.errorCode = n.ec,i.elapse = i.lts - i.startTime,i.eventElapse = i.lts - o,delete i.startTime,e.send({ type:'io.agora.pb.Wrtc.JoinGateway',data:i }); },e.publish = function(t,n) { const i = r()({},e.list[t]);i.eventType = 'publish';const o = n.lts;i.lts = Date.now(),i.eventElapse = i.lts - o,i.elapse = i.lts - i.startTime,i.success = n.succ,i.errorCode = n.ec,n.videoName && (i.videoName = n.videoName),n.audioName && (i.audioName = n.audioName),n.screenName && (i.screenName = n.screenName),delete i.startTime,e.send({ type:'io.agora.pb.Wrtc.Publish',data:i }),e._flushInvokeReport(t); },e.subscribe = function(t,n) { const i = r()({},e.list[t]);i.eventType = 'subscribe';const o = n.lts;i.lts = Date.now(),i.eventElapse = i.lts - o,i.elapse = i.lts - i.startTime,i.errorCode = n.ec,i.success = n.succ,isFinite(n.peerid) ? i.peer = n.peerid : i.peerSuid = '' + n.peerid,typeof n.video === 'boolean' && (i.video = n.video),typeof n.audio === 'boolean' && (i.audio = n.audio),delete i.startTime,e.send({ type:'io.agora.pb.Wrtc.Subscribe',data:i }),e._flushInvokeReport(t); },e.firstRemoteFrame = function(t,n) { const i = r()({},e.list[t]);i.eventType = 'first_remote_frame';const o = n.lts;i.lts = Date.now(),i.eventElapse = i.lts - o,i.elapse = i.lts - i.startTime,i.width = n.width,i.height = n.height,i.success = n.succ,i.errorCode = n.ec,isFinite(n.peerid) ? i.peer = n.peerid : i.peerSuid = '' + n.peerid,delete i.startTime,e.send({ type:'io.agora.pb.Wrtc.FirstFrame',data:i }); },e.streamSwitch = function(t,n) { const i = r()({},e.list[t]);i.eventType = 'stream_switch',i.lts = Date.now(),i.isDual = n.isdual,i.elapse = i.lts - i.startTime,i.success = i.succ,delete i.startTime,e.send({ type:'io.agora.pb.Wrtc.StreamSwitch',data:i }); },e.audioSendingStopped = function(t,n) { const i = r()({},e.list[t]);i.eventType = 'audio_sending_stopped',i.lts = Date.now(),i.elapse = i.lts - i.startTime,i.reason = n.reason,i.success = n.succ,delete i.startTime,e.send({ type:'io.agora.pb.Wrtc.AudioSendingStopped',data:i }); },e.videoSendingStopped = function(t,n) { const i = r()({},e.list[t]);i.eventType = 'video_sending_stopped',i.lts = Date.now(),i.elapse = i.lts - i.startTime,i.reson = n.reason,i.success = n.succ,delete i.startTime,e.send({ type:'io.agora.pb.Wrtc.VideoSendingStopped',data:i }); },e.requestProxyAppCenter = function(t,n) { const i = r()({},e.list[t]); const o = n.lts;i.eventType = 'request_proxy_appcenter',i.lts = Date.now(),i.eventElapse = i.lts - o,i.elapse = i.lts - i.startTime,i.extend = n.extend + '',i.APAddr = n.APAddr,i.workerManagerList = n.workerManagerList,i.response = n.response,i.errorCode = n.ec,i.success = n.succ,delete i.startTime,e.send({ type:'io.agora.pb.Wrtc.RequestProxyAppCenter',data:i }); },e.requestProxyWorkerManager = function(t,n) { const i = r()({},e.list[t]); const o = n.lts;i.eventType = 'request_proxy_worker_manager',i.lts = Date.now(),i.eventElapse = i.lts - o,i.elapse = i.lts - i.startTime,i.extend = n.extend,i.workerManagerAddr = n.workerManagerAddr,i.response = n.response,i.errorCode = n.ec,i.success = n.succ,delete i.startTime,e.send({ type:'io.agora.pb.Wrtc.RequestProxyWorkerManager',data:i }); };let t = 0;return e.reportApiInvoke = function(e,n) { const i = n.tag; const a = n.name; const r = n.getStates; const s = n.options; const c = n.timeout; const d = void 0 === c ? 6e4 : c; const u = n.callback; const l = n.reportResult; const p = void 0 === l || l; const f = Date.now(); let m = 0; const v = t++; const S = function() { return o()({ tag:i,invokeId:v,sid:e,name:a,apiInvokeTime:f,options:s },r && { states:(t = r(),Object.keys(t).reduce(function(e,n) { const i = e;return t[n] != null && (i[n] = t[n]),i },{})) });let t; }; const I = setTimeout(function() { g._sendApiInvoke(o()({},S(),{ error:'API_INVOKE_TIMEOUT',success:!1 })); },d);return function(e,t) { if (clearTimeout(I),++m > 1 && (e = 'EXECUTOR_INVOKE_'.concat(m)),e) return g._sendApiInvoke(o()({},S(),{ success:!1,error:e },r && { states:r() })),u && u(e);g._sendApiInvoke(o()({},S(),{ success:!0 },p && { result:t },r && { states:r() })),u && u(null,t); } },e._cachedItems = [],e._cacheInvokeReport = function(t) { t.lts || (t.lts = Date.now()),e._cachedItems.push(t),e._cachedItems.length > 50 && e._cachedItems.shift(); },e._flushInvokeReport = function(t) { if (e._cachedItems.length) { const n = e._cachedItems;e._cachedItems = [],c.default.debug('Flush cached event reporting:',n.length),n.forEach(function(n,i) { n.sid = t,setTimeout(function() { e._sendApiInvoke(n); },5e3 + 500 * i); }); } },e._sendApiInvoke = function(t) { const n = t.tag; const i = t.invokeId; const a = t.sid; const r = t.name; const c = t.result; const d = t.states; const u = t.options; const l = t.error; const p = t.success; const f = t.apiInvokeTime; let m = t.lts; const g = Object(s.getParameter)('NOT_REPORT_EVENT');if (!(n && Array.isArray(g) && g.includes(n))) if (e.list[a]) { const v = e.list[a]; const S = v.startTime; const I = v.cname; const h = v.uid; const y = v.cid; const _ = (m = m || Date.now()) - S; const b = m - f; const E = o()({ invokeId:i,sid:a,cname:I,cid:y,lts:m,uid:h,success:p,elapse:_,apiName:r,execElapse:b },void 0 !== u && { options:JSON.stringify(u) },void 0 !== d && { execStates:JSON.stringify(d) },void 0 !== l && { errorCode:JSON.stringify(l) },void 0 !== c && { execResult:JSON.stringify(c) });e.send({ type:'io.agora.pb.Wrtc.ApiInvoke',data:E }); } else e._cacheInvokeReport(arguments[0]); },e._send = function(t) { try { const n = [];t && t.data && t.data.apiName ? n.push(['apiName','' + t.data.apiName]) : t && t.data && t.data.eventType && n.push(['eventType',t.data.eventType]);const i = n.map(function(e) { return ''.concat(e[0],'=').concat(encodeURIComponent(e[1])) }).join('&'); const o = !e.url.includes('?') ? ''.concat(e.url,'?').concat(i) : e.url;Object(d.c)(o,t,null,function(n) { const o = !e.urlBackup.includes('?') ? ''.concat(e.urlBackup,'?').concat(i) : e.urlBackup;Object(d.c)(o,t,null,function(e) {},{ timeout:1e4 }); },{ timeout:1e4 }); } catch (e) {} },e.sendCache = [],e.sendTimer = null,e.send = function(t) { if (e.sendCache.push(t),e.sendTimer === null) { return function t() { e.sendTimer = setTimeout(function() { if (e.sendCache.length !== 0) return e._send(e.sendCache.shift()),t();e.sendTimer = null; },Object(s.getParameter)('EVENT_REPORT_SEND_INTERVAL')); }() } },e }(); },function(e,t,n) {t.__esModule = !0;t.BUILD = 'v2.8.0-174-g8cc3071';t.VERSION = '2.8.0.600';t.SUPPORT_RESOLUTION_LIST = { '90p_1':[160,90,null,null,null,null],'120p_1':[160,120,15,15,30,65],'120p_3':[120,120,15,15,30,50],'120p_4':[212,120,null,null,null,null],'180p_1':[320,180,15,15,30,140],'180p_3':[180,180,15,15,30,100],'180p_4':[240,180,15,15,30,120],'240p_1':[320,240,15,15,40,200],'240p_3':[240,240,15,15,40,140],'240p_4':[424,240,15,15,40,220],'360p_1':[640,360,15,15,80,400],'360p_3':[360,360,15,15,80,260],'360p_4':[640,360,30,30,80,600],'360p_6':[360,360,30,30,80,400],'360p_7':[480,360,15,15,80,320],'360p_8':[480,360,30,30,80,490],'360p_9':[640,360,15,15,80,800],'360p_10':[640,360,24,24,80,800],'360p_11':[640,360,24,24,80,1e3],'480p_1':[640,480,15,15,20,500,1,5],'480p_2':[640,480,30,30,100,1e3,25,30],'480p_3':[480,480,15,15,100,400],'480p_4':[640,480,30,30,100,750],'480p_6':[480,480,30,30,100,600],'480p_8':[848,480,15,15,100,610],'480p_9':[848,480,30,30,100,930],'480p_10':[640,480,10,10,100,400],'720p_1':[1280,720,15,15,120,1130,1,5],'720p_2':[1280,720,30,30,120,2e3,25,30],'720p_3':[1280,720,30,30,120,1710],'720p_5':[960,720,15,15,120,910],'720p_6':[960,720,30,30,120,1380],'1080p_1':[1920,1080,15,15,120,2080,1,5],'1080p_2':[1920,1080,30,30,120,3e3,25,30],'1080p_3':[1920,1080,30,30,120,3150],'1080p_5':[1920,1080,60,60,120,4780],'1440p_1':[2560,1440,30,30,120,4850],'1440p_2':[2560,1440,60,60,120,7350],'4k_1':[3840,2160,30,30,120,8910],'4k_3':[3840,2160,60,60,120,13500] };t.AUDIO_PROFILE_SETTINGS = { speech_low_quality:[!1,!1,!0,!0],speech_standard:[!1,!1,!0,!1],music_standard:[!1,!1,!1,!1],standard_stereo:[!1,!0,!1,!1],high_quality:[!0,!1,!1,!1],high_quality_stereo:[!0,!0,!1,!1],default:[!1,!1,!1,!1] };const i = { WEBCS_DOMAIN:['ap-web-1.agora.io','ap-web-2.agoraio.cn'],WEBCS_DOMAIN_BACKUP_LIST:['ap-web-3.agora.io','ap-web-4.agoraio.cn'],PROXY_CS:['ap-proxy-1.agora.io','ap-proxy-2.agora.io'],ACCOUNT_REGISTER:['ap-web-1.agora.io','ap-web-2.agoraio.cn','ap-web-3.agora.io','ap-web-4.agoraio.cn'],ACCOUNT_REGISTER_RETRY_TIMEOUT:1,ACCOUNT_REGISTER_RETRY_RATIO:2,ACCOUNT_REGISTER_RETRY_TIMEOUT_MAX:6e4,ACCOUNT_REGISTER_RETRY_COUNT_MAX:1e5,AUDIO_CONTEXT:null,LOG_UPLOAD_SERVER:'logservice.agora.io',EVENT_REPORT_DOMAIN:'webcollector-1.agora.io',EVENT_REPORT_BACKUP_DOMAIN:'webcollector-2.agoraio.cn',WEBCS_BACKUP_CONNECT_TIMEOUT:6e3,HTTP_CONNECT_TIMEOUT:5e3,PLAYER_STATE_DEFER:2e3,UPLOAD_LOG:!1,NOT_REPORT_EVENT:[],FILEPATH_LENMAX:255,SUBSCRIBE_TCC:!1,PING_PONG_TIME_OUT:10,WEBSOCKET_TIMEOUT_MIN:1e4,EVENT_REPORT_SEND_INTERVAL:1e3,MEDIA_ELEMENT_EXISTS_DEPTH:3,CANDIDATE_TIMEOUT:2e3,SHIM_CANDIDATE:!1,LEAVE_MSG_TIMEOUT:2e3 };t.setParameter = function(e,t) { return void 0 !== i[e] && (i[e] = t,!0) };t.getParameter = function(e) { return void 0 !== i[e] ? i[e] : null }; },function(e,t,n) {n.r(t),n.d(t,'getBrowserInfo',function() { return I }),n.d(t,'getBrowserVersion',function() { return p }),n.d(t,'getBrowserOS',function() { return f }),n.d(t,'isChrome',function() { return i }),n.d(t,'isSafari',function() { return o }),n.d(t,'isFireFox',function() { return r }),n.d(t,'isOpera',function() { return s }),n.d(t,'isEdge',function() { return a }),n.d(t,'isQQBrowser',function() { return c }),n.d(t,'isWeChatBrowser',function() { return d }),n.d(t,'isLegacyChrome',function() { return g }),n.d(t,'isSupportedPC',function() { return u }),n.d(t,'isSupportedMobile',function() { return l }),n.d(t,'getChromeKernelVersion',function() { return S }),n.d(t,'isChromeKernel',function() { return m });var i = function() { const e = I();return e.name && e.name === 'Chrome' }; var o = function() { const e = I();return e.name && e.name === 'Safari' }; var a = function() { const e = I();return e.name && e.name === 'Edge' }; var r = function() { const e = I();return e.name && e.name === 'Firefox' }; var s = function() { const e = I();return e.name && e.name === 'OPR' }; var c = function() { const e = I();return e.name && e.name === 'QQBrowser' }; var d = function() { const e = I();return e.name && e.name === 'MicroMessenger' }; var u = function() { const e = f();return e === 'Linux' || e === 'Mac OS X' || e === 'Mac OS' || e.includes('Windows') }; var l = function() { const e = f();return e === 'Android' || e === 'iOS' }; var p = function() { return I().version }; var f = function() { return I().os }; var m = function() { return !!navigator.userAgent.match(/chrome\/[\d]./i) };function g() { return window.navigator.appVersion && window.navigator.appVersion.match(/Chrome\/([\w\W]*?)\./) !== null && window.navigator.appVersion.match(/Chrome\/([\w\W]*?)\./)[1] <= 35 } let v; var S = function() { const e = navigator.userAgent.match(/chrome\/[\d]./i);return e && e[0] && e[0].split('/')[1] }; var I = (v = function() { let e; const t = navigator.userAgent; let n = t.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];n[1] === 'Chrome' && (e = t.match(/(OPR(?=\/))\/?(\d+)/i)) != null && (n = e),n[1] === 'Safari' && (e = t.match(/version\/(\d+)/i)) != null && (n[2] = e[1]),~t.toLowerCase().indexOf('qqbrowser') && (e = t.match(/(qqbrowser(?=\/))\/?(\d+)/i)) != null && (n = e),~t.toLowerCase().indexOf('micromessenger') && (e = t.match(/(micromessenger(?=\/))\/?(\d+)/i)) != null && (n = e),~t.toLowerCase().indexOf('edge') && (e = t.match(/(edge(?=\/))\/?(\d+)/i)) != null && (n = e),~t.toLowerCase().indexOf('trident') && (e = /\brv[ :]+(\d+)/g.exec(t) || []) != null && (n = [null,'IE',e[1]]);let i = void 0; const o = [{ s:'Windows 10',r:/(Windows 10.0|Windows NT 10.0)/ },{ s:'Windows 8.1',r:/(Windows 8.1|Windows NT 6.3)/ },{ s:'Windows 8',r:/(Windows 8|Windows NT 6.2)/ },{ s:'Windows 7',r:/(Windows 7|Windows NT 6.1)/ },{ s:'Windows Vista',r:/Windows NT 6.0/ },{ s:'Windows Server 2003',r:/Windows NT 5.2/ },{ s:'Windows XP',r:/(Windows NT 5.1|Windows XP)/ },{ s:'Windows 2000',r:/(Windows NT 5.0|Windows 2000)/ },{ s:'Windows ME',r:/(Win 9x 4.90|Windows ME)/ },{ s:'Windows 98',r:/(Windows 98|Win98)/ },{ s:'Windows 95',r:/(Windows 95|Win95|Windows_95)/ },{ s:'Windows NT 4.0',r:/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/ },{ s:'Windows CE',r:/Windows CE/ },{ s:'Windows 3.11',r:/Win16/ },{ s:'Android',r:/Android/ },{ s:'Open BSD',r:/OpenBSD/ },{ s:'Sun OS',r:/SunOS/ },{ s:'Linux',r:/(Linux|X11)/ },{ s:'iOS',r:/(iPhone|iPad|iPod)/ },{ s:'Mac OS X',r:/Mac OS X/ },{ s:'Mac OS',r:/(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },{ s:'QNX',r:/QNX/ },{ s:'UNIX',r:/UNIX/ },{ s:'BeOS',r:/BeOS/ },{ s:'OS/2',r:/OS\/2/ },{ s:'Search Bot',r:/(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\/Teoma|ia_archiver)/ }];for (const a in o) { const r = o[a];if (r.r.test(navigator.userAgent)) { i = r.s;break } } return { name:n[1],version:n[2],os:i } }(),function() { return v }); },function(e,t) { function n() { return e.exports = n = Object.assign || function(e) { for (let t = 1;t < arguments.length;t++) { const n = arguments[t];for (const i in n)Object.prototype.hasOwnProperty.call(n,i) && (e[i] = n[i]); } return e },n.apply(this,arguments) }e.exports = n; },function(e,t) { function n(e) { return (n = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(e) { return typeof e } : function(e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e })(e) } function i(t) { return typeof Symbol === 'function' && n(Symbol.iterator) === 'symbol' ? e.exports = i = function(e) { return n(e) } : e.exports = i = function(e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : n(e) },i(t) }e.exports = i; },function(e,t,n) {n.d(t,'c',function() { return u }),n.d(t,'e',function() { return l }),n.d(t,'b',function() { return s }),n.d(t,'a',function() { return c }),n.d(t,'d',function() { return d });const i = n(2); const o = n(7); let a = 0; let r = 0; var s = function() { return a }; var c = function() { return r }; var d = function() { a = 0,r = 0; }; var u = function(e,t,n,s,c) { const d = new XMLHttpRequest;if (d.timeout = t.timeout || Object(i.getParameter)('HTTP_CONNECT_TIMEOUT'),d.open('POST',e,!0),d.setRequestHeader('Content-type','application/json; charset=utf-8'),c) for (const u in c)u == 'withCredentials' ? d.withCredentials = !0 : d.setRequestHeader(u,c[u]);d.onload = function(e) { r += Object(o.e)(d.responseText),n && n(d.responseText); },d.onerror = function(t) { s && s(t,e); },d.ontimeout = function(t) { s && s(t,e); };const l = JSON.stringify(t);a += Object(o.e)(l),d.send(l); }; var l = function() { return document.location.protocol == 'https:' }; },function(e,t,n) {n.d(t,'d',function() { return g }),n.d(t,'b',function() { return p }),n.d(t,'a',function() { return l }),n.d(t,'h',function() { return f }),n.d(t,'c',function() { return m }),n.d(t,'g',function() { return S }),n.d(t,'f',function() { return h }),n.d(t,'e',function() { return I });const i = n(5); const o = n.n(i); const a = n(3); const r = n(0); const s = n(11); const c = n.n(s); const d = n(12); const u = n(8); var l = function(e) { return this.audioContext = Object(d.a)(),this.sourceNode = e.otWebkitAudioSource || this.audioContext.createMediaStreamSource(e),this.analyser = this.audioContext.createAnalyser(),this.timeDomainData = new Uint8Array(this.analyser.frequencyBinCount),this.sourceNode.connect(this.analyser),this.getAudioLevel = function() { if (this.analyser) { this.analyser.getByteTimeDomainData(this.timeDomainData);for (var e = 0,t = 0;t < this.timeDomainData.length;t++)e = Math.max(e,Math.abs(this.timeDomainData[t] - 128));return e / 128 } return r.default.warning('can\'t find analyser in audioLevelHelper'),0 },this };function p() { return c()().replace(/-/g,'')
  .toUpperCase() } var f = function(e,t,n) { try { const i = document.createElement('video');i.setAttribute('autoplay',''),i.setAttribute('muted',''),i.muted = !0,i.setAttribute('playsinline',''),i.setAttribute('style','position: absolute; top: 0; left: 0; width:1px; high:1px;'),document.body.appendChild(i),i.addEventListener('playing',function(e) { a.isFireFox() ? i.videoWidth && (t(i.videoWidth,i.videoHeight),document.body.removeChild(i)) : (t(i.videoWidth,i.videoHeight),document.body.removeChild(i)); }),Object(u.setSrcObject)(i,e); } catch (e) { n(e); } }; var m = function(e) { return typeof e === 'number' && e >= 0 && e <= 4294967295 }; var g = function(e) { const t = ['lowLatency','userConfigExtraInfo','transcodingUsers'];for (const n in e) if (n === 'lowLatency' && typeof e[n] !== 'boolean' || n === 'userConfigExtraInfo' && o()(e[n]) !== 'object' || n === 'transcodingUsers' && !v(e[n]) || !~t.indexOf(n) && typeof e[n] !== 'number') throw new Error('Param [' + n + '] is inValid');return !0 }; var v = function(e) { for (let t = 0;t < e.length;t++) for (const n in e[t]) if (typeof e[t][n] !== 'number') throw new Error('Param user[' + t + '] - [' + n + '] is inValid');return !0 }; var S = function(e) { isNaN(e) && (e = 1e3);let t = +new Date; const n = (t = (9301 * t + 49297) % 233280) / 233280;return Math.ceil(n * e) }; var I = function(e) { const t = encodeURIComponent(e).match(/%[89ABab]/g);return e.length + (t ? t.length : 0) }; var h = function() { if (!document.getElementById('agora-ban-tip')) { const e = document.createElement('div');e.id = 'agora-ban-tip',e.style = 'position: absolute; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; color: #fff;',document.querySelector('body').prepend(e);const t = document.createElement('div');t.style = 'background: #000; width: 346px; height: 116px; z-index: 100000; opacity: 0.6; border-radius: 10px; box-shadow: 0 2px 4px #000;',e.append(t);const n = document.createElement('div');n.style = 'height: 76px; display: flex; justify-content: center; align-items: center;';const i = document.createElement('span');i.style = 'height: 28px; width: 28px; color: #000; text-align: center; line-height: 30px; background: #fff; border-radius: 50%; font-weight: 600; font-size: 20px;margin-right: 5px;',i.textContent = '!';const o = document.createElement('span');o.textContent = 'This browser does not support webRTC',n.append(i),n.append(o);const a = document.createElement('div');a.style = 'height: 38px; display: flex; border-top: #fff 1px solid; justify-content: center; align-items: center;',a.textContent = 'OK',t.append(n),t.append(a),a.onclick = function() { const e = document.getElementById('agora-ban-tip');e.parentNode.removeChild(e); }; } }; },function(e,t,n) {n.r(t),n.d(t,'RTCPeerConnection',function() { return b }),n.d(t,'getUserMedia',function() { return a }),n.d(t,'attachMediaStream',function() { return r }),n.d(t,'reattachMediaStream',function() { return s }),n.d(t,'setSrcObject',function() { return p }),n.d(t,'getSrcObject',function() { return f }),n.d(t,'webrtcDetectedBrowser',function() { return c }),n.d(t,'webrtcDetectedVersion',function() { return d }),n.d(t,'webrtcMinimumVersion',function() { return u }),n.d(t,'webrtcTesting',function() { return E }),n.d(t,'webrtcUtils',function() { return v });const i = n(5); const o = n.n(i); var a = null; var r = null; var s = null; var c = null; var d = null; var u = null; let l = null; var p = null; var f = null; let m = null; const g = { addStream:null }; var v = { log() {},extractVersion(e,t,n) { const i = e.match(t);return i && i.length >= n && parseInt(i[n]) } };if ((typeof window === 'undefined' ? 'undefined' : o()(window)) == 'object' ? (!window.HTMLMediaElement || 'srcObject' in window.HTMLMediaElement.prototype ? (p = function(e,t) { e.srcObject = t; },f = function(e) { return e.srcObject }) : (p = function(e,t) { 'mozSrcObject' in e ? e.mozSrcObject = t : (e._srcObject = t,e.src = t ? URL.createObjectURL(t) : null); },f = function(e) { return 'mozSrcObject' in e ? e.mozSrcObject : e._srcObject }),a = window.navigator && window.navigator.getUserMedia) : (p = function(e,t) { e.srcObject = t; },f = function(e) { return e.srcObject }),r = function(e,t) { p(e,t); },s = function(e,t) { p(e,f(t)); },typeof window !== 'undefined' && window.navigator) if (navigator.mozGetUserMedia && window.mozRTCPeerConnection) { for (var S in v.log('This appears to be Firefox'),c = 'firefox',d = v.extractVersion(navigator.userAgent,/Firefox\/([0-9]+)\./,1),u = 31,m = mozRTCPeerConnection,g)g[S] = m.prototype[S];if (l = function(e,t) { if (d < 38 && e && e.iceServers) { for (var n = [],i = 0;i < e.iceServers.length;i++) { const o = e.iceServers[i];if (o.hasOwnProperty('urls')) for (let a = 0;a < o.urls.length;a++) { const r = { url:o.urls[a] };o.urls[a].indexOf('turn') === 0 && (r.username = o.username,r.credential = o.credential),n.push(r); } else n.push(e.iceServers[i]); }e.iceServers = n; } const s = new m(e,t);for (const c in g)s[c] = g[c];return s },window.RTCSessionDescription || (window.RTCSessionDescription = mozRTCSessionDescription),window.RTCIceCandidate || (window.RTCIceCandidate = mozRTCIceCandidate),a = function(e,t,n) { const i = function(e) { if (o()(e) !== 'object' || e.require) return e;const t = [];return Object.keys(e).forEach(function(n) { if (n !== 'require' && n !== 'advanced' && n !== 'mediaSource') { const i = e[n] = o()(e[n]) === 'object' ? e[n] : { ideal:e[n] };if (void 0 === i.min && void 0 === i.max && void 0 === i.exact || t.push(n),void 0 !== i.exact && (typeof i.exact === 'number' ? i.min = i.max = i.exact : e[n] = i.exact,delete i.exact),void 0 !== i.ideal) { e.advanced = e.advanced || [];const a = {};typeof i.ideal === 'number' ? a[n] = { min:i.ideal,max:i.ideal } : a[n] = i.ideal,e.advanced.push(a),delete i.ideal,Object.keys(i).length || delete e[n]; } } }),t.length && (e.require = t),e };return d < 38 && (v.log('spec: ' + JSON.stringify(e)),e.audio && (e.audio = i(e.audio)),e.video && (e.video = i(e.video)),v.log('ff37: ' + JSON.stringify(e))),navigator.mozGetUserMedia(e,t,n) },navigator.getUserMedia = a,navigator.mediaDevices || (navigator.mediaDevices = { getUserMedia:_,addEventListener() {},removeEventListener() {} }),navigator.mediaDevices.enumerateDevices = navigator.mediaDevices.enumerateDevices || function() { return new Promise(function(e) { e([{ kind:'audioinput',deviceId:'default',label:'',groupId:'' },{ kind:'videoinput',deviceId:'default',label:'',groupId:'' }]); }) },d < 41) { const I = navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);navigator.mediaDevices.enumerateDevices = function() { return I().then(void 0,function(e) { if (e.name === 'NotFoundError') return [];throw e }) }; } } else if (navigator.webkitGetUserMedia && window.webkitRTCPeerConnection) { for (var S in v.log('This appears to be Chrome'),c = 'chrome',d = v.extractVersion(navigator.userAgent,/Chrom(e|ium)\/([0-9]+)\./,2),u = 38,m = webkitRTCPeerConnection,g)g[S] = m.prototype[S];l = function(e,t) { e && e.iceTransportPolicy && (e.iceTransports = e.iceTransportPolicy);const n = new m(e,t);for (const i in g)n[i] = g[i];const o = n.getStats.bind(n);return n.getStats = function(e,t,n) { const i = this; let a = arguments;a.length > 0 && typeof e === 'function' && (t ? (n = t,t = e,a = [e = null,t,n]) : (t = e,a = [e = null,t]));const r = function(e) { const t = {};return e.result().forEach(function(e) { const n = { id:e.id,timestamp:e.timestamp,type:e.type };e.names().forEach(function(t) { n[t] = e.stat(t); }),t[n.id] = n; }),t };if (a.length >= 2) { return o.apply(this,[function(e) { a[1](r(e)); },a[0]]) } return new Promise(function(t,n) { a.length === 1 && e === null ? o.apply(i,[function(e) { t.apply(null,[r(e)]); },n]) : o.apply(i,[t,n]); }) },n },['createOffer','createAnswer'].forEach(function(e) { const t = webkitRTCPeerConnection.prototype[e];webkitRTCPeerConnection.prototype[e] = function() { const e = this;if (arguments.length < 1 || arguments.length === 1 && o()(arguments[0]) === 'object') { const n = arguments.length === 1 ? arguments[0] : void 0;return new Promise(function(i,o) { t.apply(e,[i,o,n]); }) } return t.apply(this,arguments) }; }),['setLocalDescription','setRemoteDescription','addIceCandidate'].forEach(function(e) { const t = webkitRTCPeerConnection.prototype[e];webkitRTCPeerConnection.prototype[e] = function() { const e = arguments; const n = this;return new Promise(function(i,o) { t.apply(n,[e[0],function() { i(),e.length >= 2 && e[1].apply(null,[]); },function(t) { o(t),e.length >= 3 && e[2].apply(null,[t]); }]); }) }; });const h = function(e) { if (o()(e) !== 'object' || e.mandatory || e.optional) return e;const t = {};return Object.keys(e).forEach(function(n) { if (n !== 'require' && n !== 'advanced' && n !== 'mediaSource') { const i = o()(e[n]) === 'object' ? e[n] : { ideal:e[n] };void 0 !== i.exact && typeof i.exact === 'number' && (i.min = i.max = i.exact);const a = function(e,t) { return e ? e + t.charAt(0).toUpperCase() + t.slice(1) : t === 'deviceId' ? 'sourceId' : t };if (void 0 !== i.ideal) { t.optional = t.optional || [];let r = {};typeof i.ideal === 'number' ? (r[a('min',n)] = i.ideal,t.optional.push(r),(r = {})[a('max',n)] = i.ideal,t.optional.push(r)) : (r[a('',n)] = i.ideal,t.optional.push(r)); } void 0 !== i.exact && typeof i.exact !== 'number' ? (t.mandatory = t.mandatory || {},t.mandatory[a('',n)] = i.exact) : ['min','max'].forEach(function(e) { void 0 !== i[e] && (t.mandatory = t.mandatory || {},t.mandatory[a(e,n)] = i[e]); }); } }),e.advanced && (t.optional = (t.optional || []).concat(e.advanced)),t };if (a = function(e,t,n) { return e.audio && (e.audio = h(e.audio)),e.video && (e.video = h(e.video)),v.log('chrome: ' + JSON.stringify(e)),navigator.webkitGetUserMedia(e,t,n) },navigator.getUserMedia = a,navigator.mediaDevices || (navigator.mediaDevices = { getUserMedia:_,enumerateDevices() { return new Promise(function(e) { const t = { audio:'audioinput',video:'videoinput' };return MediaStreamTrack.getSources(function(n) { e(n.map(function(e) { return { label:e.label,kind:t[e.kind],deviceId:e.id,groupId:'' } })); }) }) } }),navigator.mediaDevices.getUserMedia) { const y = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia = function(e) { return v.log('spec:   ' + JSON.stringify(e)),e.audio = h(e.audio),e.video = h(e.video),v.log('chrome: ' + JSON.stringify(e)),y(e) }; } else navigator.mediaDevices.getUserMedia = function(e) { return _(e) };void 0 === navigator.mediaDevices.addEventListener && (navigator.mediaDevices.addEventListener = function() { v.log('Dummy mediaDevices.addEventListener called.'); }),void 0 === navigator.mediaDevices.removeEventListener && (navigator.mediaDevices.removeEventListener = function() { v.log('Dummy mediaDevices.removeEventListener called.'); }),r = function(e,t) { d >= 43 ? p(e,t) : void 0 !== e.src ? e.src = t ? URL.createObjectURL(t) : null : v.log('Error attaching stream to element.'); },s = function(e,t) { d >= 43 ? p(e,f(t)) : e.src = t.src; }; } else navigator.mediaDevices && navigator.userAgent.match(/Edge\/(\d+).(\d+)$/) ? (v.log('This appears to be Edge'),c = 'edge',d = v.extractVersion(navigator.userAgent,/Edge\/(\d+).(\d+)$/,2),u = 12) : v.log('Browser does not appear to be WebRTC-capable');else v.log('This does not appear to be a browser'),c = 'not a browser';function _(e) { return new Promise(function(t,n) { a(e,t,n); }) } let b; var E = {};try { Object.defineProperty(E,'version',{ set(e) { d = e; } }); } catch (e) {}l ? b = l : typeof window !== 'undefined' && (b = window.RTCPeerConnection); },function(e,t,n) { const i = n(19);e.exports = function(e) { for (let t = 1;t < arguments.length;t++) { var n = arguments[t] != null ? arguments[t] : {}; let o = Object.keys(n);typeof Object.getOwnPropertySymbols === 'function' && (o = o.concat(Object.getOwnPropertySymbols(n).filter(function(e) { return Object.getOwnPropertyDescriptor(n,e).enumerable }))),o.forEach(function(t) { i(e,t,n[t]); }); } return e }; },function(e,t,n) { e.exports = n(24); },function(e,t,n) { const i = n(17); const o = n(18);e.exports = function(e,t,n) { const a = t && n || 0;typeof e === 'string' && (t = e === 'binary' ? new Array(16) : null,e = null);const r = (e = e || {}).random || (e.rng || i)();if (r[6] = 15 & r[6] | 64,r[8] = 63 & r[8] | 128,t) for (let s = 0;s < 16;++s)t[a + s] = r[s];return t || o(r) }; },function(e,t,n) {n.d(t,'a',function() { return s });const i = window.AudioContext || window.webkitAudioContext; const o = n(2); const a = o.getParameter; const r = o.setParameter; var s = function() { return a('AUDIO_CONTEXT') || (console.log('Creating Audio Context'),r('AUDIO_CONTEXT',function() { if (i) return new i;throw new Error('AUDIO_CONTEXT_NOT_SUPPORTED') }())),a('AUDIO_CONTEXT') }; },function(e,t,n) {t.__esModule = !0;let i; const o = n(0); const a = n(8);!function(e) { e.NEW = 'new',e.PREPARING_OFFER = 'preparing-offer',e.OFFER_SENT = 'offer-sent',e.ESTABLISHED = 'established',e.CLOSED = 'closed'; }(i || (i = {}));const r = function() { function e(e) { this.candidate = null,this.state = i.NEW,this.config = e,this.isSubscriber = this.config.isSubscriber,this.peerConnection = this.initPeecConnection(e),this.peerConnection.onicecandidate = this._onicecandidate.bind(this),this.peerConnection.oniceconnectionstatechange = this._oniceconnectionstatechange.bind(this),this.peerConnection.onaddstream = this._onaddstream.bind(this),this.peerConnection.ontrack = this._ontrack.bind(this),this.processSignalingMessage = this.setAnswer.bind(this),this.peerConnection.createOffer({ offerToReceiveAudio:!0,offerToReceiveVideo:!0 }).then(this.setLocalSDP.bind(this)),this.sendVideoStats = { id:'',type:'',mediaType:'',googCodecName:this.config.codec === 'h264' ? 'H264' : 'VP8',bytesSent:'0',packetsLost:'0',packetsSent:'0',googAdaptationChanges:'0',googAvgEncodeMs:'0',googEncodeUsagePercent:'0',googFirsReceived:'0',googFrameHeightSent:'0',googFrameHeightInput:'0',googFrameRateInput:'0',googFrameRateSent:'0',googFrameWidthSent:'0',googFrameWidthInput:'0',googNacksReceived:'0',googPlisReceived:'0',googRtt:'0',googFramesEncoded:'0' },this.sendAudioStats = { id:'',type:'',mediaType:'',googCodecName:'opus',aecDivergentFilterFraction:'0',audioInputLevel:'0',bytesSent:'0',packetsSent:'0',googEchoCancellationReturnLoss:'0',googEchoCancellationReturnLossEnhancement:'0' },this.receiveAudioStats = { id:'',type:'',mediaType:'',audioOutputLevel:'0',bytesReceived:'0',packetsLost:'0',packetsReceived:'0',googAccelerateRate:'0',googCurrentDelayMs:'0',googDecodingCNG:'0',googDecodingCTN:'0',googDecodingCTSG:'0',googDecodingNormal:'0',googDecodingPLC:'0',googDecodingPLCCNG:'0',googExpandRate:'0',googJitterBufferMs:'0',googJitterReceived:'0',googPreemptiveExpandRate:'0',googPreferredJitterBufferMs:'0',googSecondaryDecodedRate:'0',googSpeechExpandRate:'0' },this.receiveVideoStats = { id:'',type:'',mediaType:'',googTargetDelayMs:'0',packetsLost:'0',googDecodeMs:'0',googMaxDecodeMs:'0',googRenderDelayMs:'0',googFrameWidthReceived:'0',googFrameHeightReceived:'0',googFrameRateReceived:'0',googFrameRateDecoded:'0',googFrameRateOutput:'0',googFramesDecoded:'0',googFrameReceived:'0',googJitterBufferMs:'0',googCurrentDelayMs:'0',googMinPlayoutDelayMs:'0',googNacksSent:'0',googPlisSent:'0',googFirsSent:'0',bytesReceived:'0',packetsReceived:'0' }; } return e.prototype.addStream = function(e) { this.peerConnection.addStream(e); },e.prototype.setAnswer = function(e) { const t = JSON.parse(e);this.peerConnection.setRemoteDescription(new RTCSessionDescription({ sdp:t.sdp,type:'answer' })),this.onsignalingmessage && this.onsignalingmessage(''); },e.prototype.close = function() { this.peerConnection.close(); },e.prototype.getStats = function(e,t) { if (void 0 === t && (t = 500),t = t > 500 ? 500 : t,Date.now() - this.lastTimeGetStats < t) { const n = [];this.config.isSubscriber ? (n.push(this.receiveVideoStats),n.push(this.receiveAudioStats)) : (n.push(this.sendAudioStats),n.push(this.sendVideoStats)),n.push({ id:'time',startTime:this.connectedTime,timestamp:Date.now() }),e && e(n); } else this._getStats(e); },e.prototype._getStats = function(e) { const t = this; const n = [];this.peerConnection.getStats(null).then(function(i) { t.lastTimeGetStats = Date.now(),Object.keys(i).map(function(e) { const n = i[e];t.config.isSubscriber ? n.type && n.type === 'inboundrtp' && n.mediaType && n.mediaType === 'audio' ? (t.receiveAudioStats.id = n.id + 'recv',t.receiveAudioStats.type = n.type + '',t.receiveAudioStats.mediaType = n.mediaType + '',t.receiveAudioStats.packetsReceived = n.packetsReceived + '',t.receiveAudioStats.bytesReceived = n.bytesReceived + '',t.receiveAudioStats.packetsLost = n.packetsLost + '',t.receiveAudioStats.googJitterReceived = n.jitter + '') : n.type && n.type === 'inboundrtp' && n.mediaType && n.mediaType === 'video' ? (t.receiveVideoStats.id = n.id + 'recv',t.receiveVideoStats.type = n.type + '',t.receiveVideoStats.mediaType = n.mediaType + '',t.receiveVideoStats.packetsReceived = n.packetsReceived + '',t.receiveVideoStats.bytesReceived = n.bytesReceived + '',t.receiveVideoStats.packetsLost = n.packetsLost + '',t.receiveVideoStats.googJitterBufferMs = n.jitter + '',t.receiveVideoStats.googPlisSent = n.pliCount + '',t.receiveVideoStats.googFirsSent = n.firCount + '',t.receiveVideoStats.googNacksSent = n.nackCount + '') : n.remoteSource && n.type && n.type === 'track' && n.trackIdentifier && n.trackIdentifier.includes('v') ? (t.receiveVideoStats.googFrameHeightReceived = n.frameHeight + '',t.receiveVideoStats.googFrameWidthReceived = n.frameWidth + '',t.receiveVideoStats.googFrameRateDecoded = n.framesPerSecond + '',t.receiveVideoStats.googFrameRateOutput = n.framesPerSecond + '',t.receiveVideoStats.googFrameRateReceived = n.framesPerSecond + '',t.receiveVideoStats.googFramesDecoded = n.framesDecoded + '',t.receiveVideoStats.googFrameReceived = n.framesReceived + '') : n.remoteSource && n.type && n.type === 'track' && n.trackIdentifier && n.trackIdentifier.includes('a') && (t.receiveAudioStats.audioOutputLevel = n.audioLevel + '') : !n.isRemote && n.type && n.type === 'outboundrtp' && n.mediaType && n.mediaType === 'audio' ? (t.sendAudioStats.id = n.id + 'send',t.sendAudioStats.type = n.type + '',t.sendAudioStats.mediaType = n.mediaType + '',t.sendAudioStats.packetsSent = n.packetsSent + '',t.sendAudioStats.bytesSent = n.bytesSent + '') : !n.isRemote && n.type && n.type === 'outboundrtp' && n.mediaType && n.mediaType === 'video' ? (t.sendVideoStats.id = n.id + 'send',t.sendVideoStats.type = n.type + '',t.sendVideoStats.mediaType = n.mediaType + '',t.sendVideoStats.packetsSent = n.packetsSent + '',t.sendVideoStats.bytesSent = n.bytesSent + '',t.sendVideoStats.googRtt = n.roundTripTime + '',t.sendVideoStats.googPlisReceived = n.pliCount + '',t.sendVideoStats.googFirsReceived = n.firCount + '',t.sendVideoStats.googNacksReceived = n.nackCount + '') : !n.remoteSource && n.type && n.type === 'track' && n.framesSent && n.framesSent !== 0 && (t.sendVideoStats.googFrameHeightSent = n.frameHeight + '',t.sendVideoStats.googFrameHeightInput = n.frameHeight + '',t.sendVideoStats.googFrameWidthSent = n.frameWidth + '',t.sendVideoStats.googFrameWidthInput = n.frameWidth + '',t.sendVideoStats.googFramesEncoded = n.framesSent + '',t.sendVideoStats.googFrameRateSent = n.framesPerSecond + ''); }),t.config.isSubscriber ? (n.push(t.receiveVideoStats),n.push(t.receiveAudioStats)) : (n.push(t.sendAudioStats),n.push(t.sendVideoStats)),n.push({ id:'time',startTime:t.connectedTime,timestamp:Date.now() }),e && e(n); }); },e.prototype.getStatsRate = function(e) { this.getStats(e); },e.prototype.initPeecConnection = function(e) { const t = e.stunServerUrl; const n = e.turnServer; const i = e.iceServers;return this.pcConfig = { iceServers:[{ urls:'stun:webcs.agora.io:3478' }] },Array.isArray(i) ? this.pcConfig.iceServers = e.iceServers : t && (Array.isArray(t) ? t.map(function(e) { typeof e === 'string' && e !== '' && this.pcConfig.iceServers.push({ urls:e }); }) : typeof t === 'string' && t !== '' && this.pcConfig.iceServers.push({ urls:t })),n && (Array.isArray(n) ? n.map(function(e) { typeof e.url === 'string' && e.url !== '' && this.pcConfig.iceServers.push({ username:e.username,credential:e.credential,url:e.url }); }) : typeof n.url === 'string' && n.url !== '' && (this.pcConfig.iceServers.push({ username:n.username,credential:n.credential,credentialType:'password',urls:'turn:' + n.url + ':' + n.udpport + '?transport=udp' }),typeof n.tcpport === 'string' && n.tcpport !== '' && this.pcConfig.iceServers.push({ username:n.username,credential:n.credential,credentialType:'password',urls:'turn:' + n.url + ':' + n.tcpport + '?transport=tcp' }),!0 === n.forceturn && (this.pcConfig.iceTransportPolicy = 'relay'))),new a.RTCPeerConnection(this.pcConfig) },e.prototype._ontrack = function(e) { this.onaddstream && this.onaddstream(e,'ontrack'); },e.prototype._onaddstream = function(e) { this.onaddstream && this.onaddstream(e,'onaddstream'); },e.prototype._oniceconnectionstatechange = function(e) { e.currentTarget.iceConnectionState === 'connected' && (this.state = i.ESTABLISHED,this.connectedTime = Date.now()),this.oniceconnectionstatechange && this.oniceconnectionstatechange(e.currentTarget.iceConnectionState); },e.prototype._onicecandidate = function(e) { !this.candidate && e && (this.candidate = e.candidate,this.peerConnection.createOffer({ offerToReceiveAudio:!0,offerToReceiveVideo:!0 }).then(this.editLocalSDP.bind(this))
  .then(this.setLocalSDP.bind(this))
  .then(this.sendOffer.bind(this))
  .catch()); },e.prototype.setLocalSDP = function(e) { return this.peerConnection.setLocalDescription(new RTCSessionDescription({ sdp:e.sdp,type:'offer' })),this.state = i.PREPARING_OFFER,e },e.prototype.editLocalSDP = function(e) { return e.sdp = this.setBandWidth(e.sdp),e.sdp = this.reviseOpus(e.sdp),e.sdp = this.addCandidate(e.sdp),e },e.prototype.setSendRecv = function(e) { return e = (e = (e = e.replace(/a=recvonly\r\n/g,'a=sendrecv\r\n')).replace(/a=sendonly\r\n/g,'a=sendrecv\r\n')).replace(/a=inactive\r\n/g,'a=sendrecv\r\n') },e.prototype.setBandWidth = function(e) { let t; let n; const i = this.config; const a = i.codec; const r = i.minVideoBW; const s = i.maxVideoBW; const c = i.maxAudioBW; const d = i.clientId;if ((t = e.match(/m=video.*\r\n/)) && r && s) { n = t[0] + 'b=AS:' + s + '\r\n';let u = 0; let l = 0;a === 'h264' ? (u = e.search(/a=rtpmap:(\d+) H264\/90000\r\n/),l = e.search(/H264\/90000\r\n/)) : a === 'vp8' && (u = e.search(/a=rtpmap:(\d+) VP8\/90000\r\n/),l = e.search(/VP8\/90000\r\n/)),u !== -1 && l !== -1 && l - u > 10 && (n = n + 'a=fmtp:' + e.slice(u + 9,l - 1) + ' x-google-min-bitrate=' + r + '\r\n'),e = e.replace(t[0],n),o.default.debug('[' + d + ']Set Video Bitrate - min:' + r + ' max:' + s); } return (t = e.match(/m=audio.*\r\n/)) && c && (n = t[0] + 'b=AS:' + c + '\r\n',e = e.replace(t[0],n)),e },e.prototype.reviseOpus = function(e) { return e = (e = e.replace(/a=rtpmap:102 opus\/48000\/2/g,'a=rtpmap:111 opus/48000/2')).replace(/m=audio 9 UDP\/TLS\/RTP\/SAVPF 102 0 8 97 13 118 101/g,'m=audio 9 UDP/TLS/RTP/SAVPF 111 0 8 97 13 118 101') },e.prototype.addCandidate = function(e) { return e += 'a=candidate:2243255435 1 udp 2122194687 192.168.0.1 30000 typ host generation 0 network-id 1\r\n' },e.prototype.sendOffer = function(e) { this.config.callback(JSON.stringify({ sdp:e.sdp,messageType:'OFFER',tiebreaker:Math.floor(429496723 * Math.random() + 1) })),this.state = i.OFFER_SENT; },e }();t.default = r; },function(e,t,n) {const i = this && this.__awaiter || function(e,t,n,i) { return new (n || (n = Promise))(function(o,a) { function r(e) { try { c(i.next(e)); } catch (e) { a(e); } } function s(e) { try { c(i.throw(e)); } catch (e) { a(e); } } function c(e) { e.done ? o(e.value) : new n(function(t) { t(e.value); }).then(r,s); }c((i = i.apply(e,t || [])).next()); }) }; const o = this && this.__generator || function(e,t) { let n; let i; let o; let a; let r = { label:0,sent() { if (1 & o[0]) throw o[1];return o[1] },trys:[],ops:[] };return a = { next:s(0),throw:s(1),return:s(2) },typeof Symbol === 'function' && (a[Symbol.iterator] = function() { return this }),a;function s(a) { return function(s) { return function(a) { if (n) throw new TypeError('Generator is already executing.');for (;r;) try { if (n = 1,i && (o = 2 & a[0] ? i.return : a[0] ? i.throw || ((o = i.return) && o.call(i),0) : i.next) && !(o = o.call(i,a[1])).done) return o;switch (i = 0,o && (a = [2 & a[0],o.value]),a[0]) { case 0:case 1:o = a;break;case 4:return r.label++,{ value:a[1],done:!1 };case 5:r.label++,i = a[1],a = [0];continue;case 7:a = r.ops.pop(),r.trys.pop();continue;default:if (!(o = (o = r.trys).length > 0 && o[o.length - 1]) && (a[0] === 6 || a[0] === 2)) { r = 0;continue } if (a[0] === 3 && (!o || a[1] > o[0] && a[1] < o[3])) { r.label = a[1];break } if (a[0] === 6 && r.label < o[1]) { r.label = o[1],o = a;break } if (o && r.label < o[2]) { r.label = o[2],r.ops.push(a);break }o[2] && r.ops.pop(),r.trys.pop();continue }a = t.call(e,r); } catch (e) { a = [6,e],i = 0; } finally { n = o = 0; } if (5 & a[0]) throw a[1];return { value:a[0] ? a[1] : void 0,done:!0 } }([a,s]) } } }; const a = this;t.__esModule = !0;const r = n(20); const s = n(3); const c = n(0);t.getSupportedCodec = function(e) { return i(a,void 0,void 0,function() { let t,n,i,a,u;return o(this,function(o) { switch (o.label) { case 0:return t = { video:[],audio:[] },typeof window !== 'undefined' ? [3,1] : (c.default.error('getSupportedCodec: NOT_BROWSER_ENV'),[2,Promise.reject('NOT_BROWSER_ENV')]);case 1:try { n = r.createRTCPeerConnection({ iceServers:[] }); } catch (e) { return c.default.error('Failed to init RTCPeerConnection',e),[2,Promise.reject(e)] } return n ? [3,2] : (c.default.warning('getSupportedCodec: no RTCPeerConnection constructor is detected'),[2,Promise.resolve(t)]);case 2:return e && e.stream ? [3,7] : (i = { mandatory:{ OfferToReceiveAudio:!0,OfferToReceiveVideo:!0 } },a = void 0,(s.isSafari() || s.isFireFox() || s.isWeChatBrowser()) && n.addTransceiver ? (n.addTransceiver('audio'),n.addTransceiver('video'),[4,n.createOffer()]) : [3,4]);case 3:return a = o.sent(),[3,6];case 4:return [4,new Promise(function(e,t) { const o = setTimeout(function() { t('CREATEOFFER_TIMEOUT'); },3e3);n.createOffer(function(t) { clearTimeout(o),e(t); },function(e) { clearTimeout(o),t(e); },i); })];case 5:a = o.sent(),o.label = 6;case 6:return n.close(),u = a.sdp,[2,d(u)];case 7:return e.stream.getTracks && n.addTrack ? e.stream.getTracks().forEach(function(t) { n.addTrack(t,e.stream); }) : n.addStream(e.stream),a = void 0,s.isSafari() || s.isFireFox() ? [4,n.createOffer()] : [3,9];case 8:return a = o.sent(),[3,11];case 9:return [4,new Promise(function(e,t) { n.createOffer(e,t); })];case 10:a = o.sent(),o.label = 11;case 11:return n.close(),u = a.sdp,[2,d(u)] } }) }) };var d = function(e) { const t = { video:[],audio:[] };return e.match(/ VP8/i) && t.video.push('VP8'),e.match(/ H264/i) && t.video.push('H264'),e.match(/ opus/i) && t.audio.push('OPUS'),Promise.resolve(t) }; },function(e,t,n) { const i = n(21); const o = n(22); const a = n(23);e.exports = function(e) { return i(e) || o(e) || a() }; },function(e,t) { function n(e,t,n,i,o,a,r) { try { var s = e[a](r); var c = s.value; } catch (e) { return void n(e) }s.done ? t(c) : Promise.resolve(c).then(i,o); }e.exports = function(e) { return function() { const t = this; const i = arguments;return new Promise(function(o,a) { const r = e.apply(t,i);function s(e) { n(r,o,a,s,c,'next',e); } function c(e) { n(r,o,a,s,c,'throw',e); }s(void 0); }) } }; },function(e,t) { const n = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof window.msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);if (n) { const i = new Uint8Array(16);e.exports = function() { return n(i),i }; } else { const o = new Array(16);e.exports = function() { for (var e,t = 0;t < 16;t++)(3 & t) == 0 && (e = 4294967296 * Math.random()),o[t] = e >>> ((3 & t) << 3) & 255;return o }; } },function(e,t) { for (var n = [],i = 0;i < 256;++i)n[i] = (i + 256).toString(16).substr(1);e.exports = function(e,t) { let i = t || 0; const o = n;return [o[e[i++]],o[e[i++]],o[e[i++]],o[e[i++]],'-',o[e[i++]],o[e[i++]],'-',o[e[i++]],o[e[i++]],'-',o[e[i++]],o[e[i++]],'-',o[e[i++]],o[e[i++]],o[e[i++]],o[e[i++]],o[e[i++]],o[e[i++]]].join('') }; },function(e,t) { e.exports = function(e,t,n) { return t in e ? Object.defineProperty(e,t,{ value:n,enumerable:!0,configurable:!0,writable:!0 }) : e[t] = n,e }; },function(e,t,n) {t.__esModule = !0;const i = typeof window === 'object' && window.RTCPeerConnection; const o = typeof window === 'object' && window.webkitRTCPeerConnection; const a = typeof window === 'object' && window.mozRTCPeerConnection;t.createRTCPeerConnection = function(e) { const t = i || o || a;return t ? new t(e) : null }; },function(e,t) { e.exports = function(e) { if (Array.isArray(e)) { for (var t = 0,n = new Array(e.length);t < e.length;t++)n[t] = e[t];return n } }; },function(e,t) { e.exports = function(e) { if (Symbol.iterator in Object(e) || Object.prototype.toString.call(e) === '[object Arguments]') return Array.from(e) }; },function(e,t) { e.exports = function() { throw new TypeError('Invalid attempt to spread non-iterable instance') }; },function(e,t,n) { const i = function() { return this || typeof self === 'object' && self }() || Function('return this')(); const o = i.regeneratorRuntime && Object.getOwnPropertyNames(i).includes('regeneratorRuntime'); const a = o && i.regeneratorRuntime;if (i.regeneratorRuntime = void 0,e.exports = n(25),o)i.regeneratorRuntime = a;else try { delete i.regeneratorRuntime; } catch (e) { i.regeneratorRuntime = void 0; } },function(e,t) { !function(t) {let n; const i = Object.prototype; const o = i.hasOwnProperty; const a = typeof Symbol === 'function' ? Symbol : {}; const r = a.iterator || '@@iterator'; const s = a.asyncIterator || '@@asyncIterator'; const c = a.toStringTag || '@@toStringTag'; const d = typeof e === 'object'; let u = t.regeneratorRuntime;if (u)d && (e.exports = u);else { (u = t.regeneratorRuntime = d ? e.exports : {}).wrap = y;var l = 'suspendedStart'; var p = 'suspendedYield'; var f = 'executing'; var m = 'completed'; var g = {}; let v = {};v[r] = function() { return this };const S = Object.getPrototypeOf; const I = S && S(S(D([])));I && I !== i && o.call(I,r) && (v = I);const h = T.prototype = b.prototype = Object.create(v);E.prototype = h.constructor = T,T.constructor = E,T[c] = E.displayName = 'GeneratorFunction',u.isGeneratorFunction = function(e) { const t = typeof e === 'function' && e.constructor;return !!t && (t === E || (t.displayName || t.name) === 'GeneratorFunction') },u.mark = function(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e,T) : (e.__proto__ = T,c in e || (e[c] = 'GeneratorFunction')),e.prototype = Object.create(h),e },u.awrap = function(e) { return { __await:e } },A(R.prototype),R.prototype[s] = function() { return this },u.AsyncIterator = R,u.async = function(e,t,n,i) { const o = new R(y(e,t,n,i));return u.isGeneratorFunction(t) ? o : o.next().then(function(e) { return e.done ? e.value : o.next() }) },A(h),h[c] = 'Generator',h[r] = function() { return this },h.toString = function() { return '[object Generator]' },u.keys = function(e) { const t = [];for (const n in e)t.push(n);return t.reverse(),function n() { for (;t.length;) { const i = t.pop();if (i in e) return n.value = i,n.done = !1,n } return n.done = !0,n } },u.values = D,N.prototype = { constructor:N,reset(e) { if (this.prev = 0,this.next = 0,this.sent = this._sent = n,this.done = !1,this.delegate = null,this.method = 'next',this.arg = n,this.tryEntries.forEach(w),!e) for (const t in this)t.charAt(0) === 't' && o.call(this,t) && !isNaN(+t.slice(1)) && (this[t] = n); },stop() { this.done = !0;const e = this.tryEntries[0].completion;if (e.type === 'throw') throw e.arg;return this.rval },dispatchException(e) { if (this.done) throw e;const t = this;function i(i,o) { return s.type = 'throw',s.arg = e,t.next = i,o && (t.method = 'next',t.arg = n),!!o } for (let a = this.tryEntries.length - 1;a >= 0;--a) { const r = this.tryEntries[a]; var s = r.completion;if (r.tryLoc === 'root') return i('end');if (r.tryLoc <= this.prev) { const c = o.call(r,'catchLoc'); const d = o.call(r,'finallyLoc');if (c && d) { if (this.prev < r.catchLoc) return i(r.catchLoc,!0);if (this.prev < r.finallyLoc) return i(r.finallyLoc) } else if (c) { if (this.prev < r.catchLoc) return i(r.catchLoc,!0) } else { if (!d) throw new Error('try statement without catch or finally');if (this.prev < r.finallyLoc) return i(r.finallyLoc) } } } },abrupt(e,t) { for (let n = this.tryEntries.length - 1;n >= 0;--n) { const i = this.tryEntries[n];if (i.tryLoc <= this.prev && o.call(i,'finallyLoc') && this.prev < i.finallyLoc) { var a = i;break } }a && (e === 'break' || e === 'continue') && a.tryLoc <= t && t <= a.finallyLoc && (a = null);const r = a ? a.completion : {};return r.type = e,r.arg = t,a ? (this.method = 'next',this.next = a.finallyLoc,g) : this.complete(r) },complete(e,t) { if (e.type === 'throw') throw e.arg;return e.type === 'break' || e.type === 'continue' ? this.next = e.arg : e.type === 'return' ? (this.rval = this.arg = e.arg,this.method = 'return',this.next = 'end') : e.type === 'normal' && t && (this.next = t),g },finish(e) { for (let t = this.tryEntries.length - 1;t >= 0;--t) { const n = this.tryEntries[t];if (n.finallyLoc === e) return this.complete(n.completion,n.afterLoc),w(n),g } },catch(e) { for (let t = this.tryEntries.length - 1;t >= 0;--t) { const n = this.tryEntries[t];if (n.tryLoc === e) { const i = n.completion;if (i.type === 'throw') { var o = i.arg;w(n); } return o } } throw new Error('illegal catch attempt') },delegateYield(e,t,i) { return this.delegate = { iterator:D(e),resultName:t,nextLoc:i },this.method === 'next' && (this.arg = n),g } }; } function y(e,t,n,i) { const o = t && t.prototype instanceof b ? t : b; const a = Object.create(o.prototype); const r = new N(i || []);return a._invoke = function(e,t,n) { let i = l;return function(o,a) { if (i === f) throw new Error('Generator is already running');if (i === m) { if (o === 'throw') throw a;return k() } for (n.method = o,n.arg = a;;) { const r = n.delegate;if (r) { const s = C(r,n);if (s) { if (s === g) continue;return s } } if (n.method === 'next')n.sent = n._sent = n.arg;else if (n.method === 'throw') { if (i === l) throw i = m,n.arg;n.dispatchException(n.arg); } else n.method === 'return' && n.abrupt('return',n.arg);i = f;const c = _(e,t,n);if (c.type === 'normal') { if (i = n.done ? m : p,c.arg === g) continue;return { value:c.arg,done:n.done } }c.type === 'throw' && (i = m,n.method = 'throw',n.arg = c.arg); } } }(e,n,r),a } function _(e,t,n) { try { return { type:'normal',arg:e.call(t,n) } } catch (e) { return { type:'throw',arg:e } } } function b() {} function E() {} function T() {} function A(e) { ['next','throw','return'].forEach(function(t) { e[t] = function(e) { return this._invoke(t,e) }; }); } function R(e) { let t;this._invoke = function(n,i) { function a() { return new Promise(function(t,a) { !function t(n,i,a,r) { const s = _(e[n],e,i);if (s.type !== 'throw') { const c = s.arg; const d = c.value;return d && typeof d === 'object' && o.call(d,'__await') ? Promise.resolve(d.__await).then(function(e) { t('next',e,a,r); },function(e) { t('throw',e,a,r); }) : Promise.resolve(d).then(function(e) { c.value = e,a(c); },function(e) { return t('throw',e,a,r) }) }r(s.arg); }(n,i,t,a); }) } return t = t ? t.then(a,a) : a() }; } function C(e,t) { const i = e.iterator[t.method];if (i === n) { if (t.delegate = null,t.method === 'throw') { if (e.iterator.return && (t.method = 'return',t.arg = n,C(e,t),t.method === 'throw')) return g;t.method = 'throw',t.arg = new TypeError('The iterator does not provide a \'throw\' method'); } return g } const o = _(i,e.iterator,t.arg);if (o.type === 'throw') return t.method = 'throw',t.arg = o.arg,t.delegate = null,g;const a = o.arg;return a ? a.done ? (t[e.resultName] = a.value,t.next = e.nextLoc,t.method !== 'return' && (t.method = 'next',t.arg = n),t.delegate = null,g) : a : (t.method = 'throw',t.arg = new TypeError('iterator result is not an object'),t.delegate = null,g) } function O(e) { const t = { tryLoc:e[0] };1 in e && (t.catchLoc = e[1]),2 in e && (t.finallyLoc = e[2],t.afterLoc = e[3]),this.tryEntries.push(t); } function w(e) { const t = e.completion || {};t.type = 'normal',delete t.arg,e.completion = t; } function N(e) { this.tryEntries = [{ tryLoc:'root' }],e.forEach(O,this),this.reset(!0); } function D(e) { if (e) { const t = e[r];if (t) return t.call(e);if (typeof e.next === 'function') return e;if (!isNaN(e.length)) { let i = -1; const a = function t() { for (;++i < e.length;) if (o.call(e,i)) return t.value = e[i],t.done = !1,t;return t.value = n,t.done = !0,t };return a.next = a } } return { next:k } } function k() { return { value:n,done:!0 } } }(function() { return this || typeof self === 'object' && self }() || Function('return this')()); },function(e,t,n) {n.r(t);const o = n(2); const a = n(0); const r = n(1); const s = function() { const e = { dispatcher:{} };return e.dispatcher.eventListeners = {},e.addEventListener = function(t,n) { void 0 === e.dispatcher.eventListeners[t] && (e.dispatcher.eventListeners[t] = []),e.dispatcher.eventListeners[t].push(n); },e.hasListeners = function(t) { return !(!e.dispatcher.eventListeners[t] || !e.dispatcher.eventListeners[t].length) },e.on = e.addEventListener,e.removeEventListener = function(t,n) { let i;(i = e.dispatcher.eventListeners[t].indexOf(n)) !== -1 && e.dispatcher.eventListeners[t].splice(i,1); },e.dispatchEvent = function(t) { let n;for (n in e.dispatcher.eventListeners[t.type])e.dispatcher.eventListeners[t.type] && e.dispatcher.eventListeners[t.type].hasOwnProperty(n) && typeof e.dispatcher.eventListeners[t.type][n] === 'function' && e.dispatcher.eventListeners[t.type][n](t); },e.dispatchSocketEvent = function(t) { let n;for (n in e.dispatcher.eventListeners[t.type])e.dispatcher.eventListeners[t.type] && e.dispatcher.eventListeners[t.type].hasOwnProperty(n) && typeof e.dispatcher.eventListeners[t.type][n] === 'function' && e.dispatcher.eventListeners[t.type][n](t.msg); },e }; const c = function(e) { const t = {};return t.type = e.type,t }; const d = function(e) { const t = c(e);return t.stream = e.stream,t.reason = e.reason,t.msg = e.msg,t }; const u = function(e) { const t = c(e);return t.uid = e.uid,t.attr = e.attr,t.stream = e.stream,t }; const l = function(e) { const t = c(e);return t.msg = e.msg,t }; const p = function(e) { const t = c(e);return t.url = e.url,t.uid = e.uid,t.status = e.status,t.reason = e.reason,t }; const f = n(3); const m = function() {};m.prototype.set = function(e,t) { ['BatteryLevel'].includes(e) && (this[e] = t); };const g = new function() { const e = s();return e.states = { UNINIT:'UNINIT',INITING:'INITING',INITED:'INITED' },e.state = e.states.UNINIT,e.batteryManager = null,e._init = function(t,n) { e.state = e.states.INITING,navigator.getBattery ? navigator.getBattery().then(function(n) { e.batteryManager = n,t && setTimeout(function() { t(); },0); })
  .catch(function(e) { a.default.debug('navigator.getBattery is disabled',e),t && t(); }) : (e.state = e.states.INITED,t && t()); },e._getBatteryStats = function() { const t = {};return e.batteryManager && e.batteryManager.level ? t.BatteryLevel = Math.floor(100 * e.batteryManager.level) : t.BatteryLevel = 'UNSUPPORTED',t },e.getStats = function(t,n) { const i = new m; const o = e._getBatteryStats();o && o.BatteryLevel && i.set('BatteryLevel',o.BatteryLevel),t && t(i); },e._init(),e }; const v = n(4); const S = n.n(v); const I = function(e) { const t = s();return t.url = '.',t }; const h = n(8); const y = { 101100:'NO_FLAG_SET',101101:'FLAG_SET_BUT_EMPTY',101102:'INVALID_FALG_SET',101203:'NO_SERVICE_AVIABLE',0:'OK_CODE',5:'INVALID_VENDOR_KEY',7:'INVALID_CHANNEL_NAME',8:'INTERNAL_ERROR',9:'NO_AUTHORIZED',10:'DYNAMIC_KEY_TIMEOUT',11:'NO_ACTIVE_STATUS',13:'DYNAMIC_KEY_EXPIRED',14:'STATIC_USE_DYANMIC_KEY',15:'DYNAMIC_USE_STATIC_KEY' }; const _ = { 2000:'ERR_NO_VOCS_AVAILABLE',2001:'ERR_NO_VOS_AVAILABLE',2002:'ERR_JOIN_CHANNEL_TIMEOUT',2003:'WARN_REPEAT_JOIN',2004:'ERR_JOIN_BY_MULTI_IP',101:'ERR_INVALID_VENDOR_KEY',102:'ERR_INVALID_CHANNEL_NAME',103:'WARN_NO_AVAILABLE_CHANNEL',104:'WARN_LOOKUP_CHANNEL_TIMEOUT',105:'WARN_LOOKUP_CHANNEL_REJECTED',106:'WARN_OPEN_CHANNEL_TIMEOUT',107:'WARN_OPEN_CHANNEL_REJECTED',108:'WARN_REQUEST_DEFERRED',109:'ERR_DYNAMIC_KEY_TIMEOUT',110:'ERR_NO_AUTHORIZED',111:'ERR_VOM_SERVICE_UNAVAILABLE',112:'ERR_NO_CHANNEL_AVAILABLE_CODE',113:'ERR_TOO_MANY_USERS',114:'ERR_MASTER_VOCS_UNAVAILABLE',115:'ERR_INTERNAL_ERROR',116:'ERR_NO_ACTIVE_STATUS',117:'ERR_INVALID_UID',118:'ERR_DYNAMIC_KEY_EXPIRED',119:'ERR_STATIC_USE_DYANMIC_KE',120:'ERR_DYNAMIC_USE_STATIC_KE',2:'K_TIMESTAMP_EXPIRED',3:'K_CHANNEL_PERMISSION_INVALID',4:'K_CERTIFICATE_INVALID',5:'K_CHANNEL_NAME_EMPTY',6:'K_CHANNEL_NOT_FOUND',7:'K_TICKET_INVALID',8:'K_CHANNEL_CONFLICTED',9:'K_SERVICE_NOT_READY',10:'K_SERVICE_TOO_HEAVY',14:'K_UID_BANNED',15:'K_IP_BANNED',16:'K_CHANNEL_BANNED' }; const b = { 1:'ERROR_ILLEAGAL_APPID',2:'ERROR_ILLEAGAL_UID',3:'INTERNAL_SERVER_ERROR' }; const E = ['NO_SERVICE_AVIABLE']; const T = { 19:'ERR_ALREADY_IN_USE',10:'ERR_TIMEDOUT',3:'ERR_NOT_READY',9:'ERR_NO_PERMISSION',0:'UNKNOW_ERROR' }; const A = { FAILED:'FAILED',INVALID_KEY:'INVALID_KEY',INVALID_CLIENT_MODE:'INVALID_CLIENT_MODE',INVALID_CLIENT_CODEC:'INVALID_CLIENT_CODEC',CLIENT_MODE_CODEC_MISMATCH:'CLIENT_MODE_CODEC_MISMATCH',WEB_API_NOT_SUPPORTED:'WEB_API_NOT_SUPPORTED',INVALID_PARAMETER:'INVALID_PARAMETER',INVALID_OPERATION:'INVALID_OPERATION',INVALID_LOCAL_STREAM:'INVALID_LOCAL_STREAM',INVALID_REMOTE_STREAM:'INVALID_REMOTE_STREAM',INVALID_DYNAMIC_KEY:'INVALID_DYNAMIC_KEY',DYNAMIC_KEY_TIMEOUT:'DYNAMIC_KEY_TIMEOUT',NO_VOCS_AVAILABLE:'NO_VOCS_AVAILABLE',NO_VOS_AVAILABLE:'ERR_NO_VOS_AVAILABLE',JOIN_CHANNEL_TIMEOUT:'ERR_JOIN_CHANNEL_TIMEOUT',NO_AVAILABLE_CHANNEL:'NO_AVAILABLE_CHANNEL',LOOKUP_CHANNEL_TIMEOUT:'LOOKUP_CHANNEL_TIMEOUT',LOOKUP_CHANNEL_REJECTED:'LOOKUP_CHANNEL_REJECTED',OPEN_CHANNEL_TIMEOUT:'OPEN_CHANNEL_TIMEOUT',OPEN_CHANNEL_REJECTED:'OPEN_CHANNEL_REJECTED',REQUEST_DEFERRED:'REQUEST_DEFERRED',STREAM_ALREADY_PUBLISHED:'STREAM_ALREADY_PUBLISHED',STREAM_NOT_YET_PUBLISHED:'STREAM_NOT_YET_PUBLISHED',JOIN_TOO_FREQUENT:'JOIN_TOO_FREQUENT',SOCKET_ERROR:'SOCKET_ERROR',SOCKET_DISCONNECTED:'SOCKET_DISCONNECTED',PEERCONNECTION_FAILED:'PEERCONNECTION_FAILED',CONNECT_GATEWAY_ERROR:'CONNECT_GATEWAY_ERROR',SERVICE_NOT_AVAILABLE:'SERVICE_NOT_AVAILABLE',JOIN_CHANNEL_FAILED:'JOIN_CHANNEL_FAILED',PUBLISH_STREAM_FAILED:'PUBLISH_STREAM_FAILED',UNPUBLISH_STREAM_FAILED:'UNPUBLISH_STREAM_FAILED',SUBSCRIBE_STREAM_FAILED:'SUBSCRIBE_STREAM_FAILED',UNSUBSCRIBE_STREAM_FAILED:'UNSUBSCRIBE_STREAM_FAILED',NO_SUCH_REMOTE_STREAM:'NO_SUCH_REMOTE_STREAM',ERR_FAILED:'1',ERR_INVALID_VENDOR_KEY:'101',ERR_INVALID_CHANNEL_NAME:'102',WARN_NO_AVAILABLE_CHANNEL:'103',WARN_LOOKUP_CHANNEL_TIMEOUT:'104',WARN_LOOKUP_CHANNEL_REJECTED:'105',WARN_OPEN_CHANNEL_TIMEOUT:'106',WARN_OPEN_CHANNEL_REJECTED:'107',WARN_REQUEST_DEFERRED:'108',ERR_DYNAMIC_KEY_TIMEOUT:'109',ERR_INVALID_DYNAMIC_KEY:'110',ERR_NO_VOCS_AVAILABLE:'2000',ERR_NO_VOS_AVAILABLE:'2001',ERR_JOIN_CHANNEL_TIMEOUT:'2002',IOS_NOT_SUPPORT:'IOS_NOT_SUPPORT',WECHAT_NOT_SUPPORT:'WECHAT_NOT_SUPPORT',SHARING_SCREEN_NOT_SUPPORT:'SHARING_SCREEN_NOT_SUPPORT',STILL_ON_PUBLISHING:'STILL_ON_PUBLISHING',LOW_STREAM_ALREADY_PUBLISHED:'LOW_STREAM_ALREADY_PUBLISHED',LOW_STREAM_NOT_YET_PUBLISHED:'LOW_STREAM_ALREADY_PUBLISHED',HIGH_STREAM_NOT_VIDEO_TRACE:'HIGH_STREAM_NOT_VIDEO_TRACE',NOT_FIND_DEVICE_BY_LABEL:'NOT_FIND_DEVICE_BY_LABEL',ENABLE_DUALSTREAM_FAILED:'ENABLE_DUALSTREAM_FAILED',DISABLE_DUALSTREAM_FAILED:'DISABLE_DUALSTREAM_FAILED',PLAYER_NOT_FOUND:'PLAYER_NOT_FOUND',ELECTRON_NOT_SUPPORT_SHARING_SCREEN:'ELECTRON_NOT_SUPPORT_SHARING_SCREEN',BAD_ENVIRONMENT:'BAD_ENVIRONMENT' }; let R = 0; const C = function(e) { const t = I();t.id = e.id,t.playerId = R++,t.fit = e.options && e.options.fit,t.fit !== 'contain' && t.fit !== 'cover' && (t.fit = null),t.url = e.url,t.stream = e.stream.stream,t.elementID = e.elementID,t.setAudioOutput = function(e,n,i) { const o = t.video || t.audio;return o ? o.setSinkId ? void o.setSinkId(e).then(function() { return a.default.debug('[' + t.id + '] ' + 'video '.concat(t.id,' setAudioOutput ').concat(e,' SUCCESS')),o == t.video && t.audio ? t.audio.setSinkId(e) : Promise.resolve() })
  .then(function() { return a.default.debug('[' + t.id + '] ' + 'audio '.concat(t.id,' setAudioOutput ').concat(e,' SUCCESS')),n && n() })
  .catch(function(e) { return a.default.error('[' + t.id + '] VideoPlayer.setAudioOutput',e),i && i(e) }) : (a.default.error('[' + t.id + '] ',A.WEB_API_NOT_SUPPORTED),i && i(A.WEB_API_NOT_SUPPORTED)) : (a.default.error('[' + t.id + '] ',A.PLAYER_NOT_FOUND),i && i(A.PLAYER_NOT_FOUND)) },t.destroy = function() { a.default.debug('destroy '.concat(e.stream.local ? 'local' : 'remote',' Player ').concat(t.id)),Object(h.setSrcObject)(t.video,null),Object(h.setSrcObject)(t.audio,null),t.video.pause(),delete t.resizer,clearInterval(t.mediaPlayerTimer),t.mediaPlayerTimer = null,document.getElementById(t.div.id) && t.parentNode.contains(t.div) && t.parentNode.removeChild(t.div),['video','audio'].forEach(function(n) {const i = s[n];clearTimeout(i.playDeferTimeout),i.formerMediaState = null;const o = { playerId:t.playerId,stateId:i.stateId + 1,playDeferTimeout:null,error:!1,status:'aborted',reason:'stop',updatedAt:Date.now() };s[n] = o;const c = { type:'player-status-change',playerId:t.playerId,mediaType:n,status:o.status,reason:o.reason,isErrorState:!1 };a.default.debug('Media Player Status Change Triggered by destroy()',c),e.stream.dispatchEvent(c),r.b.reportApiInvoke(e.stream.sid,{ name:'Stream.playerStatusChange',options:c,tag:'tracer' })(); }); },t.div = document.createElement('div'),t.div.setAttribute('id','player_' + t.id),e.stream.video ? t.div.setAttribute('style','width: 100%; height: 100%; position: relative; background-color: black; overflow: hidden;') : t.div.setAttribute('style','width: 100%; height: 100%; position: relative; overflow: hidden;'),t.video = document.createElement('video'),t.video.setAttribute('id','video' + t.id),e.stream.local && !e.stream.screen ? e.stream.mirror ? t.video.setAttribute('style','width: 100%; height: 100%; position: absolute; transform: rotateY(180deg); object-fit: '.concat(t.fit || 'cover',';')) : t.video.setAttribute('style','width: 100%; height: 100%; position: absolute; object-fit: '.concat(t.fit || 'cover',';')) : e.stream.video ? t.video.setAttribute('style','width: 100%; height: 100%; position: absolute; object-fit: '.concat(t.fit || 'cover',';')) : e.stream.screen ? t.video.setAttribute('style','width: 100%; height: 100%; position: absolute; object-fit: '.concat(t.fit || 'contain')) : t.video.setAttribute('style','width: 100%; height: 100%; position: absolute; display: none; object-fit: '.concat(t.fit || 'cover'));const n = { autoplay:!0,muted:!!e.stream.local || !(!f.isSafari() && f.getBrowserOS() !== 'iOS') && 'video_element_muted',playsinline:!0,controls:!(!f.isSafari() && f.getBrowserOS() !== 'iOS' || e.stream.local),volume:null }; const i = S()({},n,e.options);!0 !== i.muted || i.volume || (i.volume = 0),i.autoplay && t.video.setAttribute('autoplay',''),!0 !== i.muted && i.muted !== 'video_element_muted' || (t.video.setAttribute('muted',''),t.video.muted = !0),i.playsinline && t.video.setAttribute('playsinline',''),i.controls && t.video.setAttribute('controls',''),Number.isFinite(i.volume) && (t.video.volume = i.volume),t.audio = document.createElement('audio'),t.audio.setAttribute('id','audio' + t.id),i.autoplay && t.audio.setAttribute('autoplay',''),!0 === i.muted && t.audio.setAttribute('muted',''),!0 === i.muted && (t.audio.muted = !0),i.playsinline && t.audio.setAttribute('playsinline',''),Number.isFinite(i.volume) && (t.audio.volume = i.volume),void 0 !== t.elementID ? (document.getElementById(t.elementID).appendChild(t.div),t.container = document.getElementById(t.elementID)) : (document.body.appendChild(t.div),t.container = document.body),t.parentNode = t.div.parentNode;var s = { video:{ playerId:t.playerId,stateId:0,playDeferTimeout:null,error:!1,status:'init',reason:null,updatedAt:Date.now() },audio:{ playerId:t.playerId,stateId:0,playDeferTimeout:null,error:!1,status:'init',reason:null,updatedAt:Date.now() } };t.mediaElemExists = function(e) { for (var t = e,n = 0;n < Object(o.getParameter)('MEDIA_ELEMENT_EXISTS_DEPTH') && t;n++)t = t.parentNode;return !!t };const c = function(e) { return t.mediaElemExists(e) ? e.paused ? 'paused' : 'play' : 'aborted' }; const d = function(e,t,n) { const i = c(e); let o = !0;return i === 'paused' ? (t === 'audio' && !0 === n.muted && (o = !1),n.autoplay || (o = !1)) : i === 'play' ? t === 'video' ? o = !1 : !0 === n.muted ? e.muted && (o = !1) : e.muted || (o = !1) : i === 'aborted' && (o = !1),o }; const u = function(n) { let u; const l = this;if (l === t.video ? u = 'video' : l === t.audio && (u = 'audio'),u) { n.type || a.default.error('Unexpected evt',n);const p = c(l);clearTimeout(s[u].playDeferTimeout),s[u].playDeferTimeout = setTimeout(function() { s[u].playDeferTimeout = null;const o = s[u]; const f = c(l);if (p === f) { const m = { playerId:t.playerId,stateId:o.stateId + 1,playDeferTimeout:null,error:d(l,u,i),status:c(l),reason:n.type,updatedAt:Date.now() };if (o.status !== m.status) { s[u] = m;const g = { type:'player-status-change',playerId:t.playerId,mediaType:u,status:m.status,reason:m.reason,isErrorState:m.error };a.default.debug('Media Player Status Change',g),e.stream.dispatchEvent(g),r.b.reportApiInvoke(e.stream.sid,{ name:'Stream.playerStatusChange',options:g,tag:'tracer' })(); } } else a.default.debug('Status Change after event Triggered.' + 'Stream '.concat(t.id,' PlayerId ').concat(t.playerId,' mediaType ')
  .concat(u,' Status ')
  .concat(p,'=>')
  .concat(f)); },Object(o.getParameter)('PLAYER_STATE_DEFER')); } else a.default.error('Unknown media element',l); };if (t.mediaPlayerTimer = setInterval(function() { ['video','audio'].forEach(function(n) { const o = t[n]; const u = s[n];if (!u.playDeferTimeout) { const l = { playerId:t.playerId,stateId:u.stateId + 1,playDeferTimeout:null,error:d(o,n,i),status:c(o),reason:'timer',updatedAt:Date.now() };if (u.status !== l.status) { a.default.debug('Player '.concat(t.playerId,' ').concat(n,' Status Changed Detected by Timer: ')
  .concat(u.status,'=>')
  .concat(l.status)),s[n] = l;const p = { type:'player-status-change',playerId:t.playerId,mediaType:n,status:l.status,reason:l.reason,isErrorState:l.error };a.default.debug('Media Player Status Change',p),e.stream.dispatchEvent(p),r.b.reportApiInvoke(e.stream.sid,{ name:'Stream.playerStatusChange',options:p,tag:'tracer' })(); } } }); },Object(o.getParameter)('PLAYER_STATE_DEFER')),t.video.addEventListener('playing',function(e) { !function e() { t.video.videoWidth * t.video.videoHeight > 4 ? a.default.debug('[' + t.id + '] video dimensions:',t.video.videoWidth,t.video.videoHeight) : setTimeout(e,50); }(); }),t.video.addEventListener('playing',u),t.video.addEventListener('canplay',u),t.video.addEventListener('abort',u),t.video.addEventListener('onerror',u),t.video.addEventListener('suspend',u),t.video.addEventListener('stalled',u),t.video.addEventListener('pause',u),t.audio.addEventListener('playing',u),t.audio.addEventListener('canplay',u),t.audio.addEventListener('abort',u),t.audio.addEventListener('onerror',u),t.audio.addEventListener('suspend',u),t.audio.addEventListener('stalled',u),t.audio.addEventListener('pause',u),e.stream.hasVideo() || e.stream.hasScreen())t.div.appendChild(t.video),t.div.appendChild(t.audio),f.isEdge() ? t.video.srcObject = e.stream.stream : (Object(h.attachMediaStream)(t.video,e.stream.stream),Object(h.attachMediaStream)(t.audio,e.stream.stream));else if (!1 !== i.muted && i.muted !== 'video_element_muted' || (t.video.removeAttribute('muted'),t.video.muted = !1),t.div.appendChild(t.video),window.MediaStream && f.isSafari()) { const l = new MediaStream(e.stream.stream.getAudioTracks());Object(h.setSrcObject)(t.video,l); } else Object(h.setSrcObject)(t.video,e.stream.stream);return t.setAudioVolume = function(e) { let n = parseInt(e) / 100;isFinite(n) && (n < 0 ? n = 0 : n > 1 && (n = 1),t.video && (t.video.volume = n),t.audio && (t.audio.volume = n)); },t }; const O = function(e) { const t = {}; const n = h.RTCPeerConnection;t.uid = e.uid,t.isVideoMute = e.isVideoMute,t.isAudioMute = e.isAudioMute,t.isSubscriber = e.isSubscriber,t.clientId = e.clientId,t.filterStatsCache = [],t.originStatsCache = [],t.lastTimeGetStats = null,t.pc_config = { iceServers:[{ url:'stun:webcs.agora.io:3478' }] },t.con = { optional:[{ DtlsSrtpKeyAgreement:!0 }] },Array.isArray(e.iceServers) ? t.pc_config.iceServers = e.iceServers : (e.stunServerUrl && (Array.isArray(e.stunServerUrl) ? e.stunServerUrl.map(function(e) { typeof e === 'string' && e !== '' && t.pc_config.iceServers.push({ url:e }); }) : typeof e.stunServerUrl === 'string' && e.stunServerUrl !== '' && t.pc_config.iceServers.push({ url:e.stunServerUrl })),e.turnServer && (Array.isArray(e.turnServer) ? e.turnServer.map(function(e) { typeof e.url === 'string' && e.url !== '' && t.pc_config.iceServers.push({ username:e.username,credential:e.credential,url:e.url }); }) : typeof e.turnServer.url === 'string' && e.turnServer.url !== '' && (t.pc_config.iceServers.push({ username:e.turnServer.username,credential:e.turnServer.credential,credentialType:'password',urls:'turn:' + e.turnServer.url + ':' + e.turnServer.udpport + '?transport=udp' }),typeof e.turnServer.tcpport === 'string' && e.turnServer.tcpport !== '' && t.pc_config.iceServers.push({ username:e.turnServer.username,credential:e.turnServer.credential,credentialType:'password',urls:'turn:' + e.turnServer.url + ':' + e.turnServer.tcpport + '?transport=tcp' }),!0 === e.turnServer.forceturn && (t.pc_config.iceTransportPolicy = 'relay')))),void 0 === e.audio && (e.audio = !0),void 0 === e.video && (e.video = !0),t.mediaConstraints = { mandatory:{ OfferToReceiveVideo:e.video,OfferToReceiveAudio:e.audio } },t.roapSessionId = 103;try { t.pc_config.sdpSemantics = 'plan-b',t.peerConnection = new n(t.pc_config,t.con); } catch (e) { delete t.pc_config.sdpSemantics,t.peerConnection = new n(t.pc_config,t.con); }t.iceCandidateTimer = setTimeout(function() { t.iceCandidateTimer = null,a.default.debug('['.concat(t.clientId,']Candidates collected: ').concat(t.iceCandidateCount)),t.moreIceComing && (t.moreIceComing = !1,t.markActionNeeded()); },Object(o.getParameter)('CANDIDATE_TIMEOUT')),t.peerConnection.onicecandidate = function(e) { let n,i,o,r;i = (n = t.peerConnection.localDescription.sdp).match(/a=candidate:.+typ\ssrflx.+\r\n/),o = n.match(/a=candidate:.+typ\shost.+\r\n/),r = n.match(/a=candidate:.+typ\srelay.+\r\n/),i === null && o === null && r === null || void 0 !== t.ice || !t.iceCandidateTimer || (a.default.debug('[' + t.clientId + ']srflx candidate : ' + i + ' relay candidate: ' + r + ' host candidate : ' + o),clearTimeout(t.iceCandidateTimer),t.iceCandidateTimer = null,t.ice = 0,t.moreIceComing = !1,t.markActionNeeded()),t.iceCandidateCount = t.iceCandidateCount + 1; },a.default.debug('[' + t.clientId + ']Created webkitRTCPeerConnnection with config "' + JSON.stringify(t.pc_config) + '".');const i = function(t) { return e.screen && (t = t.replace('a=x-google-flag:conference\r\n','')),t }; const r = function(n) { let i,o;if ((i = n.match(/m=video.*\r\n/)) && e.minVideoBW && e.maxVideoBW) { o = i[0] + 'b=AS:' + e.maxVideoBW + '\r\n';let r = 0; let s = 0;e.codec === 'h264' ? (r = n.search(/a=rtpmap:(\d+) H264\/90000\r\n/),s = n.search(/H264\/90000\r\n/)) : e.codec === 'vp8' && (r = n.search(/a=rtpmap:(\d+) VP8\/90000\r\n/),s = n.search(/VP8\/90000\r\n/)),r !== -1 && s !== -1 && s - r > 10 && (o = o + 'a=fmtp:' + n.slice(r + 9,s - 1) + ' x-google-min-bitrate=' + e.minVideoBW + '\r\n'),n = n.replace(i[0],o),a.default.debug('[' + t.clientId + ']Set Video Bitrate - min:' + e.minVideoBW + ' max:' + e.maxVideoBW); } return (i = n.match(/m=audio.*\r\n/)) && e.maxAudioBW && (o = i[0] + 'b=AS:' + e.maxAudioBW + '\r\n',n = n.replace(i[0],o)),n };return t.processSignalingMessage = function(e) { let n; const o = JSON.parse(e);t.incomingMessage = o,t.state === 'new' ? o.messageType === 'OFFER' ? (n = { sdp:o.sdp,type:'offer' },t.peerConnection.setRemoteDescription(new RTCSessionDescription(n)),t.state = 'offer-received',t.markActionNeeded()) : t.error('Illegal message for this state: ' + o.messageType + ' in state ' + t.state) : t.state === 'offer-sent' ? o.messageType === 'ANSWER' ? ((n = { sdp:o.sdp,type:'answer' }).sdp = i(n.sdp),n.sdp = r(n.sdp),t.peerConnection.setRemoteDescription(new RTCSessionDescription(n)),t.sendOK(),t.state = 'established') : o.messageType === 'pr-answer' ? (n = { sdp:o.sdp,type:'pr-answer' },t.peerConnection.setRemoteDescription(new RTCSessionDescription(n))) : o.messageType === 'offer' ? t.error('Not written yet') : t.error('Illegal message for this state: ' + o.messageType + ' in state ' + t.state) : t.state === 'established' && (o.messageType === 'OFFER' ? (n = { sdp:o.sdp,type:'offer' },t.peerConnection.setRemoteDescription(new RTCSessionDescription(n)),t.state = 'offer-received',t.markActionNeeded()) : o.messageType === 'ANSWER' ? ((n = { sdp:o.sdp,type:'answer' }).sdp = i(n.sdp),n.sdp = r(n.sdp),t.peerConnection.setRemoteDescription(new RTCSessionDescription(n))) : t.error('Illegal message for this state: ' + o.messageType + ' in state ' + t.state)); },t.getVideoRelatedStats = function(e) { t.peerConnection.getStats(function(n) { Object.keys(n).forEach(function(i) { const o = n[i];t.isSubscriber ? o.mediaType === 'video' && o.id && ~o.id.indexOf('recv') && e && e({ mediaType:'video',peerId:t.uid,isVideoMute:t.isVideoMute,frameRateReceived:o.googFrameRateReceived,frameRateDecoded:o.googFrameRateDecoded,bytesReceived:o.bytesReceived,packetsReceived:o.packetsReceived,packetsLost:o.packetsLost }) : o.mediaType === 'video' && o.id && ~o.id.indexOf('send') && e && e({ mediaType:'video',isVideoMute:t.isVideoMute,frameRateInput:o.googFrameRateInput,frameRateSent:o.googFrameRateSent,googRtt:o.googRtt }); }); }); },t.getAudioRelatedStats = function(e) { t.peerConnection.getStats(function(n) { Object.keys(n).forEach(function(i) { const o = n[i];t.isSubscriber && o.mediaType === 'audio' && o.id && ~o.id.indexOf('recv') && e && e({ mediaType:'audio',peerId:t.uid,isAudioMute:t.isAudioMute,frameDropped:parseInt(o.googDecodingPLC) + parseInt(o.googDecodingPLCCNG) + '',frameReceived:o.googDecodingCTN,googJitterReceived:o.googJitterReceived,bytesReceived:o.bytesReceived,packetsReceived:o.packetsReceived,packetsLost:o.packetsLost }); }); }); },t.getStatsRate = function(e) { t.getStats(function(t) { e(t); }); },t.getStats = function(e,n) { n = (n = n || 500) > 500 ? 500 : n,t.lastTimeGetStats && Date.now() - t.lastTimeGetStats < n ? e && e(t.filterStatsCache,t.originStatsCache) : this._getStats(function(n,i) { t.filterStatsCache = n,t.originStatsCache = i,t.lastTimeGetStats = Date.now(),e && e(n,i); }); },t._getStats = function(e) { t.peerConnection.getStats(function(n) { const i = []; const o = []; let a = null;Object.keys(n).forEach(function(e) { const t = n[e];o.push(t),t.type !== 'ssrc' && t.type !== 'VideoBwe' || (a = t.timestamp,i.push(t)); }),i.push({ id:'time',startTime:t.connectedTime,timestamp:a || new Date }),e(i,o); }); },t.addTrack = function(e,n) { t.peerConnection.addTrack(e,n); },t.removeTrack = function(e,n) { t.peerConnection.removeTrack(t.peerConnection.getSenders().find(function(t) { return t.track == e })); },t.addStream = function(e) { t.peerConnection.addStream(e),t.markActionNeeded(); },t.removeStream = function() { t.markActionNeeded(); },t.close = function() { t.state = 'closed',t.peerConnection.close(); },t.markActionNeeded = function() { t.actionNeeded = !0,t.doLater(function() { t.onstablestate(); }); },t.doLater = function(e) { window.setTimeout(e,1); },t.onstablestate = function() { let e;if (t.actionNeeded) { if (t.state === 'new' || t.state === 'established')t.peerConnection.createOffer(function(e) { if (e.sdp !== t.prevOffer) return t.peerConnection.setLocalDescription(e),t.state = 'preparing-offer',void t.markActionNeeded();a.default.debug('[' + t.clientId + ']Not sending a new offer'); },function(e) { a.default.debug('[' + t.clientId + ']peer connection create offer failed ',e); },t.mediaConstraints);else if (t.state === 'preparing-offer') { if (t.moreIceComing) return;t.prevOffer = t.peerConnection.localDescription.sdp,t.offerCandidates = t.prevOffer.match(/a=candidate.+\r\n/g) || [],t.offerCandidates.length || (a.default.warning('['.concat(t.clientId,']No Ice Candidate generated')),Object(o.getParameter)('SHIM_CANDIDATE') ? (a.default.debug('Shimming fake candidate'),t.prevOffer += 'a=candidate:2243255435 1 udp 2122194687 192.168.0.1 30000 typ host generation 0 network-id 1\r\n') : a.default.error('['.concat(t.clientId,']None Ice Candidate not allowed'))),t.prevOffer = t.prevOffer.replace(/a=candidate:.+typ\shost.+\r\n/g,'a=candidate:2243255435 1 udp 2122194687 192.168.0.1 30000 typ host generation 0 network-id 1\r\n'),t.sendMessage('OFFER',t.prevOffer),t.state = 'offer-sent'; } else if (t.state === 'offer-received')t.peerConnection.createAnswer(function(e) { if (t.peerConnection.setLocalDescription(e),t.state = 'offer-received-preparing-answer',t.iceStarted)t.markActionNeeded();else { const n = new Date;a.default.debug('[' + t.clientId + ']' + n.getTime() + ': Starting ICE in responder'),t.iceStarted = !0; } },function(e) { a.default.debug('[' + t.clientId + ']peer connection create answer failed ',e); },t.mediaConstraints);else if (t.state === 'offer-received-preparing-answer') { if (t.moreIceComing) return;e = t.peerConnection.localDescription.sdp,t.sendMessage('ANSWER',e),t.state = 'established'; } else t.error('Dazed and confused in state ' + t.state + ', stopping here');t.actionNeeded = !1; } },t.sendOK = function() { t.sendMessage('OK'); },t.sendMessage = function(e,n) { const i = {};i.messageType = e,i.sdp = n,e === 'OFFER' ? (i.offererSessionId = t.sessionId,i.answererSessionId = t.otherSessionId,i.seq = t.sequenceNumber += 1,i.tiebreaker = Math.floor(429496723 * Math.random() + 1)) : (i.offererSessionId = t.incomingMessage.offererSessionId,i.answererSessionId = t.sessionId,i.seq = t.incomingMessage.seq),t.onsignalingmessage(JSON.stringify(i)); },t._getSender = function(e) { if (t.peerConnection && t.peerConnection.getSenders) { const n = t.peerConnection.getSenders().find(function(t) { return t.track.kind == e });if (n) return n } return null },t.hasSender = function(e) { return !!t._getSender(e) },t.replaceTrack = function(e,n,i) { const o = t._getSender(e.kind);if (!o) return i('NO_SENDER_FOUND');try { o.replaceTrack(e); } catch (e) { return i && i(e) }setTimeout(function() { return n && n() },50); },t.error = function(e) { throw 'Error in RoapOnJsep: ' + e },t.sessionId = t.roapSessionId += 1,t.sequenceNumber = 0,t.actionNeeded = !1,t.iceStarted = !1,t.moreIceComing = !0,t.iceCandidateCount = 0,t.onsignalingmessage = e.callback,t.peerConnection.ontrack = function(e) { t.onaddstream && (t.onaddstream(e,'ontrack'),t.peerConnection.onaddstream = null); },t.peerConnection.onaddstream = function(e) { t.onaddstream && (t.onaddstream(e,'onaddstream'),t.peerConnection.ontrack = null); },t.peerConnection.onremovestream = function(e) { t.onremovestream && t.onremovestream(e); },t.peerConnection.oniceconnectionstatechange = function(e) { e.currentTarget.iceConnectionState === 'connected' && (t.connectedTime = new Date),t.oniceconnectionstatechange && t.oniceconnectionstatechange(e.currentTarget.iceConnectionState); },t.renegotiate = function() { void 0 !== t.prevOffer && t.peerConnection.createOffer().then(function(e) { return e.sdp = e.sdp.replace(/a=recvonly\r\n/g,'a=inactive\r\n'),e.sdp = i(e.sdp),e.sdp = r(e.sdp),t.peerConnection.setLocalDescription(e) })
  .then(function() { t.onnegotiationneeded && t.onnegotiationneeded(t.peerConnection.localDescription.sdp); })
  .catch(function(e) { console.log('createOffer error: ',e); }); },t.peerConnection.onnegotiationneeded = t.renegotiate,t.onaddstream = null,t.onremovestream = null,t.onnegotiationneeded = null,t.state = 'new',t.markActionNeeded(),t }; const w = function(e) { const t = {}; const n = h.RTCPeerConnection;t.uid = e.uid,t.isVideoMute = e.isVideoMute,t.isAudioMute = e.isAudioMute,t.isSubscriber = e.isSubscriber,t.clientId = e.clientId,t.filterStatsCache = [],t.originStatsCache = [],t.lastTimeGetStats = null,t.pc_config = { iceServers:[{ urls:['stun:webcs.agora.io:3478','stun:stun.l.google.com:19302'] }],bundlePolicy:'max-bundle' },t.con = { optional:[{ DtlsSrtpKeyAgreement:!0 }] },Array.isArray(e.iceServers) ? t.pc_config.iceServers = e.iceServers : (e.stunServerUrl && (Array.isArray(e.stunServerUrl) ? e.stunServerUrl.map(function(e) { typeof e === 'string' && e !== '' && t.pc_config.iceServers.push({ url:e }); }) : typeof e.stunServerUrl === 'string' && e.stunServerUrl !== '' && t.pc_config.iceServers.push({ url:e.stunServerUrl })),e.turnServer && (Array.isArray(e.turnServer) ? e.turnServer.map(function(e) { typeof e.url === 'string' && e.url !== '' && t.pc_config.iceServers.push({ username:e.username,credential:e.credential,url:e.url }); }) : typeof e.turnServer.url === 'string' && e.turnServer.url !== '' && (t.pc_config.iceServers.push({ username:e.turnServer.username,credential:e.turnServer.credential,credentialType:'password',urls:['turn:' + e.turnServer.url + ':' + e.turnServer.udpport + '?transport=udp'] }),typeof e.turnServer.tcpport === 'string' && e.turnServer.tcpport !== '' && t.pc_config.iceServers.push({ username:e.turnServer.username,credential:e.turnServer.credential,credentialType:'password',urls:['turn:' + e.turnServer.url + ':' + e.turnServer.tcpport + '?transport=tcp'] }),!0 === e.turnServer.forceturn && (t.pc_config.iceTransportPolicy = 'relay')))),void 0 === e.audio && (e.audio = !0),void 0 === e.video && (e.video = !0),t.mediaConstraints = { mandatory:{ OfferToReceiveVideo:e.video,OfferToReceiveAudio:e.audio } },t.roapSessionId = 103;try { t.pc_config.sdpSemantics = 'plan-b',t.peerConnection = new n(t.pc_config,t.con); } catch (e) { delete t.pc_config.sdpSemantics,t.peerConnection = new n(t.pc_config,t.con); }a.default.debug('[' + t.clientId + ']safari Created RTCPeerConnnection with config "' + JSON.stringify(t.pc_config) + '".'),t.iceCandidateTimer = setTimeout(function() { t.iceCandidateTimer = null,a.default.debug('['.concat(t.clientId,']Candidates collected: ').concat(t.iceCandidateCount)),t.moreIceComing && (t.moreIceComing = !1,t.markActionNeeded()); },Object(o.getParameter)('CANDIDATE_TIMEOUT')),t.peerConnection.onicecandidate = function(e) { let n,i,o,r;i = (n = t.peerConnection.localDescription.sdp).match(/a=candidate:.+typ\ssrflx.+\r\n/),o = n.match(/a=candidate:.+typ\shost.+\r\n/),r = n.match(/a=candidate:.+typ\srelay.+\r\n/),t.iceCandidateCount === 0 && (t.timeout = setTimeout(function() { t.moreIceComing && (t.moreIceComing = !1,t.markActionNeeded()); },1e3)),i === null && o === null && r === null || void 0 !== t.ice || !t.iceCandidateTimer || (a.default.debug('[' + t.clientId + ']srflx candidate : ' + i + ' relay candidate: ' + r + ' host candidate : ' + o),clearTimeout(t.iceCandidateTimer),t.iceCandidateTimer = null,t.ice = 0,t.moreIceComing = !1,t.markActionNeeded()),t.iceCandidateCount = t.iceCandidateCount + 1; };const i = function(t) { return e.screen && (t = t.replace('a=x-google-flag:conference\r\n','')),t }; const r = function(n) { let i,o;return (i = n.match(/m=video.*\r\n/)) && e.minVideoBW && e.maxVideoBW && (o = i[0] + 'b=AS:' + e.maxVideoBW + '\r\n',n = n.replace(i[0],o),a.default.debug('[' + t.clientId + ']Set Video Bitrate - min:' + e.minVideoBW + ' max:' + e.maxVideoBW)),(i = n.match(/m=audio.*\r\n/)) && e.maxAudioBW && (o = i[0] + 'b=AS:' + e.maxAudioBW + '\r\n',n = n.replace(i[0],o)),n };t.processSignalingMessage = function(e) { let n; const o = JSON.parse(e);t.incomingMessage = o,t.state === 'new' ? o.messageType === 'OFFER' ? (n = { sdp:o.sdp,type:'offer' },t.peerConnection.setRemoteDescription(new RTCSessionDescription(n)),t.state = 'offer-received',t.markActionNeeded()) : t.error('Illegal message for this state: ' + o.messageType + ' in state ' + t.state) : t.state === 'offer-sent' ? o.messageType === 'ANSWER' ? ((n = { sdp:o.sdp,type:'answer' }).sdp = i(n.sdp),n.sdp = r(n.sdp),n.sdp = n.sdp.replace(/a=x-google-flag:conference\r\n/g,''),t.peerConnection.setRemoteDescription(new RTCSessionDescription(n)),t.sendOK(),t.state = 'established') : o.messageType === 'pr-answer' ? (n = { sdp:o.sdp,type:'pr-answer' },t.peerConnection.setRemoteDescription(new RTCSessionDescription(n))) : o.messageType === 'offer' ? t.error('Not written yet') : t.error('Illegal message for this state: ' + o.messageType + ' in state ' + t.state) : t.state === 'established' && (o.messageType === 'OFFER' ? (n = { sdp:o.sdp,type:'offer' },t.peerConnection.setRemoteDescription(new RTCSessionDescription(n)),t.state = 'offer-received',t.markActionNeeded()) : o.messageType === 'ANSWER' ? ((n = { sdp:o.sdp,type:'answer' }).sdp = i(n.sdp),n.sdp = r(n.sdp),t.peerConnection.setRemoteDescription(new RTCSessionDescription(n))) : t.error('Illegal message for this state: ' + o.messageType + ' in state ' + t.state)); };const s = { id:'',type:'',mediaType:'',googCodecName:'opus',aecDivergentFilterFraction:'0',audioInputLevel:'0',bytesSent:'0',packetsSent:'0',googEchoCancellationReturnLoss:'0',googEchoCancellationReturnLossEnhancement:'0' }; const c = { id:'',type:'',mediaType:'',googCodecName:e.codec === 'h264' ? 'H264' : 'VP8',bytesSent:'0',packetsLost:'0',packetsSent:'0',googAdaptationChanges:'0',googAvgEncodeMs:'0',googEncodeUsagePercent:'0',googFirsReceived:'0',googFrameHeightSent:'0',googFrameHeightInput:'0',googFrameRateInput:'0',googFrameRateSent:'0',googFrameWidthSent:'0',googFrameWidthInput:'0',googNacksReceived:'0',googPlisReceived:'0',googRtt:'0',googFramesEncoded:'0' }; const d = { id:'',type:'',mediaType:'',audioOutputLevel:'0',bytesReceived:'0',packetsLost:'0',packetsReceived:'0',googAccelerateRate:'0',googCurrentDelayMs:'0',googDecodingCNG:'0',googDecodingCTN:'0',googDecodingCTSG:'0',googDecodingNormal:'0',googDecodingPLC:'0',googDecodingPLCCNG:'0',googExpandRate:'0',googJitterBufferMs:'0',googJitterReceived:'0',googPreemptiveExpandRate:'0',googPreferredJitterBufferMs:'0',googSecondaryDecodedRate:'0',googSpeechExpandRate:'0' }; const u = { id:'',type:'',mediaType:'',googTargetDelayMs:'0',packetsLost:'0',googDecodeMs:'0',googMaxDecodeMs:'0',googRenderDelayMs:'0',googFrameWidthReceived:'0',googFrameHeightReceived:'0',googFrameRateReceived:'0',googFrameRateDecoded:'0',googFrameRateOutput:'0',googFramesDecoded:'0',googFrameReceived:'0',googJitterBufferMs:'0',googCurrentDelayMs:'0',googMinPlayoutDelayMs:'0',googNacksSent:'0',googPlisSent:'0',googFirsSent:'0',bytesReceived:'0',packetsReceived:'0' }; const l = { id:'bweforvideo',type:'VideoBwe',googAvailableSendBandwidth:'0',googAvailableReceiveBandwidth:'0',googActualEncBitrate:'0',googRetransmitBitrate:'0',googTargetEncBitrate:'0',googBucketDelay:'0',googTransmitBitrate:'0' }; let p = 0; let f = 0; let m = 0;return t.getVideoRelatedStats = function(n) { t.peerConnection.getStats().then(function(i) { const o = { peerId:t.uid,mediaType:'video',isVideoMute:t.isVideoMute };i.forEach(function(i) { if (t.isSubscriber) { if (i.type === 'track' && (~i.id.indexOf('video') || ~i.trackIdentifier.indexOf('v'))) { if (!t.lastReport) return void (t.lastReport = i);o.frameRateReceived = i.framesReceived - t.lastReport.framesReceived + '',o.frameRateDecoded = i.framesDecoded - t.lastReport.framesDecoded + '',t.lastReport = i; }i.type === 'inbound-rtp' && ~i.id.indexOf('Video') && (o.bytesReceived = i.bytesReceived + '',o.packetsReceived = i.packetsReceived + '',o.packetsLost = i.packetsLost + ''); } else if (i.type === 'outbound-rtp' && ~i.id.indexOf('Video')) { if (!t.lastReport) return void (t.lastReport = i);n && n({ mediaType:'video',isVideoMute:t.isVideoMute,frameRateInput:e.maxFrameRate + '',frameRateSent:i.framesEncoded - t.lastReport.framesEncoded + '' }),t.lastReport = i; } }),n && n(o); }); },t.getAudioRelatedStats = function(e) { t.peerConnection.getStats().then(function(n) { n.forEach(function(n) { t.isSubscriber && n.type === 'inbound-rtp' && ~n.id.indexOf('Audio') && e && e({ peerId:t.uid,mediaType:'audio',isAudioMute:t.isAudioMute,frameDropped:n.packetsLost + '',frameReceived:n.packetsReceived + '',googJitterReceived:n.jitter + '',bytesReceived:n.bytesReceived + '',packetsReceived:n.packetsReceived + '',packetsLost:n.packetsLost + '' }); }); }); },t.getStatsRate = function(e) { t.getStats(function(t) { t.forEach(function(e) { e.type === 'outbound-rtp' && e.mediaType === 'video' && e.googFramesEncoded && (e.googFrameRateSent = ((e.googFramesEncoded - p) / 3).toString(),p = e.googFramesEncoded),e.type === 'inbound-rtp' && e.id.includes('55543') && (e.googFrameRateReceived && (e.googFrameRateReceived = ((e.googFrameReceived - m) / 3).toString(),m = e.googFrameReceived),e.googFrameRateDecoded && (e.googFrameRateDecoded = ((e.googFramesDecoded - f) / 3).toString(),f = e.googFramesDecoded)); }),e(t); }); },t.getStats = function(e,n) { n = (n = n || 500) > 500 ? 500 : n,t.lastTimeGetStats && Date.now() - t.lastTimeGetStats < n ? e && e(t.filterStatsCache,t.originStatsCache) : this._getStats(function(n,i) { t.filterStatsCache = n,t.originStatsCache = i,t.lastTimeGetStats = Date.now(),e && e(n,i); }); },t._getStats = function(e) { const n = [];t.peerConnection.getStats().then(function(i) { i.forEach(function(e) { n.push(e),e.type === 'outbound-rtp' && e.mediaType === 'audio' && (s.id = e.id,s.type = e.type,s.mediaType = e.mediaType,s.bytesSent = e.bytesSent ? e.bytesSent + '' : '0',s.packetsSent = e.packetsSent ? e.packetsSent + '' : '0'),e.type === 'outbound-rtp' && e.mediaType === 'video' && (c.id = e.id,c.type = e.type,c.mediaType = e.mediaType,c.bytesSent = e.bytesSent ? e.bytesSent + '' : '0',c.packetsSent = e.packetsSent ? e.packetsSent + '' : '0',c.googPlisReceived = e.pliCount ? e.pliCount + '' : '0',c.googNacksReceived = e.nackCount ? e.nackCount + '' : '0',c.googFirsReceived = e.firCount ? e.firCount + '' : '0',c.googFramesEncoded = e.framesEncoded ? e.framesEncoded + '' : '0'),e.type === 'inbound-rtp' && e.id.includes('44444') && (d.id = e.id,d.type = e.type,d.mediaType = 'audio',d.packetsReceived = e.packetsReceived ? e.packetsReceived + '' : '0',d.bytesReceived = e.bytesReceived ? e.bytesReceived + '' : '0',d.packetsLost = e.packetsLost ? e.packetsLost + '' : '0',d.packetsReceived = e.packetsReceived ? e.packetsReceived + '' : '0',d.googJitterReceived = e.jitter ? e.jitter + '' : '0'),e.type === 'inbound-rtp' && e.id.includes('55543') && (u.id = e.id,u.type = e.type,u.mediaType = 'video',u.packetsReceived = e.packetsReceived ? e.packetsReceived + '' : '0',u.bytesReceived = e.bytesReceived ? e.bytesReceived + '' : '0',u.packetsLost = e.packetsLost ? e.packetsLost + '' : '0',u.googJitterBufferMs = e.jitter ? e.jitter + '' : '0',u.googNacksSent = e.nackCount ? e.nackCount + '' : '0',u.googPlisSent = e.pliCount ? e.pliCount + '' : '0',u.googFirsSent = e.firCount ? e.firCount + '' : '0'),e.type !== 'track' || !e.id.includes('55543') && !~e.trackIdentifier.indexOf('v') && e.audioLevel != null || (u.googFrameWidthReceived = e.frameWidth ? e.frameWidth + '' : '0',u.googFrameHeightReceived = e.frameHeight ? e.frameHeight + '' : '0',u.googFrameReceived = e.framesReceived ? e.framesReceived + '' : '0',u.googFramesDecoded = e.framesDecoded ? e.framesDecoded + '' : '0'),e.type !== 'track' || !e.id.includes('44444') && !~e.trackIdentifier.indexOf('a') && void 0 === e.audioLevel || (d.audioOutputLevel = e.audioLevel + '',s.audioInputLevel = e.audioLevel + ''),e.type === 'candidate-pair' && (e.availableIncomingBitrate == 0 ? l.googAvailableSendBandwidth = e.availableOutgoingBitrate + '' : l.googAvailableReceiveBandwidth = e.availableIncomingBitrate + ''); });const o = [l,s,c,d,u];o.push({ id:'time',startTime:t.connectedTime,timestamp:new Date }),e(o,n); })
  .catch(function(e) { console.error(e); }); },t.addTrack = function(e,n) { t.peerConnection.addTrack(e,n); },t.removeTrack = function(e,n) { const i = t.peerConnection.getSenders().find(function(t) { return t.track == e });i.replaceTrack(null),t.peerConnection.removeTrack(i); },t.addStream = function(e) { window.navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome') ? e.getTracks().forEach(function(n) { return t.peerConnection.addTrack(n,e) }) : t.peerConnection.addStream(e),t.markActionNeeded(); },t.removeStream = function() { t.markActionNeeded(); },t.close = function() { t.state = 'closed',t.peerConnection.close(); },t.markActionNeeded = function() { t.actionNeeded = !0,t.doLater(function() { t.onstablestate(); }); },t.doLater = function(e) { window.setTimeout(e,1); },t.onstablestate = function() { let n;if (t.actionNeeded) { if (t.state === 'new' || t.state === 'established')e.isSubscriber && (t.peerConnection.addTransceiver('audio',{ direction:'recvonly' }),t.peerConnection.addTransceiver('video',{ direction:'recvonly' })),t.peerConnection.createOffer(t.mediaConstraints).then(function(n) { if (n.sdp = r(n.sdp),e.isSubscriber || (n.sdp = n.sdp.replace(/a=extmap:4 urn:3gpp:video-orientation\r\n/g,'')),n.sdp !== t.prevOffer) return t.peerConnection.setLocalDescription(n),t.state = 'preparing-offer',void t.markActionNeeded();a.default.debug('[' + t.clientId + ']Not sending a new offer'); })
  .catch(function(e) { a.default.debug('[' + t.clientId + ']peer connection create offer failed ',e); });else if (t.state === 'preparing-offer') { if (t.moreIceComing) return;t.prevOffer = t.peerConnection.localDescription.sdp,t.offerCandidates = t.prevOffer.match(/a=candidate.+\r\n/g) || [],t.offerCandidates.length || (a.default.warning('['.concat(t.clientId,']No Ice Candidate generated')),Object(o.getParameter)('SHIM_CANDIDATE') ? (a.default.debug('Shimming fake candidate'),t.prevOffer += 'a=candidate:2243255435 1 udp 2122194687 192.168.0.1 30000 typ host generation 0 network-id 1\r\n') : a.default.error('['.concat(t.clientId,']None Ice Candidate not allowed'))),t.prevOffer = t.prevOffer.replace(/a=candidate:.+typ\shost.+\r\n/g,'a=candidate:2243255435 1 udp 2122194687 192.168.0.1 30000 typ host generation 0 network-id 1\r\n'),t.sendMessage('OFFER',t.prevOffer),t.state = 'offer-sent'; } else if (t.state === 'offer-received')t.peerConnection.createAnswer(function(e) { if (t.peerConnection.setLocalDescription(e),t.state = 'offer-received-preparing-answer',t.iceStarted)t.markActionNeeded();else { const n = new Date;a.default.debug('[' + t.clientId + ']' + n.getTime() + ': Starting ICE in responder'),t.iceStarted = !0; } },function(e) { a.default.debug('[' + t.clientId + ']peer connection create answer failed ',e); },t.mediaConstraints);else if (t.state === 'offer-received-preparing-answer') { if (t.moreIceComing) return;n = t.peerConnection.localDescription.sdp,t.sendMessage('ANSWER',n),t.state = 'established'; } else t.error('Dazed and confused in state ' + t.state + ', stopping here');t.actionNeeded = !1; } },t.sendOK = function() { t.sendMessage('OK'); },t.sendMessage = function(e,n) { const i = {};i.messageType = e,i.sdp = n,e === 'OFFER' ? (i.offererSessionId = t.sessionId,i.answererSessionId = t.otherSessionId,i.seq = t.sequenceNumber += 1,i.tiebreaker = Math.floor(429496723 * Math.random() + 1)) : (i.offererSessionId = t.incomingMessage.offererSessionId,i.answererSessionId = t.sessionId,i.seq = t.incomingMessage.seq),t.onsignalingmessage(JSON.stringify(i)); },t._getSender = function(e) { if (t.peerConnection && t.peerConnection.getSenders) { const n = t.peerConnection.getSenders().find(function(t) { return t.track.kind == e });if (n) return n } return null },t.hasSender = function(e) { return !!t._getSender(e) },t.replaceTrack = function(e,n,i) { const o = t._getSender(e.kind);if (!o) return i('NO_SENDER_FOUND');try { o.replaceTrack(e); } catch (e) { return i && i(e) }setTimeout(function() { return n && n() },50); },t.error = function(e) { throw 'Error in RoapOnJsep: ' + e },t.sessionId = t.roapSessionId += 1,t.sequenceNumber = 0,t.actionNeeded = !1,t.iceStarted = !1,t.moreIceComing = !0,t.iceCandidateCount = 0,t.onsignalingmessage = e.callback,t.peerConnection.ontrack = function(e) { t.onaddstream && t.onaddstream(e,'ontrack'); },t.peerConnection.onremovestream = function(e) { t.onremovestream && t.onremovestream(e); },t.peerConnection.oniceconnectionstatechange = function(e) { e.currentTarget.iceConnectionState === 'connected' && (t.connectedTime = new Date),t.oniceconnectionstatechange && t.oniceconnectionstatechange(e.currentTarget.iceConnectionState); },t.renegotiate = function() { void 0 !== t.prevOffer && t.peerConnection.createOffer().then(function(e) { return e.sdp = e.sdp.replace(/a=recvonly\r\n/g,'a=inactive\r\n'),e.sdp = i(e.sdp),e.sdp = r(e.sdp),t.peerConnection.setLocalDescription(e) })
  .then(function() { t.onnegotiationneeded && t.onnegotiationneeded(t.peerConnection.localDescription.sdp); })
  .catch(function(e) { console.log('createOffer error: ',e); }); },t.peerConnection.onnegotiationneeded = t.renegotiate,t.onaddstream = null,t.onremovestream = null,t.state = 'new',t.markActionNeeded(),t }; const N = function(e) { const t = {}; const n = (mozRTCPeerConnection,mozRTCSessionDescription); let i = !1;t.uid = e.uid,t.isVideoMute = e.isVideoMute,t.isAudioMute = e.isAudioMute,t.isSubscriber = e.isSubscriber,t.clientId = e.clientId,t.filterStatsCache = [],t.originStatsCache = [],t.lastTimeGetStats = null,t.pc_config = { iceServers:[] },Array.isArray(e.iceServers) ? e.iceServers.map(function(e) { e.url.indexOf('stun:') === 0 && t.pc_config.iceServers.push({ url:e.url }); }) : (e.stunServerUrl && (Array.isArray(e.stunServerUrl) ? e.stunServerUrl.map(function(e) { typeof e === 'string' && e !== '' && t.pc_config.iceServers.push({ url:e }); }) : typeof e.stunServerUrl === 'string' && e.stunServerUrl !== '' && t.pc_config.iceServers.push({ url:e.stunServerUrl })),e.turnServer && typeof e.turnServer.url === 'string' && e.turnServer.url !== '' && (t.pc_config.iceServers.push({ username:e.turnServer.username,credential:e.turnServer.credential,credentialType:'password',urls:'turn:' + e.turnServer.url + ':' + e.turnServer.udpport + '?transport=udp' }),typeof e.turnServer.tcpport === 'string' && e.turnServer.tcpport !== '' && t.pc_config.iceServers.push({ username:e.turnServer.username,credential:e.turnServer.credential,credentialType:'password',urls:'turn:' + e.turnServer.url + ':' + e.turnServer.tcpport + '?transport=tcp' }),!0 === e.turnServer.forceturn && (t.pc_config.iceTransportPolicy = 'relay'))),void 0 === e.audio && (e.audio = !0),void 0 === e.video && (e.video = !0),t.mediaConstraints = { offerToReceiveAudio:e.audio,offerToReceiveVideo:e.video,mozDontOfferDataChannel:!0 },t.roapSessionId = 103,t.peerConnection = new h.RTCPeerConnection(t.pc_config),a.default.debug('[' + t.clientId + ']safari Created RTCPeerConnnection with config "' + JSON.stringify(t.pc_config) + '".'),t.iceCandidateTimer = setTimeout(function() { t.iceCandidateTimer = null,a.default.debug('['.concat(t.clientId,']Candidates collected: ').concat(t.iceCandidateCount)),t.moreIceComing && (t.moreIceComing = !1,t.markActionNeeded()); },Object(o.getParameter)('CANDIDATE_TIMEOUT')),t.peerConnection.onicecandidate = function(e) { let n,i,o,r;i = (n = t.peerConnection.localDescription.sdp).match(/a=candidate:.+typ\ssrflx.+\r\n/),o = n.match(/a=candidate:.+typ\shost.+\r\n/),r = n.match(/a=candidate:.+typ\srelay.+\r\n/),i === null && o === null && r === null || void 0 !== t.ice || !t.iceCandidateTimer || (a.default.debug('[' + t.clientId + ']srflx candidate : ' + i + ' relay candidate: ' + r + ' host candidate : ' + o),clearTimeout(t.iceCandidateTimer),t.iceCandidateTimer = null,t.ice = 0,t.moreIceComing = !1,t.markActionNeeded()),t.iceCandidateCount = t.iceCandidateCount + 1; },t.checkMLineReverseInSDP = function(e) { return !(!~e.indexOf('m=audio') || !~e.indexOf('m=video')) && e.indexOf('m=audio') > e.indexOf('m=video') },t.reverseMLineInSDP = function(e) { const t = e.split('m=audio'); const n = t[1].split('m=video'); const i = 'm=video' + n[1]; const o = 'm=audio' + n[0];return e = t[0] + i + o },t.processSignalingMessage = function(e) { let i; const o = JSON.parse(e);t.incomingMessage = o,t.state === 'new' ? o.messageType === 'OFFER' ? (o.sdp = l(o.sdp),i = { sdp:o.sdp,type:'offer' },t.peerConnection.setRemoteDescription(new n(i),function() { a.default.debug('[' + t.clientId + ']setRemoteDescription succeeded'); },function(e) { a.default.info('[' + t.clientId + ']setRemoteDescription failed: ' + e.name); }),t.state = 'offer-received',t.markActionNeeded()) : t.error('Illegal message for this state: ' + o.messageType + ' in state ' + t.state) : t.state === 'offer-sent' ? o.messageType === 'ANSWER' ? (o.sdp = l(o.sdp),o.sdp = o.sdp.replace(/ generation 0/g,''),o.sdp = o.sdp.replace(/ udp /g,' UDP '),o.sdp.includes('a=group:BUNDLE') ? (o.sdp = o.sdp.replace(/a=group:BUNDLE audio video/,'a=group:BUNDLE sdparta_0 sdparta_1'),o.sdp = o.sdp.replace(/a=mid:audio/,'a=mid:sdparta_0'),o.sdp = o.sdp.replace(/a=mid:video/,'a=mid:sdparta_1')) : (o.sdp = o.sdp.replace(/a=mid:audio/,'a=mid:sdparta_0'),o.sdp = o.sdp.replace(/a=mid:video/,'a=mid:sdparta_0')),i = { sdp:o.sdp,type:'answer' },t.peerConnection.setRemoteDescription(new n(i),function() { a.default.debug('[' + t.clientId + ']setRemoteDescription succeeded'); },function(e) { a.default.info('[' + t.clientId + ']setRemoteDescription failed: ' + e); }),t.sendOK(),t.state = 'established') : o.messageType === 'pr-answer' ? (i = { sdp:o.sdp,type:'pr-answer' },t.peerConnection.setRemoteDescription(new n(i),function() { a.default.debug('[' + t.clientId + ']setRemoteDescription succeeded'); },function(e) { a.default.info('[' + t.clientId + ']setRemoteDescription failed: ' + e.name); })) : o.messageType === 'offer' ? t.error('Not written yet') : t.error('Illegal message for this state: ' + o.messageType + ' in state ' + t.state) : t.state === 'established' && (o.messageType === 'OFFER' ? (i = { sdp:o.sdp,type:'offer' },t.peerConnection.setRemoteDescription(new n(i),function() { a.default.debug('[' + t.clientId + ']setRemoteDescription succeeded'); },function(e) { a.default.info('[' + t.clientId + ']setRemoteDescription failed: ' + e.name); }),t.state = 'offer-received',t.markActionNeeded()) : t.error('Illegal message for this state: ' + o.messageType + ' in state ' + t.state)); };const r = { id:'',type:'',mediaType:'opus',googCodecName:'opus',aecDivergentFilterFraction:'0',audioInputLevel:'0',bytesSent:'0',packetsSent:'0',googEchoCancellationReturnLoss:'0',googEchoCancellationReturnLossEnhancement:'0' }; const s = { id:'',type:'',mediaType:'',googCodecName:e.codec === 'h264' ? 'H264' : 'VP8',bytesSent:'0',packetsLost:'0',packetsSent:'0',googAdaptationChanges:'0',googAvgEncodeMs:'0',googEncodeUsagePercent:'0',googFirsReceived:'0',googFrameHeightSent:'0',googFrameHeightInput:'0',googFrameRateInput:'0',googFrameRateSent:'0',googFrameWidthSent:'0',googFrameWidthInput:'0',googNacksReceived:'0',googPlisReceived:'0',googRtt:'0' }; const c = { id:'',type:'',mediaType:'',audioOutputLevel:'0',bytesReceived:'0',packetsLost:'0',packetsReceived:'0',googAccelerateRate:'0',googCurrentDelayMs:'0',googDecodingCNG:'0',googDecodingCTN:'0',googDecodingCTSG:'0',googDecodingNormal:'0',googDecodingPLC:'0',googDecodingPLCCNG:'0',googExpandRate:'0',googJitterBufferMs:'0',googJitterReceived:'0',googPreemptiveExpandRate:'0',googPreferredJitterBufferMs:'0',googSecondaryDecodedRate:'0',googSpeechExpandRate:'0' }; const d = { id:'',type:'',mediaType:'',googTargetDelayMs:'0',packetsLost:'0',googDecodeMs:'0',googMaxDecodeMs:'0',googRenderDelayMs:'0',googFrameWidthReceived:'0',googFrameHeightReceived:'0',googFrameRateReceived:'0',googFrameRateDecoded:'0',googFrameRateOutput:'0',googJitterBufferMs:'0',googCurrentDelayMs:'0',googMinPlayoutDelayMs:'0',googNacksSent:'0',googPlisSent:'0',googFirsSent:'0',bytesReceived:'0',packetsReceived:'0',googFramesDecoded:'0' }; let u = 0;t.getVideoRelatedStats = function(e) { t.peerConnection.getStats().then(function(n) { let i = !0; let o = !1; let a = void 0;try { for (var r,s = n.values()[Symbol.iterator]();!(i = (r = s.next()).done);i = !0) { const c = r.value;if (t.isSubscriber) { if ((c.type === 'inbound-rtp' || c.type === 'inboundrtp') && c.mediaType === 'video') { if (!t.lastReport) return void (t.lastReport = c);e && e({ browser:'firefox',mediaType:'video',peerId:t.uid,isVideoMute:t.isVideoMute,frameRateReceived:c.framerateMean + '',frameRateDecoded:c.framesDecoded - t.lastReport.framesDecoded + '',bytesReceived:c.bytesReceived + '',packetsReceived:c.packetsReceived + '',packetsLost:c.packetsLost + '' }),t.lastReport = c; } } else if ((c.type === 'outbound-rtp' || c.type === 'outboundrtp') && c.mediaType === 'video') { if (!t.lastReport) return void (t.lastReport = c);e && e({ mediaType:'video',isVideoMute:t.isVideoMute,frameRateInput:c.framerateMean + '',frameRateSent:c.framesEncoded - t.lastReport.framesEncoded + '' }),t.lastReport = c; } } } catch (e) { o = !0,a = e; } finally { try { i || s.return == null || s.return(); } finally { if (o) throw a } } }); },t.getAudioRelatedStats = function(e) { t.peerConnection.getStats().then(function(n) { let i = !0; let o = !1; let a = void 0;try { for (var r,s = n.values()[Symbol.iterator]();!(i = (r = s.next()).done);i = !0) { const c = r.value;t.isSubscriber && (c.type !== 'inbound-rtp' && c.type !== 'inboundrtp' || c.mediaType !== 'audio' || e && e({ browser:'firefox',mediaType:'audio',peerId:t.uid,isAudioMute:t.isAudioMute,frameDropped:c.packetsLost + '',frameReceived:c.packetsReceived + '',googJitterReceived:c.jitter + '',bytesReceived:c.bytesReceived + '',packetsReceived:c.packetsReceived + '',packetsLost:c.packetsLost + '' })); } } catch (e) { o = !0,a = e; } finally { try { i || s.return == null || s.return(); } finally { if (o) throw a } } }); },t.getStatsRate = function(e) { t.getStats(function(t) { t.forEach(function(e) { e.type !== 'inbound-rtp' && e.type !== 'inboundrtp' || e.mediaType !== 'video' || e.googFrameRateDecoded && (e.googFrameRateDecoded = ((e.googFramesDecoded - u) / 3).toString(),u = e.googFramesDecoded); }),e(t); }); },t.getStats = function(e,n) { n = (n = n || 500) > 500 ? 500 : n,t.lastTimeGetStats && Date.now() - t.lastTimeGetStats < n ? e && e(t.filterStatsCache,t.originStatsCache) : this._getStats(function(n,i) { t.filterStatsCache = n,t.originStatsCache = i,t.lastTimeGetStats = Date.now(),e && e(n,i); }); },t._getStats = function(e) { t.peerConnection.getStats().then(function(n) { const i = []; let o = !0; let a = !1; let u = void 0;try { for (var l,p = n.values()[Symbol.iterator]();!(o = (l = p.next()).done);o = !0) { const f = l.value;i.push(f),f.type !== 'outbound-rtp' && f.type !== 'outboundrtp' || f.mediaType !== 'video' || f.id.includes('rtcp') || (s.id = f.id,s.type = f.type,s.mediaType = f.mediaType,s.bytesSent = f.bytesSent ? f.bytesSent + '' : '0',s.packetsSent = f.packetsSent ? f.packetsSent + '' : '0',s.googPlisReceived = f.pliCount ? f.pliCount + '' : '0',s.googNacksReceived = f.nackCount ? f.nackCount + '' : '0',s.googFirsReceived = f.firCount ? f.firCount + '' : '0',s.googFrameRateSent = f.framerateMean ? f.framerateMean + '' : '0'),f.type !== 'outbound-rtp' && f.type !== 'outboundrtp' || f.mediaType !== 'audio' || f.id.includes('rtcp') || (r.id = f.id,r.type = f.type,r.mediaType = f.mediaType,r.bytesSent = f.bytesSent ? f.bytesSent + '' : '0',r.packetsSent = f.packetsSent ? f.packetsSent + '' : '0'),f.type !== 'inbound-rtp' && f.type !== 'inboundrtp' || f.mediaType !== 'audio' || f.isRemote || f.id.includes('rtcp') || (c.id = f.id,c.type = f.type,c.mediaType = f.mediaType,c.bytesReceived = f.bytesReceived ? f.bytesReceived + '' : '0',c.packetsLost = f.packetsLost ? f.packetsLost + '' : '0',c.packetsReceived = f.packetsReceived ? f.packetsReceived + '' : '0',c.googJitterReceived = f.jitter ? f.jitter + '' : '0'),f.type !== 'inbound-rtp' && f.type !== 'inboundrtp' || f.mediaType !== 'video' || f.isRemote || f.id.includes('rtcp') || (d.id = f.id,d.type = f.type,d.mediaType = f.mediaType,d.bytesReceived = f.bytesReceived ? f.bytesReceived + '' : '0',d.googFrameRateReceived = f.framerateMean ? f.framerateMean + '' : '0',d.googFramesDecoded = f.framesDecoded ? f.framesDecoded + '' : '0',d.packetsLost = f.packetsLost ? f.packetsLost + '' : '0',d.packetsReceived = f.packetsReceived ? f.packetsReceived + '' : '0',d.googJitterBufferMs = f.jitter ? f.jitter + '' : '0',d.googNacksSent = f.nackCount ? f.nackCount + '' : '0',d.googPlisSent = f.pliCount ? f.pliCount + '' : '0',d.googFirsSent = f.firCount ? f.firCount + '' : '0'),f.id.includes('outbound_rtcp_video') && (s.packetsLost = f.packetsLost ? f.packetsLost + '' : '0'); } } catch (e) { a = !0,u = e; } finally { try { o || p.return == null || p.return(); } finally { if (a) throw u } } const m = [s,r,c,d];m.push({ id:'time',startTime:t.connectedTime,timestamp:new Date }),e(m,i); },function(e) { a.default.error('[' + t.clientId + ']' + e); }); },t.addStream = function(e) { i = !0,t.peerConnection.addStream(e),t.markActionNeeded(); },t.removeStream = function() { t.markActionNeeded(); },t.close = function() { t.state = 'closed',t.peerConnection.close(); },t.markActionNeeded = function() { t.actionNeeded = !0,t.doLater(function() { t.onstablestate(); }); },t.doLater = function(e) { window.setTimeout(e,1); },t.onstablestate = function() { if (t.actionNeeded) { if (t.state === 'new' || t.state === 'established')i && (t.mediaConstraints = void 0),t.peerConnection.createOffer(function(e) { if (e.sdp = l(e.sdp),e.sdp = e.sdp.replace(/a=extmap:1 http:\/\/www.webrtc.org\/experiments\/rtp-hdrext\/abs-send-time/,'a=extmap:3 http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time'),e.sdp !== t.prevOffer) return t.peerConnection.setLocalDescription(e),t.state = 'preparing-offer',void t.markActionNeeded();a.default.debug('[' + t.clientId + ']Not sending a new offer'); },function(e) { a.default.debug('[' + t.clientId + ']Ups! create offer failed ',e); },t.mediaConstraints);else if (t.state === 'preparing-offer') { if (t.moreIceComing) return;t.prevOffer = t.peerConnection.localDescription.sdp,t.offerCandidates = t.prevOffer.match(/a=candidate.+\r\n/g) || [],t.offerCandidates.length || (a.default.warning('['.concat(t.clientId,']No Ice Candidate generated')),Object(o.getParameter)('SHIM_CANDIDATE') ? (a.default.debug('Shimming fake candidate'),t.prevOffer += 'a=candidate:2243255435 1 udp 2122194687 192.168.0.1 30000 typ host generation 0 network-id 1\r\n') : a.default.error('['.concat(t.clientId,']None Ice Candidate not allowed'))),t.prevOffer = t.prevOffer.replace(/a=candidate:.+typ\shost.+\r\n/g,'a=candidate:2243255435 1 udp 2122194687 192.168.0.1 30000 typ host generation 0 network-id 1\r\n'),t.sendMessage('OFFER',t.prevOffer),t.state = 'offer-sent'; } else if (t.state === 'offer-received')t.peerConnection.createAnswer(function(e) { if (t.peerConnection.setLocalDescription(e),t.state = 'offer-received-preparing-answer',t.iceStarted)t.markActionNeeded();else { const n = new Date;a.default.debug('[' + t.clientId + ']' + n.getTime() + ': Starting ICE in responder'),t.iceStarted = !0; } },function() { a.default.debug('[' + t.clientId + ']Ups! Something went wrong'); });else if (t.state === 'offer-received-preparing-answer') { if (t.moreIceComing) return;const e = t.peerConnection.localDescription.sdp;t.sendMessage('ANSWER',e),t.state = 'established'; } else t.error('Dazed and confused in state ' + t.state + ', stopping here');t.actionNeeded = !1; } },t.sendOK = function() { t.sendMessage('OK'); },t.sendMessage = function(e,n) { const i = {};i.messageType = e,i.sdp = n,e === 'OFFER' ? (i.offererSessionId = t.sessionId,i.answererSessionId = t.otherSessionId,i.seq = t.sequenceNumber += 1,i.tiebreaker = Math.floor(429496723 * Math.random() + 1)) : (i.offererSessionId = t.incomingMessage.offererSessionId,i.answererSessionId = t.sessionId,i.seq = t.incomingMessage.seq),t.onsignalingmessage(JSON.stringify(i)); },t._getSender = function(e) { if (t.peerConnection && t.peerConnection.getSenders) { const n = t.peerConnection.getSenders().find(function(t) { return t.track.kind == e });if (n) return n } return null },t.hasSender = function(e) { return !!t._getSender(e) },t.replaceTrack = function(e,n,i) { const o = t._getSender(e.kind);if (!o) return i('NO_SENDER_FOUND');try { o.replaceTrack(e); } catch (e) { return i && i(e) }setTimeout(function() { return n && n() },50); },t.error = function(e) { throw 'Error in RoapOnJsep: ' + e },t.sessionId = t.roapSessionId += 1,t.sequenceNumber = 0,t.actionNeeded = !1,t.iceStarted = !1,t.moreIceComing = !0,t.iceCandidateCount = 0,t.onsignalingmessage = e.callback,t.peerConnection.ontrack = function(e) { t.onaddstream && t.onaddstream(e,'ontrack'); },t.peerConnection.onremovestream = function(e) { t.onremovestream && t.onremovestream(e); },t.peerConnection.oniceconnectionstatechange = function(e) { e.currentTarget.iceConnectionState === 'connected' && (t.connectedTime = new Date),t.oniceconnectionstatechange && t.oniceconnectionstatechange(e.currentTarget.iceConnectionState); };var l = function(t) { let n;if (e.video && e.maxVideoBW && ((n = t.match(/m=video.*\r\n/)) == null && (n = t.match(/m=video.*\n/)),n && n.length > 0)) { var i = n[0] + 'b=TIAS:' + 1e3 * e.maxVideoBW + '\r\n';t = t.replace(n[0],i); } return e.audio && e.maxAudioBW && ((n = t.match(/m=audio.*\r\n/)) == null && (n = t.match(/m=audio.*\n/)),n && n.length > 0) && (i = n[0] + 'b=TIAS:' + 1e3 * e.maxAudioBW + '\r\n',t = t.replace(n[0],i)),t };return t.onaddstream = null,t.onremovestream = null,t.state = 'new',t.markActionNeeded(),t }; const D = n(13); const k = n.n(D); let M = null; const L = function() { try { M = window.require('electron'); } catch (e) {} return M }; const P = function(e) { const t = r.b.reportApiInvoke(null,{ callback:e,name:'getScreenSources',options:arguments,tag:'tracer' }); const n = L();if (!n) return t && t('electron is null');n.desktopCapturer.getSources({ types:['window','screen'] },function(e,n) { if (e) return t && t(e);t && t(null,n); }); }; const x = function(e,t,n) { const i = t.width;t = { audio:!1,video:{ mandatory:{ chromeMediaSource:'desktop',chromeMediaSourceId:e,maxHeight:t.height,maxWidth:i,maxFrameRate:t.frameRate && t.frameRate.max,minFrameRate:t.frameRate && t.frameRate.min } } };navigator.webkitGetUserMedia(t,function(e) { n && n(null,e); },function(e) { n && n(e); }); }; const V = function() { return !!L() }; const U = P; const F = x; const B = function(e,t) { P(function(n,i) { if (n) return t && t(n);!function(e,t) { const n = document.createElement('div');n.textContent = 'share screen',n.setAttribute('style','text-align: center; height: 25px; line-height: 25px; border-radius: 4px 4px 0 0; background: #D4D2D4; border-bottom:  solid 1px #B9B8B9;');const i = document.createElement('div');i.setAttribute('style','width: 100%; height: 500px; padding: 15px 25px ; box-sizing: border-box;');const o = document.createElement('div');o.textContent = 'Agora Web Screensharing wants to share the contents of your screen with webdemo.agorabeckon.com. Choose what you\'d like to share.',o.setAttribute('style','height: 12%;');const a = document.createElement('div');a.setAttribute('style','width: 100%; height: 80%; background: #FFF; border:  solid 1px #CBCBCB; display: flex; flex-wrap: wrap; justify-content: space-around; overflow-y: scroll; padding: 0 15px; box-sizing: border-box;');const r = document.createElement('div');r.setAttribute('style','text-align: right; padding: 16px 0;');const s = document.createElement('button');s.innerHTML = 'cancel',s.setAttribute('style','width: 85px;'),s.onclick = function() { document.body.removeChild(c),t && t('NotAllowedError'); },r.appendChild(s),i.appendChild(o),i.appendChild(a),i.appendChild(r);var c = document.createElement('div');c.setAttribute('style','position: absolute; z-index: 99999999; top: 50%; left: 50%; width: 620px; height: 525px; background: #ECECEC; border-radius: 4px; -webkit-transform: translate(-50%,-50%); transform: translate(-50%,-50%);'),c.appendChild(n),c.appendChild(i),document.body.appendChild(c),e.map(function(e) { if (e.id) { const n = document.createElement('div');n.setAttribute('style','width: 30%; height: 160px; padding: 20px 0; text-align: center;box-sizing: content-box;'),n.innerHTML = '<div style="height: 120px; display: table-cell; vertical-align: middle;"><img style="width: 100%; background: #333333; box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2);" src=' + e.thumbnail.toDataURL() + ' /></div><span style="\theight: 40px; line-height: 40px; display: inline-block; width: 70%; word-break: keep-all; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">' + e.name + '</span>',n.onclick = function() { document.body.removeChild(c),t && t(null,e.id); },a.appendChild(n); } }); }(i,function(n,i) { if (n) return t && t(n);x(i,e,t); }); }); }; let j = 103; const W = function(e) { let t = {};if (t.clientId = e.clientId,e.session_id = j += 1,typeof window === 'undefined' || !window.navigator) throw a.default.error('[' + t.streamId + '][' + t.clientId + ']Publish/subscribe video/audio streams not supported yet'),new Error('NON_BROWSER_ENV_DETECTED');return window.navigator.userAgent.match('Firefox') !== null ? (t.browser = 'mozilla',t = N(e)) : f.getBrowserOS() === 'iOS' || f.isSafari() ? (a.default.debug('[' + t.streamId + '][' + t.clientId + ']Safari'),(t = w(e)).browser = 'safari') : ~window.navigator.userAgent.indexOf('Edge') ? t = new k.a(e) : (t = O(e)).browser = 'chrome-stable',t }; const H = function(e,t,n) { const i = {};i.config = e,i.streamId = e.streamId,delete e.streamId,navigator.getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;let o = 0; let r = 1; let s = !1; let c = null; const d = function(e) { if (o++,c) if (c === e)a.default.debug('Using Video Source/ Audio Source');else { const n = c.getVideoTracks()[0]; const i = c.getAudioTracks()[0]; const d = e.getVideoTracks()[0]; const u = e.getAudioTracks()[0];d && (n && c.removeTrack(n),c.addTrack(d)),u && (i && c.removeTrack(i),c.addTrack(u)); } else c = e;o !== r || s || (s = !0,setTimeout(function() { t(c); },0)); }; const u = function(e) { a.default.error('Failed to GetUserMedia',e.name,e.code,e.message,e),o++,s || (s = !0,setTimeout(function() { n && n(e); },0)); }; const l = function() { const t = { video:e.video,audio:e.audio };if (a.default.debug('GetUserMedia',JSON.stringify(t)),navigator.mediaDevices && navigator.mediaDevices.getUserMedia)navigator.mediaDevices.getUserMedia(t).then(d)
  .catch(u);else if (typeof navigator !== 'undefined' && navigator.getMedia)navigator.getMedia(e,d,u);else { const o = { name:'MEDIA_NOT_SUPPORT',message:'Video/audio streams not supported yet' };a.default.error('[' + i.streamId + ']' + o.message),n && n(o); } };if ((e.videoSource || e.audioSource) && (c = new MediaStream,e.videoSource && c.addTrack(e.videoSource),e.audioSource && c.addTrack(e.audioSource)),e.video || e.audio || e.screen) if (e.screen) { if (V()) return e.screen.sourceId ? F(e.screen.sourceId,e.screen,function(e,t) { e ? u(e) : d(t); }) : B(e.screen,function(e,t) { e ? u(e) : d(t); });if (f.isFireFox()) { a.default.debug('[' + i.streamId + ']Screen access requested');if (!~['screen','window','application'].indexOf(e.screen.mediaSource)) return n && n('Invalid mediaSource, mediaSource should be one of [screen, window, application]');navigator.getMedia({ video:e.screen },function(t) { e.audio && (r++,l()),d(t); },u); } else if (f.isChrome() && e.screen.extensionId) { if (window.navigator.appVersion.match(/Chrome\/([\w\W]*?)\./)[1] < 34) return void n({ code:'This browser does not support screen sharing' });a.default.debug('[' + i.streamId + ']Screen access on chrome stable, looking for extension');try { chrome.runtime.sendMessage(e.screen.extensionId,{ getStream:!0 },function(t) { if (void 0 === t) { a.default.error('[' + i.streamId + ']No response from Chrome Plugin. Plugin not installed properly');u({ name:'PluginNotInstalledProperly',message:'No response from Chrome Plugin. Plugin not installed properly.' }); } else e.screen.mandatory.chromeMediaSourceId = t.streamId,navigator.getMedia({ video:e.screen },function(t) { e.audio && (r++,l()),d(t); },u); }); } catch (e) { a.default.debug('[' + i.streamId + ']AgoraRTC screensharing plugin is not accessible');return void n({ code:'no_plugin_present' }) } } else { if (window.navigator.mediaDevices.getDisplayMedia) { const p = {};return typeof e.screen.width === 'number' && typeof e.screen.height === 'number' ? p.video = { width:{ ideal:e.screen.width },height:{ ideal:e.screen.height } } : p.video = { width:e.screen.width,height:e.screen.height },e.screen.frameRate && e.screen.frameRate.min ? p.video.frameRate = { ideal:e.screen.frameRate.max,max:e.screen.frameRate.max } : p.video.frameRate = e.screen.frameRate,a.default.debug('use getDisplayMedia, constraints:',p),window.navigator.mediaDevices.getDisplayMedia(p).then(function(t) { e.audio && (r++,l()),d(t); })
  .catch(u) }a.default.error('[' + i.streamId + ']This browser does not support screenSharing'); } } else l();else d(c); }; const G = n(7); const J = function(e,t,n) { if (['End2EndDelay','TransportDelay','PacketLossRate','RecvLevel','RecvBitrate','CodecType','MuteState','TotalFreezeTime','TotalPlayDuration','RecordingLevel','SendLevel','SamplingRate','SendBitrate','CodecType','MuteState','End2EndDelay','TransportDelay','PacketLossRate','RecvBitrate','RecvResolutionWidth','RecvResolutionHeight','RenderResolutionHeight','RenderResolutionWidth','RenderFrameRate','TotalFreezeTime','TotalPlayDuration','TargetSendBitrate','SendFrameRate','SendFrameRate','SendBitrate','SendResolutionWidth','SendResolutionHeight','CaptureResolutionHeight','CaptureResolutionWidth','EncodeDelay','MuteState','TotalFreezeTime','TotalDuration','CaptureFrameRate','RTT','OutgoingAvailableBandwidth','Duration','UserCount','SendBytes','RecvBytes','SendBitrate','RecvBitrate','accessDelay','audioSendBytes','audioSendPackets','videoSendBytes','videoSendPackets','videoSendPacketsLost','videoSendFrameRate','audioSendPacketsLost','videoSendResolutionWidth','videoSendResolutionHeight','accessDelay','audioReceiveBytes','audioReceivePackets','audioReceivePacketsLost','videoReceiveBytes','videoReceivePackets','videoReceivePacketsLost','videoReceiveFrameRate','videoReceiveDecodeFrameRate','videoReceiveResolutionWidth','videoReceiveResolutionHeight','endToEndDelay','videoReceiveDelay','audioReceiveDelay','FirstFrameTime','VideoFreezeRate','AudioFreezeRate','RenderResolutionWidth','RenderResolutionHeight'].includes(t) && (typeof n === 'string' || isFinite(n))) return e[t] = '' + n }; const Y = new function() { const e = s();return e.devicesHistory = {},e.states = { UNINIT:'UNINIT',INITING:'INITING',INITED:'INITED' },e.state = e.states.UNINIT,e.deviceStates = { ACTIVE:'ACTIVE',INACTIVE:'INACTIVE' },e.deviceReloadTimer = null,e._init = function(t,n) { e.state = e.states.INITING,e.devicesHistory = {},e._reloadDevicesInfo(function() { e.state = e.states.INITED,e.dispatchEvent({ type:'inited' }),t && t(); },function(t) { a.default.warning('Device Detection functionality cannot start properly.'),e.state = e.states.UNINIT,n && n(t); }); },e._enumerateDevices = function(e,t) { if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) return a.default.warning('enumerateDevices() not supported.'),t && t('enumerateDevices() not supported');navigator.mediaDevices.enumerateDevices().then(function(t) { e && setTimeout(function() { e(t); },0); })
  .catch(function(e) { t && t(e); }); },e._reloadDevicesInfo = function(t,n) { const i = [];e._enumerateDevices(function(n) { const o = Date.now();for (const r in n.forEach(function(t) { const n = e.devicesHistory[t.deviceId];if ((n ? n.state : e.deviceStates.INACTIVE) != e.deviceStates.ACTIVE) { const a = n || { initAt:o };a.device = t,a.state = e.deviceStates.ACTIVE,i.push(a),e.devicesHistory[t.deviceId] = a; }e.devicesHistory[t.deviceId].lastReloadAt = o; }),e.devicesHistory) { const s = e.devicesHistory[r];s && s.state == e.deviceStates.ACTIVE && s.lastReloadAt !== o && (s.state = e.deviceStates.INACTIVE,i.push(s)),s.lastReloadAt = o; }e.state == e.states.INITED && i.forEach(function(t) { const n = S()({},t);switch (t.device.kind) { case 'audioinput':n.type = 'recordingDeviceChanged';break;case 'audiooutput':n.type = 'playoutDeviceChanged';break;case 'videoinput':n.type = 'cameraChanged';break;default:a.default.warning('Unknown device change',n),n.type = 'unknownDeviceChanged'; }e.dispatchEvent(n); }),t && t(); },n); },e.getDeviceById = function(t,n,i) { e.getDevices(function(e) { for (let o = 0;o < e.length;o++) { const a = e[o];if (a && a.deviceId === t) return n && n(a) } return i && i() }); },e.searchDeviceNameById = function(t) { const n = e.devicesHistory[t];return n ? n.device.label || n.device.deviceId : null },e.getDevices = function(t,n) { e._enumerateDevices(t,function(e) { n && n(e.name + ': ' + e.message); }); },e.getVideoCameraIdByLabel = function(t,n,i) { e.getCameras(function(e) { let o = !0; let a = !1; let r = void 0;try { for (var s,c = e[Symbol.iterator]();!(o = (s = c.next()).done);o = !0) { const d = s.value;if (d.label === t) return n && n(d.deviceId) } } catch (e) { a = !0,r = e; } finally { try { o || c.return == null || c.return(); } finally { if (a) throw r } } return i && i(A.NOT_FIND_DEVICE_BY_LABEL) },i); },e.getRecordingDevices = function(t,n) { return e._enumerateDevices(function(e) { const n = e.filter(function(e) { return e.kind == 'audioinput' });t && t(n); },function(e) { n && n(e); }) },e.getPlayoutDevices = function(t,n) { return e._enumerateDevices(function(e) { const n = e.filter(function(e) { return e.kind == 'audiooutput' });t && t(n); },function(e) { n && n(e); }) },e.getCameras = function(t,n) { return e._enumerateDevices(function(e) { const n = e.filter(function(e) { return e.kind == 'videoinput' });t && t(n); },function(e) { n && n(e); }) },e._init(function() { navigator.mediaDevices && navigator.mediaDevices.addEventListener && navigator.mediaDevices.addEventListener('devicechange',function() { e._reloadDevicesInfo(); }),e.deviceReloadTimer = setInterval(e._reloadDevicesInfo,5e3); }),e }; const z = n(5); const q = n.n(z); const K = function(e,t,n) { for (let i = 0;i < n.length;i++) if (e === n[i]) return !0;throw new Error(''.concat(t,' can only be set as ').concat(JSON.stringify(n))) }; const X = function(e,t) { if (!e) throw new Error('Invalid param: '.concat(t || 'param',' cannot be empty'));if (q()(e) !== 'object') throw new Error(''.concat(t || 'This paramter',' is of the object type'));return !0 }; const Q = function(e,t,n,i,o) { if (se(n) && (n = 1),i = i || 255,se(o) && (o = !0),se(e)) throw new Error(''.concat(t || 'param',' cannot be empty'));if (!ee(e,n,i,o)) throw new Error('Invalid '.concat(t || 'string param',': Length of the string: [').concat(n,',')
  .concat(i,'].')
  .concat(o ? ' ASCII characters only.' : '')) }; const $ = function(e,t,n,i) { if (se(n) && (n = 1),i = i || 1e4,se(e)) throw new Error(''.concat(t || 'param',' cannot be empty'));if (!te(e,n,i)) throw new Error('Invalid '.concat(t || 'number param',': The value range is [').concat(n,',')
  .concat(i,']. integer only')) }; const Z = function(e,t) { if (se(e)) throw new Error(''.concat(t || 'param',' cannot be empty'));if (!ne(e)) throw new Error('Invalid '.concat(t || 'boolean param',': The value is of the boolean type.')) }; var ee = function(e,t,n,i) { return t || (t = 0),n || (n = Number.MAX_SAFE_INTEGER),se(i) && (i = !0),re(e) && (!i || oe(e)) && e.length >= t && e.length <= n }; var te = function(e,t,n) { return ae(e) && e >= t && e <= n }; var ne = function(e) { return typeof e === 'boolean' }; const ie = function(e) { return ee(e,1,2047) }; var oe = function(e) { if (typeof e === 'string') { for (let t = 0;t < e.length;t++) { const n = e.charCodeAt(t);if (n < 0 || n > 255) return !1 } return !0 } }; var ae = function(e) { return typeof e === 'number' && e % 1 == 0 }; var re = function(e) { return typeof e === 'string' }; var se = function(e) { return e == null }; const ce = n(12);const de = function(e) { Q(e,'profileName'),!(e = e.toLowerCase()).includes('_') && (e += '_1'),K(e,'profileName',Object.keys(o.SUPPORT_RESOLUTION_LIST));let t = o.SUPPORT_RESOLUTION_LIST[e];t || (e = Object(o.getParameter)('DEFAULT_PROFILE'),t = o.SUPPORT_RESOLUTION_LIST[e]);const n = { profileName:e,video:{ width:t[0],height:t[1] },attributes:{ resolution:''.concat(t[0],'x').concat(t[1]),minFrameRate:t[2],maxFrameRate:t[3],minVideoBW:t[4],maxVideoBW:t[5] } };return t[2] && t[3] && (n.video.frameRate = { ideal:t[2],max:t[3] }),t[6] && t[7] && (n.screen = { width:t[0],height:t[1],frameRate:{ min:t[6],max:t[7] } }),n }; const ue = function(e) { return Object.keys(o.SUPPORT_RESOLUTION_LIST).filter(function(t) { const n = o.SUPPORT_RESOLUTION_LIST[t]; const i = ['width','height','frameRate'];for (const a in i) { const r = i[a];if (e[r] && n[a]) { if (typeof e[r].max === 'number' && e[r].max < n[a]) return !1;if (typeof e[r].min === 'number' && e[r].min > n[a]) return !1 } } return !0 })
  .reverse() }; const le = function(e) { const t = o.AUDIO_PROFILE_SETTINGS[e] || o.AUDIO_PROFILE_SETTINGS.default;return { highQuality:t[0],stereo:t[1],speech:t[2],lowQuality:t[3] } };const pe = function(e) { const t = s();if (t.params = S()({},e),t.stream = e.stream,t.url = e.url,t.onClose = void 0,t.local = !1,t.videoSource = e.videoSource,t.audioSource = e.audioSource,e.video = !(!e.videoSource && !e.video),t.video = e.video,e.audio = !(!e.audioSource && !e.audio),t.audio = e.audio,t.screen = !!e.screen,t.screenAttributes = { width:1920,height:1080,maxFr:5,minFr:1 },t.videoSize = e.videoSize,t.player = void 0,t.audioLevelHelper = null,e.attributes = e.attributes || {},t.attributes = e.attributes,t.microphoneId = e.microphoneId,t.cameraId = e.cameraId,t.inSwitchDevice = !1,t.userMuteVideo = !1,t.userMuteAudio = !1,t.peerMuteVideo = !1,t.peerMuteAudio = !1,t.lowStream = null,t.videoWidth = 0,t.videoHeight = 0,t.streamId = e.streamID,t.userId = null,t.mirror = !1 !== e.mirror,t.DTX = e.audioProcessing && e.audioProcessing.DTX,t.audioProcessing = e.audioProcessing,t.highQuality = !1,t.stereo = !1,t.speech = !1,t.screen || delete t.screen,!(void 0 === t.videoSize || Array.isArray(t.videoSize) && t.videoSize.length === 4)) throw new Error('Invalid Video Size');function n() { const e = {};t.getVideoTrack() === this ? (a.default.debug('Video Track Ended'),e.type = 'videoTrackEnded',e.track = this) : t.getAudioTrack() === this ? (a.default.debug('Audio Track Ended'),e.type = 'audioTrackEnded',e.track = this) : a.default.debug('Detached Track ended',this.kind,this.label,this),e.type && t.dispatchEvent(e); } return t.videoSize = [640,480,640,480],void 0 !== e.local && !0 !== e.local || (t.local = !0),t.initialized = !t.local,function(e) { e.audioMixing = { audioContextInited:!1,defaultVolume:100,inEarMonitoring:'FILE',sounds:{},states:{ IDLE:'IDLE',STARTING:'STARTING',BUSY:'BUSY',PAUSED:'PAUSED' },inEarMonitoringModes:{ NONE:'NONE',FILE:'FILE',MICROPHONE:'MOCROPHONE',ALL:'ALL' },ctx:null,mediaStreamSource:null,mediaStreamDest:null,buffer:{} },e._initSoundIfNotExists = function(t,n) { e.audioMixing.sounds[t] || (e.audioMixing.sounds[t] = { soundId:t,state:'IDLE',muted:e.userMuteAudio,filePath:n,volume:e.audioMixing.defaultVolume,startAt:null,startOffset:null,pauseAt:null,pauseOffset:null,resumeAt:null,resumeOffset:null,stopAt:null,options:null,source:null }); },e._initSoundIfNotExists(-1),e.loadAudioBuffer = function(t,n,i) { const o = r.b.reportApiInvoke(e.sid,{ callback:i,name:'Stream.loadAudioBuffer',options:arguments,tag:'tracer' });Q(n,'url',1,1024,!1),Q(t,'id',1,1024,!1);const s = new XMLHttpRequest;s.open('GET',n,!0),s.responseType = 'arraybuffer',s.onload = function() { if (s.status > 400) { const n = s.statusText;return a.default.error('['.concat(e.streamId,'] loadAudioBuffer Failed: ') + n),o(n) } const i = s.response;e.audioMixing.audioContextInited || e._initAudioContext(),e.audioMixing.ctx.decodeAudioData(i,function(n) { e.audioMixing.buffer[t] = n,o(null); },function(t) { a.default.error('['.concat(e.streamId,'] decodeAudioData Failed: '),t),o(t); }); },s.send(); },e.createAudioBufferSource = function(t) { const n = r.b.reportApiInvoke(e.sid,{ name:'Stream.createAudioBufferSource',options:arguments,tag:'tracer' });if (e.audioMixing.buffer[t.id]) { const i = e.audioMixing.buffer[t.id]; const o = e.audioMixing.ctx.createBufferSource();o.buffer = i;const s = e.audioMixing.ctx.createGain();if (o.connect(s),s.connect(e.audioMixing.mediaStreamDest),o.gainNode = s,t.loop)o.loop = !0,o.start(0,t.playTime / 1e3);else if (t.cycle > 1) if (Object(f.isChrome)()) { o.loop = !0;const c = t.cycle * i.duration * 1e3 - (t.playTime || 0);o.start(0,t.playTime / 1e3,c / 1e3); } else a.default.warning('['.concat(e.streamId,'] Cycle Param is ignored by current browser')),o.start(0,t.playTime / 1e3);else o.start(0,t.playTime / 1e3);const d = e.audioMixing.sounds[t.soundId];return d.source = o,e._flushAudioMixingMuteStatus(),o.addEventListener('ended',function() { o === d.source && e.dispatchEvent({ type:'audioSourceEnded',soundId:t.soundId,source:o,sound:d }); }),n(),o } return a.default.error('['.concat(e.streamId,'] '),'AUDIOBUFFER_NOT_FOUND',t.id),n(!1),!1 },e.on('audioSourceEnded',function(t) { t.source;const n = t.sound;n && n.state === e.audioMixing.states.BUSY && !n.pauseAt && (n.state = e.audioMixing.states.IDLE,n.startAt = null,n.startOffset = null,n.resumeAt = null,n.resumeOffset = null,e.audioMixing.mediaStreamSource.connect(e.audioMixing.mediaStreamDest)); }),e.clearAudioBufferSource = function() { e.audioBufferSource.forEach(function(e) { e.stop(); }); },e._isSoundExists = function(t) { return !!e.audioMixing.sounds[t.soundId] || (a.default.error('SoundId not exists. #'.concat(t.soundId)),!1) },e._initAudioContext = function() { if (e.audioMixing.audioContextInited) throw new Error('Failed to init audio context. Already inited');if (!e.stream) throw new Error('Failed to init audio context. Local Stream not initialized');e.audioMixing.ctx = Object(ce.a)(),e.audioMixing.mediaStreamSource = e.audioMixing.ctx.createMediaStreamSource(e.stream),e.audioMixing.mediaStreamDest = e.audioMixing.ctx.createMediaStreamDestination(),e.audioMixing.mediaStreamSource.connect(e.audioMixing.mediaStreamDest);const t = e.stream.getVideoTracks()[0];if (t && e.audioMixing.mediaStreamDest.stream.addTrack(t),e._isAudioMuted() ? (e._unmuteAudio(),e.stream = e.audioMixing.mediaStreamDest.stream,e._muteAudio()) : e.stream = e.audioMixing.mediaStreamDest.stream,e.audioLevelHelper = null,e.pc && e.pc.peerConnection && e.pc.peerConnection) { const n = (e.pc.peerConnection && e.pc.peerConnection.getSenders()).find(function(e) { return e && e.track && e.track.kind == 'audio' }); const i = e.audioMixing.mediaStreamDest.stream.getAudioTracks()[0];n && n.replaceTrack && i && n.replaceTrack(i); }e.audioMixing.audioContextInited = !0; },e._cleanupAudioMixing = function() { if (e.audioMixing.audioContextInited) { for (const t in e.audioMixing.sounds) { const n = e.audioMixing.sounds[t];n.state !== e.audioMixing.states.BUSY && n.state !== e.audioMixing.states.PAUSED || e._stopOneEffect({ soundId:t }); }e.audioLevelHelper = null,e.audioMixing.audioContextInited = !1; } },e._reloadInEarMonitoringMode = function(t) { if (t) { if (!e.audioMixing.inEarMonitoringModes[t]) return a.default.error('['.concat(e.streamId,'] Invalid InEarMonitoringMode ').concat(t));e.audioMixing.inEarMonitoring = t; } switch (e.audioMixing.audioContextInited || e._initAudioContext(),e.audioMixing.inEarMonitoring) { case e.audioMixing.inEarMonitoringModes.FILE:e.audioMixing.mediaStreamSource.connectedToDestination && (e.audioMixing.mediaStreamSource.disconnect(e.audioMixing.ctx.destination),e.audioMixing.mediaStreamSource.connectedToDestination = !1);case e.audioMixing.inEarMonitoringModes.ALL:for (const n in e.audioMixing.sounds) { const i = e.audioMixing.sounds[n];i && i.source && !i.source.connectedToDestination && (i.source.gainNode.connect(e.audioMixing.ctx.destination),i.source.connectedToDestination = !0); } } switch (e.audioMixing.inEarMonitoring) { case e.audioMixing.inEarMonitoringModes.MICROPHONE:e.audioMixing.source.forEach(function(t) { t.connectedToDestination && (t.gainNode.disconnect(e.audioMixing.ctx.destination),t.connectedToDestination = !1); });case e.audioMixing.inEarMonitoringModes.ALL:e.audioMixing.mediaStreamSource.connectedToDestination || (e.audioMixing.mediaStreamSource.connect(e.audioMixing.ctx.destination),e.audioMixing.mediaStreamSource.connectedToDestination = !0); } },e._startAudioMixingBufferSource = function(t) { e.audioMixing.audioContextInited || e._initAudioContext();const n = { soundId:t.soundId,id:t.filePath,loop:t.loop,cycle:t.cycle,playTime:t.playTime || 0 }; const i = t.replace; const o = e.createAudioBufferSource(n);return o.sound = e.audioMixing.sounds[t.soundId],o ? (o.addEventListener('ended',e._audioMixingFinishedListener,{ once:!0 }),e._reloadInEarMonitoringMode(),i && e.audioMixing.mediaStreamSource.disconnect(e.audioMixing.mediaStreamDest),o) : null },e._stopAudioMixingBufferSource = function(t) { const n = e.audioMixing.sounds[t.soundId].source;return n ? (n.removeEventListener('ended',e._audioMixingFinishedListener),e.audioMixing.mediaStreamSource.connect(e.audioMixing.mediaStreamDest),n.stop(),n) : null },e._flushAudioMixingMuteStatus = function(t) { for (const n in e.audioMixing.sounds) { const i = e.audioMixing.sounds[n];i && (void 0 !== t && (i.muted = !!t),i.source && (i.muted ? i.source.gainNode.gain.value = 0 : i.source.gainNode.gain.value = i.volume / 100)); } },e._handleAudioMixingInvalidStateError = function(t,n,i) { const o = e.audioMixing.sounds[n.soundId]; const r = n.soundId === -1 ? 'INVALID_AUDIO_MIXING_STATE' : 'INVALID_PLAY_EFFECT_STATE';a.default.error('['.concat(e.streamId,'] Cannot ').concat(t,': ')
  .concat(r,', state is ')
  .concat(o.state)),i && i(r); },e._handleAudioMixingNoSourceError = function(t,n,i) { e.audioMixing.sounds[n.soundId].state = e.audioMixing.states.IDLE;const o = n.soundId === -1 ? 'NO_AUDIO_MIXING_SOURCE' : 'NO_EFFECT_SOURCE';a.default.error('['.concat(e.streamId,'] Cannot ').concat(t,': ')
  .concat(o)),i && i(o); },e._getOneEffectStates = function(t) { const n = e.audioMixing.sounds[t.soundId];return function() { return n ? { state:n.state,startAt:n.startAt,resumeAt:n.resumeAt,pauseOffset:n.pauseOffset,pauseAt:n.pauseAt,resumeOffset:n.resumeOffset,stopAt:n.stopAt,duration:e._getOneEffectDuration(t),position:e._getOneEffectCurrentPosition(t) } : {} } },e._audioMixingFinishedListener = function() { const t = this.sound;t.state === e.audioMixing.states.IDLE && e.audioMixing.buffer[t.options.filePath] && !t.options.cacheResource && (a.default.debug('Recycled buffer '.concat(t.options.filePath)),delete e.audioMixing.buffer[t.options.filePath]),t.soundId === -1 && e.dispatchEvent({ type:'audioMixingFinished' }); },e._playOneEffect = function(t,n) { X(t,'options');const i = t.soundId; const o = (t.filePath,t.cacheResource);if (t.cycle,t.loop,t.playTime,t.replace,Object(f.isSafari)() && Object(f.getBrowserVersion)() < 12) { var r = 'BROWSER_NOT_SUPPORT';return a.default.error('['.concat(e.streamId,'] Cannot _playOneEffect: '),r),n(r) }e.audioMixing.audioContextInited || e._initAudioContext(),e._initSoundIfNotExists(i);const s = e.audioMixing.sounds[i];if (s.state === e.audioMixing.states.IDLE) { if (void 0 !== t.cycle && !t.cycle > 0) return r = 'Invalid Parmeter cycle: ' + t.cycle,a.default.error('['.concat(e.streamId,'] ').concat(i),r),n(r);if (se(o) && (t.cacheResource = !0),s.state = e.audioMixing.states.STARTING,s.options = t,e.audioMixing.buffer[t.filePath]) { const c = e._startAudioMixingBufferSource(t);if (c) return s.source = c,s.startAt = Date.now(),s.resumeAt = null,s.pauseOffset = null,s.pauseAt = null,s.resumeOffset = null,s.stopAt = null,s.startOffset = t.playTime || 0,s.state = e.audioMixing.states.BUSY,e._flushAudioMixingMuteStatus(),n(null);s.state = e.audioMixing.states.IDLE;const d = 'CREATE_BUFFERSOURCE_FAILED';if (n) return n(d);a.default.error('['.concat(e.streamId,'] '),d); } else e.loadAudioBuffer(t.filePath,t.filePath,function(i) { if (i)s.state = e.audioMixing.states.IDLE,n ? n(i) : a.default.error('['.concat(e.streamId,'] '),i);else { const o = e._startAudioMixingBufferSource(t);if (o) return s.source = o,s.startAt = Date.now(),s.resumeAt = null,s.pauseOffset = null,s.pauseAt = null,s.resumeOffset = null,s.stopAt = null,s.startOffset = t.playTime || 0,s.state = e.audioMixing.states.BUSY,e._flushAudioMixingMuteStatus(),n(null);if (s.state = e.audioMixing.states.IDLE,i = 'CREATE_BUFFERSOURCE_FAILED',n) return n(i);a.default.error('['.concat(e.streamId,'] '),i); } }); } else e._handleAudioMixingInvalidStateError('_playEffect',t,n); },e._stopOneEffect = function(t,n) { const i = e.audioMixing.sounds[t.soundId];return e._isSoundExists(t) ? i.state === e.audioMixing.states.BUSY || i.state === e.audioMixing.states.PAUSED ? (e._stopAudioMixingBufferSource(t),i.stopAt = Date.now(),i.state = e.audioMixing.states.IDLE,e.audioMixing.buffer[i.options.filePath] && !i.options.cacheResource && (a.default.debug('Recycled buffer '.concat(i.options.filePath)),delete e.audioMixing.buffer[i.options.filePath]),void (n && n(null))) : void e._handleAudioMixingInvalidStateError('_stopOneEffect',t,n) : n('SOUND_NOT_EXISTS') },e._pauseOneEffect = function(t,n) { const i = e.audioMixing.sounds[t.soundId];if (i.state === e.audioMixing.states.BUSY) return e._stopAudioMixingBufferSource(t) ? (i.pauseAt = Date.now(),i.state = e.audioMixing.states.PAUSED,i.resumeAt ? i.pauseOffset = i.pauseAt - i.resumeAt + i.resumeOffset : i.pauseOffset = i.pauseAt - i.startAt + i.startOffset,n && n(null)) : void e._handleAudioMixingNoSourceError('_pauseOneEffect',t,n);e._handleAudioMixingInvalidStateError('_pauseOneEffect',t,n); },e._resumeOneEffect = function(t,n) { const i = e.audioMixing.sounds[t.soundId];if (i.state === e.audioMixing.states.PAUSED) { const o = { soundId:t.soundId,filePath:i.options.filePath,cycle:i.options.cycle,loop:i.options.loop,playTime:i.pauseOffset,replace:i.options.replace }; const r = e._startAudioMixingBufferSource(o);if (!r) { const s = 'CREATE_BUFFERSOURCE_FAILED';return n(s),void a.default.error('['.concat(e.streamId,'] '),s) }i.source = r,i.resumeAt = Date.now(),i.resumeOffset = i.pauseOffset,i.state = e.audioMixing.states.BUSY,i.pauseAt = null,i.pauseOffset = null,n(null); } else e._handleAudioMixingInvalidStateError('_resumeOneEffect',t,n); },e._getOneEffectDuration = function(t) { const n = e.audioMixing.sounds[t.soundId];return n.options && n.options.filePath && e.audioMixing.buffer[n.options.filePath] ? 1e3 * e.audioMixing.buffer[n.options.filePath].duration : null },e._getOneEffectCurrentPosition = function(t,n) { const i = e.audioMixing.sounds[t.soundId];return i.state === e.audioMixing.states.PAUSED ? i.pauseOffset % e._getOneEffectDuration(t) : i.state === e.audioMixing.states.BUSY ? i.resumeAt ? (Date.now() - i.resumeAt + i.resumeOffset + i.startOffset) % e._getOneEffectDuration(t) : (Date.now() - i.startAt + i.startOffset) % e._getOneEffectDuration(t) : void (n && e._handleAudioMixingInvalidStateError('_getOneEffectCurrentPosition',t)) },e._setOneEffectPosition = function(t,n,i) { const o = e.audioMixing.sounds[t.soundId];if (o.state === e.audioMixing.states.BUSY) { if (!e._stopAudioMixingBufferSource(t)) return void e._handleAudioMixingNoSourceError('_setOneEffectPosition',t,i);const r = { soundId:t.soundId,filePath:o.options.filePath,loop:o.options.loop,cycle:o.options.cycle,playTime:n }; const s = e._startAudioMixingBufferSource(r);if (!s) { const c = 'CREATE_BUFFERSOURCE_FAILED';return i && i(c),void a.default.error('['.concat(e.streamId,'] '),c) }o.source = s,o.startAt = Date.now(),o.startOffset = n,o.resumeAt = null,o.resumeOffset = null,o.pauseOffset = null,o.pauseAt = null; } else { if (o.state !== e.audioMixing.states.PAUSED) return void e._handleAudioMixingInvalidStateError('_setOneEffectPosition',t,i);o.pauseOffset = n; }i && i(null); },e.startAudioMixing = function(t,n) { const i = r.b.reportApiInvoke(e.sid,{ callback(t) { if (t) return n && n(t);e.dispatchEvent({ type:'audioMixingPlayed' }),n && n(null); },getStates:e._getOneEffectStates({ soundId:-1 }),name:'Stream.startAudioMixing',options:t });X(t,'options');const a = t.filePath; const s = t.cacheResource; const c = t.cycle; const d = t.loop; const u = t.playTime; const l = t.replace;Q(a,'filePath',1,Object(o.getParameter)('FILEPATH_LENMAX'),!1),$(u,'playTime',0,1e8),!se(c) && $(c,'cycle'),!se(d) && Z(d,'loop'),!se(l) && Z(l,'replace'),!se(s) && Z(s,'cacheResource');const p = S()({ soundId:-1 },t);e._playOneEffect(p,i); },e.stopAudioMixing = function(t) { const n = r.b.reportApiInvoke(e.sid,{ callback:t,getStates:e._getOneEffectStates({ soundId:-1 }),name:'Stream.stopAudioMixing' });e._stopOneEffect({ soundId:-1 },n); },e.pauseAudioMixing = function(t) { const n = r.b.reportApiInvoke(e.sid,{ callback:t,getStates:e._getOneEffectStates({ soundId:-1 }),name:'Stream.pauseAudioMixing' });return e._pauseOneEffect({ soundId:-1 },n) },e.resumeAudioMixing = function(t) { const n = r.b.reportApiInvoke(e.sid,{ callback(n,i) { if (n) return t && t(n);e.dispatchEvent({ type:'audioMixingPlayed' }),t && t(null); },getStates:e._getOneEffectStates({ soundId:-1 }),name:'Stream.resumeAudioMixing' });e._resumeOneEffect({ soundId:-1 },n); },e.adjustAudioMixingVolume = function(t) { const n = r.b.reportApiInvoke(e.sid,{ getStates:e._getOneEffectStates({ soundId:-1 }),name:'Stream.adjustAudioMixingVolume',options:arguments,tag:'tracer' });$(t,'volume',0,100),e.audioMixing.sounds[-1].volume = t,e._flushAudioMixingMuteStatus(),n(); },e.getAudioMixingDuration = function() { const t = r.b.reportApiInvoke(e.sid,{ getStates:e._getOneEffectStates({ soundId:-1 }),name:'Stream.getAudioMixingDuration' }); const n = e._getOneEffectDuration({ soundId:-1 });return t(null,n),n },e.getAudioMixingCurrentPosition = function() { const t = r.b.reportApiInvoke(e.sid,{ getStates:e._getOneEffectStates({ soundId:-1 }),name:'Stream.getAudioMixingCurrentPosition' }); const n = e._getOneEffectCurrentPosition({ soundId:-1 },!0);return t(null,n),n },e.setAudioMixingPosition = function(t,n) { const i = r.b.reportApiInvoke(e.sid,{ callback:n,options:arguments,tag:'tracer',getStates:e._getOneEffectStates({ soundId:-1 }),name:'Stream.setAudioMixingPosition' });$(t,'position',0,1e8),e._setOneEffectPosition({ soundId:-1 },t,i); },e.playEffect = function(t,n) { const i = r.b.reportApiInvoke(e.sid,{ callback(t) { if (t) return n && n(t);e.dispatchEvent({ type:'effectPlayed' }),n && n(null); },name:'Stream.playEffect',options:t });X(t,'options');const a = t.soundId; const s = t.filePath; const c = t.cycle;$(a,'soundId',1,1e4),Q(s,'filePath',0,Object(o.getParameter)('FILEPATH_LENMAX'),!1),!se(c) && $(c,'cycle'),e._playOneEffect(t,i); },e.stopEffect = function(t,n) { const i = r.b.reportApiInvoke(e.sid,{ callback:n,getStates:e._getOneEffectStates({ soundId:t }),name:'Stream.stopEffect' });$(t,'soundId',1,1e4),e._stopOneEffect({ soundId:t },i); },e.stopAllEffects = function(t) { const n = r.b.reportApiInvoke(e.sid,{ callback:t,name:'Stream.stopAllEffect' }); let i = !1; let o = 0; let a = 0; const s = function(e) { i || (e ? (n(e),i = !0) : o += 1,o === a && (n(null),i = !0)); };for (const c in e.audioMixing.sounds) { const d = e.audioMixing.sounds[c];d.soundId !== -1 && (d.state !== e.audioMixing.states.BUSY && d.state !== e.audioMixing.states.PAUSED || (a++,e._stopOneEffect({ soundId:c },s))); }a || n(null); },e.preloadEffect = function(t,n,i) { const a = r.b.reportApiInvoke(e.sid,{ callback:i,options:arguments,tag:'tracer',name:'Stream.preloadEffect' });$(t,'soundId',1,1e4),Q(n,'filePath',1,Object(o.getParameter)('FILEPATH_LENMAX'),!1),e._initSoundIfNotExists(t,n),e.audioMixing.buffer[n] ? a(null) : e.loadAudioBuffer(n,n,a); },e.unloadEffect = function(t,n) { const i = r.b.reportApiInvoke(e.sid,{ callback:n,options:arguments,tag:'tracer',name:'Stream.unloadEffect' });$(t,'soundId',1,1e4);const o = e.audioMixing.sounds[t];if (!o) { const s = 'SOUND_NOT_EXISTS';return a.default.error(s,t),void i(s) } const c = o.options ? o.options.filePath : o.filePath;if (c) delete e.audioMixing.buffer[c],delete e.audioMixing.sounds[t],i(null);else { const d = 'SOUND_BUFFER_NOT_FOUND';a.default.error(d,t),i(d); } },e.pauseEffect = function(t,n) { const i = r.b.reportApiInvoke(e.sid,{ callback:n,options:arguments,tag:'tracer',name:'Stream.pauseEffect' });return e._pauseOneEffect({ soundId:t },i) },e.pauseAllEffects = function(t) { const n = r.b.reportApiInvoke(e.sid,{ callback:t,name:'Stream.pauseAllEffects' }); let i = !1; let o = 0; let a = 0; const s = function(e) { i || (e ? (n(e),i = !0) : o += 1,o === a && (n(null),i = !0)); };for (const c in e.audioMixing.sounds)c !== '-1' && e.audioMixing.sounds[c].state === e.audioMixing.states.BUSY && (a++,e._pauseOneEffect({ soundId:c },s));a || n(null); },e.resumeEffect = function(t,n) { $(t,'soundId',1,1e4);const i = r.b.reportApiInvoke(e.sid,{ callback:n,options:arguments,tag:'tracer',name:'Stream.resumeEffect' });return e._resumeOneEffect({ soundId:t },i) },e.resumeAllEffects = function(t) { const n = r.b.reportApiInvoke(e.sid,{ callback:t,name:'Stream.resumeAllEffects' }); let i = !1; let o = 0; let a = 0; const s = function(e) { i || (e ? (n(e),i = !0) : o += 1,o === a && (n(null),i = !0)); };for (const c in e.audioMixing.sounds)c !== '-1' && e.audioMixing.sounds[c].state === e.audioMixing.states.PAUSED && (a++,e._resumeOneEffect({ soundId:c },s));a || n(null); },e.getEffectsVolume = function() { const t = [];for (const n in e.audioMixing.sounds) { const i = e.audioMixing.sounds[n];i && n !== '-1' && t.push({ soundId:parseInt(n),volume:i.volume }); } return t },e.setEffectsVolume = function(t,n) { const i = r.b.reportApiInvoke(e.sid,{ name:'Stream.setEffectsVolume',options:arguments,tag:'tracer',callback:n });for (const o in $(t,'volume',0,100),e.audioMixing.defaultVolume = t,e.audioMixing.sounds) { const a = e.audioMixing.sounds[o];o !== '-1' && (a.volume = t); }e._flushAudioMixingMuteStatus(),i(null); },e.setVolumeOfEffect = function(t,n,i) { const o = r.b.reportApiInvoke(e.sid,{ name:'Stream.setVolumeOfEffect',options:arguments,tag:'tracer',callback:i });$(t,'soundId',0,1e4),$(n,'volume',0,100),e._initSoundIfNotExists(t),e.audioMixing.sounds[t].volume = n,e._flushAudioMixingMuteStatus(),o(null); }; }(t),function(e,t) { e.videoConstraint = {},t.cameraId && (e.videoConstraint.deviceId = { exact:t.cameraId }),e.videoSize && (e.videoConstraint.width = e.videoSize[0],e.videoConstraint.height = e.videoSize[1]),Object(f.isLegacyChrome)() || (e.videoConstraint.frameRate = { ideal:30,max:30 }),e.audioConstraint = {},t.microphoneId && (e.audioConstraint.deviceId = { exact:t.microphoneId }),Object(f.isLegacyChrome)() || e.audioProcessing && (void 0 !== e.audioProcessing.AGC && (Object(f.isFireFox)() ? e.audioConstraint.autoGainControl = e.audioProcessing.AGC : Object(f.isChrome)() && (e.audioConstraint.googAutoGainControl = e.audioProcessing.AGC,e.audioConstraint.googAutoGainControl2 = e.audioProcessing.AGC)),void 0 !== e.audioProcessing.AEC && (e.audioConstraint.echoCancellation = e.audioProcessing.AEC),void 0 !== e.audioProcessing.ANS && (Object(f.isFireFox)() ? e.audioConstraint.noiseSuppression = e.audioProcessing.ANS : Object(f.isChrome)() && (e.audioConstraint.googNoiseSuppression = e.audioProcessing.ANS))),e.screenConstraint = {},t.sourceId && (e.screenConstraint.sourceId = t.sourceId),t.extensionId && Object(f.isChrome)() ? (e.screenConstraint.extensionId = t.extensionId,e.screenConstraint.mandatory = { chromeMediaSource:'desktop',maxWidth:e.screenAttributes.width,maxHeight:e.screenAttributes.height,maxFrameRate:e.screenAttributes.maxFr,minFrameRate:e.screenAttributes.minFr }) : (e.screenConstraint.mediaSource = 'screen',e.screenConstraint.width = e.screenAttributes.width,e.screenConstraint.height = e.screenAttributes.height,e.screenConstraint.frameRate = { ideal:e.screenAttributes.maxFr,max:e.screenAttributes.maxFr }),t.mediaSource && (e.screenConstraint.mediaSource = t.mediaSource),e.setVideoResolution = function(n) { const i = r.b.reportApiInvoke(e.sid,{ name:'Stream.setVideoResolution',options:arguments,tag:'tracer' });if (!(Array.isArray(n))) { const o = de(n += '');return o && o.video ? (e.videoConstraint = S()(e.videoConstraint,{ width:{ ideal:o.video.width },height:{ ideal:o.video.height } }),t.attributes.resolution = o.attributes.resolution,(s = e.stream && e.stream.getVideoTracks && e.stream.getVideoTracks()[0]) && s.applyConstraints ? (a.default.debug('setVideoResolution applyConstraints',e.videoConstraint),s.applyConstraints(e.videoConstraint).then(i)
  .catch(i)) : i(),!0) : (i('NO_PROFILE_'.concat(n)),!1) } let s; const c = n[0]; const d = n[1];e.videoConstraint = S()(e.videoConstraint,{ width:{ ideal:c },height:{ ideal:d } }),t.attributes.resolution = ''.concat(c,'x').concat(d),(s = e.stream && e.stream.getVideoTracks && e.stream.getVideoTracks()[0]) && s.applyConstraints ? (a.default.debug('setVideoResolution applyConstraints',e.videoConstraint),s.applyConstraints(e.videoConstraint).then(i)
  .catch(i)) : i(); },e.setVideoFrameRate = function(n) { const i = r.b.reportApiInvoke(e.sid,{ name:'Stream.setVideoFrameRate',options:arguments,tag:'tracer' });if (Object(f.isFireFox)()) return i('FIREFOX_NOT_SUPPORTED'),!1;if (q()(n) === 'object' && Array.isArray(n) && n.length > 1) { e.videoConstraint = S()(e.videoConstraint,{ frameRate:{ ideal:n[0],max:n[1] } }),t.attributes.minFrameRate = n[0],t.attributes.maxFrameRate = n[1];const o = e.stream && e.stream.getVideoTracks && e.stream.getVideoTracks()[0];return o && o.applyConstraints ? (a.default.debug('setVideoFrameRate applyConstraints',e.videoConstraint),o.applyConstraints(e.videoConstraint).then(i)
  .catch(i)) : i(),!0 } return i('INVALID_PARAM_'.concat(JSON.stringify(n))),!1 },e.setVideoBitRate = function(n) { const i = r.b.reportApiInvoke(e.sid,{ name:'Stream.setVideoBitRate',options:arguments,tag:'tracer' });return q()(n) === 'object' && Array.isArray(n) && n.length > 1 ? (t.attributes.minVideoBW = n[0],t.attributes.maxVideoBW = n[1],e.connectionSpec && (e.connectionSpec.minVideoBW = n[0],e.connectionSpec.maxVideoBW = n[1]),e.pc && e.pc.renegotiate && e.pc.renegotiate(),i(),!0) : (i('INVALID_PARAM_'.concat(JSON.stringify(n))),!1) },e.setScreenBitRate = function(n) { const i = r.b.reportApiInvoke(e.sid,{ name:'Stream.setScreenBitRate',options:arguments,tag:'tracer' });return q()(n) === 'object' && Array.isArray(n) && n.length > 1 ? (t.screenAttributes.minVideoBW = n[0],t.screenAttributes.maxVideoBW = n[1],i(),!0) : (i('INVALID_PARAM_'.concat(JSON.stringify(n))),!1) },e.setScreenProfile = function(t) { const n = r.b.reportApiInvoke(e.sid,{ name:'Stream.setScreenProfile',options:arguments,tag:'tracer' });K(t,'profile',['480p_1','480p_2','720p_1','720p_2','1080p_1','1080p_2']);const i = de(t);return i && i.screen ? (e.screenConstraint.mandatory ? (e.screenConstraint.mandatory.maxWidth = i.screen.width,e.screenConstraint.mandatory.maxHeight = i.screen.height,i.screen.frameRate && i.screen.frameRate.min && i.screen.frameRate.max && (e.screenConstraint.mandatory.minFrameRate = i.screen.frameRate.min,e.screenConstraint.mandatory.maxFrameRate = i.screen.frameRate.max)) : e.screenConstraint = S()(e.screenConstraint,i.screen),e.screenAttributes.width = i.screen.width,e.screenAttributes.height = i.screen.height,e.screenAttributes.minFr = i.screen.frameRate.min,e.screenAttributes.maxFr = i.screen.frameRate.max,n(),!0) : (n('NO_SCREEN_PROFILE_'.concat(JSON.stringify(t))),!1) },e.setVideoProfileCustom = function(t) { const n = r.b.reportApiInvoke(e.sid,{ name:'Stream.setVideoProfileCustom',options:arguments,tag:'tracer' });e.setVideoResolution(t[0]),e.setVideoFrameRate([t[1],t[1]]),e.setVideoBitRate([t[2],t[2]]),n(); },e.setVideoProfileCustomPlus = function(n) { const i = r.b.reportApiInvoke(e.sid,{ name:'Stream.setVideoProfileCustom',options:arguments,tag:'tracer' });e.videoConstraint.width = n.width,e.videoConstraint.height = n.height,t.attributes.resolution = ''.concat(n.width,'x').concat(n.height),e.setVideoFrameRate([n.framerate,n.framerate]),e.setVideoBitRate([n.bitrate,n.bitrate]),i(); },e.setVideoProfile = function(n) { const i = r.b.reportApiInvoke(e.sid,{ name:'Stream.setVideoProfile',options:arguments,tag:'tracer' }); const o = de(n);if (!o) { const s = 'Invalid Profile '.concat(n);throw new Error(s) } if (e.profile = n,o && o.video) { e.profile = o.profileName,e.videoConstraint = S()(e.videoConstraint,o.video),e.connectionSpec && o.attributes.maxVideoBW && (e.connectionSpec.minVideoBW = o.attributes.minVideoBW,e.connectionSpec.maxVideoBW = o.attributes.maxVideoBW),Object(f.isEdge)() && (e.videoConstraint.frameRate.max = 60),Object(f.isFireFox)() && (e.videoConstraint.frameRate = { ideal:30,max:30 }),t.attributes = S()(t.attributes,o.attributes),e.pc && e.pc.renegotiate && e.pc.renegotiate();const c = e.stream && e.stream.getVideoTracks && e.stream.getVideoTracks()[0];return c && c.applyConstraints ? (a.default.debug('setVideoProfile applyConstraints',e.videoConstraint),c.applyConstraints(e.videoConstraint).then(function(t) { i(t),Object(G.h)(e.stream,function(t,n) { e.videoWidth = t,e.videoHeight = n; },function(t) { a.default.warning('['.concat(e.streamId,'] vsResHack failed: '),t); }); })
  .catch(i)) : i(),!0 } return i('INVALID_VIDEO_PROFILE_'.concat(n)),!1 },e.setAudioProfile = function(t) { const n = r.b.reportApiInvoke(e.sid,{ name:'Stream.setAudioProfile',options:arguments,tag:'tracer' });K(t,'profile',['speech_low_quality','speech_standard','music_standard','standard_stereo','high_quality','high_quality_stereo']),e.audioProfile = t;const i = le(t);return e.highQuality = i.highQuality,e.stereo = i.stereo,e.speech = i.speech,e.lowQuality = i.lowQuality,e.stereo && Object(f.isChrome)() && (e.audioConstraint.googAutoGainControl = !1,e.audioConstraint.googAutoGainControl2 = !1,e.audioConstraint.echoCancellation = !1,e.audioConstraint.googNoiseSuppression = !1),n(),!0 },e.setVideoEncoderConfiguration = function(t) { X(t,'config');const n = r.b.reportApiInvoke(e.sid,{ name:'Stream.setVideoEncoderConfiguration',options:t,tag:'tracer' });t.resolution && ($(t.resolution.width,'config.resolution.width'),$(t.resolution.height,'config.resolution.height'),e.setVideoResolution([t.resolution.width,t.resolution.height])),t.frameRate && ($(t.frameRate.min,'config.frameRate.min'),$(t.frameRate.max,'config.frameRate.max'),e.setVideoFrameRate([t.frameRate.min,t.frameRate.max])),t.bitrate && ($(t.bitrate.min,'config.bitrate.min',1,1e7),$(t.bitrate.max,'config.bitrate.max',1,1e7),e.setVideoBitRate([t.bitrate.min,t.bitrate.max])),n(); },e.getSupportedProfile = function(t) { const n = r.b.reportApiInvoke(e.sid,{ name:'Stream.getSupportedProfile',options:arguments,tag:'tracer',callback:t });if (!e.local) { var i = 'ONLY_LOCAL_STREAM_SUPPORTED';return a.default.error(i),n(i) } if (!e.stream) return i = 'STREAM_NOT_INIT',a.default.error(i),n(i);if (!e.stream.getVideoTracks) return i = 'TRACK_NOT_SUPPORT',a.default.error(i),n(i);const o = e.stream.getVideoTracks()[0];if (!o) return i = 'NO_VIDEO_TRACK_FOUND',a.default.error(i),n(i);if (!o.getCapabilities) return i = 'GETCAPABILITY_NOT_SUPPORT',a.default.error(i),n(i);const s = o.getCapabilities();return n(null,ue(s)) }; }(t,e),t.on('collectStats',function(e) { e.promises.push(t._getPCStats(e.interval)),e.promises.push(new Promise(function(e) { const n = {};t.pc && t.pc.isSubscriber ? window.navigator.userAgent.match('Firefox') !== null && (J(n,'videoReceiveResolutionHeight',t.videoHeight),J(n,'videoReceiveResolutionWidth',t.videoWidth)) : t.pc && !t.pc.isSubscriber && ((Object(f.isSafari)() || Object(f.isFireFox)()) && (J(n,'videoSendResolutionHeight',t.videoHeight),J(n,'videoSendResolutionWidth',t.videoWidth)),(Object(f.isSafari)() || Object(f.isFireFox)()) && t.uplinkStats && J(n,'videoSendPacketsLost',t.uplinkStats.uplink_cumulative_lost)),e(n); })),e.promises.push(new Promise(function(e) { const n = {};return t.traffic_stats && t.pc && t.pc.isSubscriber ? (J(n,'accessDelay',t.traffic_stats.access_delay),J(n,'endToEndDelay',t.traffic_stats.e2e_delay),J(n,'videoReceiveDelay',t.traffic_stats.video_delay),J(n,'audioReceiveDelay',t.traffic_stats.audio_delay)) : t.traffic_stats && t.pc && !t.pc.isSubscriber && J(n,'accessDelay',t.traffic_stats.access_delay),e(n) })); }),t.getId = function() { return t.streamId },t.getUserId = function() { return t.userId },t.setUserId = function(e) { const n = r.b.reportApiInvoke(t.sid,{ name:'Stream.setUserId',options:arguments,tag:'tracer' });t.userId && a.default.warning('['.concat(t.streamId,'] Stream.userId ').concat(t.userId,' => ')
  .concat(e)),t.userId = e,n(); },t.getAttributes = function() { return e.screen ? t.screenAttributes : e.attributes },t.hasAudio = function() { return t.audio },t.hasVideo = function() { return t.video },t.hasScreen = function() { return t.screen },t.isVideoOn = function() { return (t.hasVideo() || t.hasScreen()) && !t.userMuteVideo },t.isAudioOn = function() { return t.hasAudio() && !t.userMuteAudio },t.init = function(i,o) { const s = r.b.reportApiInvoke(t.sid,{ callback(e,t) { if (e) return o && o(e);i && i(t); },name:'Stream.init',options:arguments,tag:'tracer' }); let c = ((new Date).getTime(),arguments[2]);if (void 0 === c && (c = 2),!0 === t.initialized) return s({ type:'warning',msg:'STREAM_ALREADY_INITIALIZED' });if (!0 !== t.local) return s({ type:'warning',msg:'STREAM_NOT_LOCAL' });t.videoSource ? t.videoName = 'videoSource' : t.video && (t.videoName = Y.searchDeviceNameById(e.cameraId) || 'default'),t.audioSource ? t.audioName = 'audioSource' : t.audio && (t.audioName = Y.searchDeviceNameById(e.microphoneId) || 'default'),t.screen && (t.screenName = e.extensionId || 'default');try { if (e.audio || e.video || e.screen || e.videoSource || e.audioSource) { a.default.debug('['.concat(t.streamId,'] Requested access to local media'));const d = { streamId:t.streamId };e.videoSource ? d.videoSource = e.videoSource : e.screen ? d.screen = t.screenConstraint : e.video && (d.video = t.videoConstraint),e.audioSource ? d.audioSource = e.audioSource : e.audio && (d.audio = t.audioConstraint),H(d,function(i) { d.screen && a.default.debug('['.concat(t.streamId,'] User has granted access to screen sharing')),(d.video || d.audio) && a.default.debug('['.concat(t.streamId,'] User has granted access to local media')),t.dispatchEvent({ type:'accessAllowed' }),t.stream = i,t.initialized = !0,t.reloadDeviceName(),t.hasVideo() && Object(G.h)(i,function(e,n) { t.videoWidth = e,t.videoHeight = n; },function(e) { a.default.warning('['.concat(t.streamId,'] vsResHack failed: '),e); }),e.screen && t.stream && t.stream.getVideoTracks()[0] && (t.stream.getVideoTracks()[0].onended = function() { t.dispatchEvent({ type:'stopScreenSharing' }); }),t.stream && t.stream.getTracks && t.stream.getTracks().forEach(function(e) { e && !e.onended && (e.onended = n); }),s(); },function(e) { const n = { type:'error',info:null };switch (e && (n.msg = e.name || e.code || e,e.message && (n.info = e.message),e.code && (n.info ? n.info += '. ' + e.code : n.info = ' ' + e.code),e.constraint && (n.info ? n.info += '. Constraint: ' + e.constraint : n.info = 'constraint: ' + e.constraint)),n.msg) { case 'Starting video failed':case 'TrackStartError':if (t.videoConstraint && (delete t.videoConstraint.width,delete t.videoConstraint.height),c > 0) return void setTimeout(function() { t.init(function(e) { return s(e) },s,c - 1); },1);n.msg = 'MEDIA_OPTION_INVALID';break;case 'DevicesNotFoundError':n.msg = 'DEVICES_NOT_FOUND';break;case 'NotSupportedError':n.msg = 'NOT_SUPPORTED';break;case 'PermissionDeniedError':case 'InvalidStateError':n.msg = 'PERMISSION_DENIED',t.dispatchEvent({ type:'accessDenied' });break;case 'PERMISSION_DENIED':case 'NotAllowedError':t.dispatchEvent({ type:'accessDenied' });break;case 'ConstraintNotSatisfiedError':n.msg = 'CONSTRAINT_NOT_SATISFIED';break;default:n.msg || (n.msg = 'UNDEFINED'); } const i = 'Media access '.concat(n.msg).concat(n.info ? ': ' + n.info : '');a.default.error('['.concat(t.streamId,'] '),i),s(n); }); } else s({ type:'warning',msg:'STREAM_HAS_NO_MEDIA_ATTRIBUTES' }); } catch (e) { a.default.error('['.concat(t.streamId,'] Stream init: '),e),s({ type:'error',msg:e.message || e }); } },t.reloadDeviceName = function() { if (t.stream) { if (t.stream.getVideoTracks) { const e = t.stream.getVideoTracks()[0];e && e.label && (t.videoName = e.label); } if (t.stream.getAudioTracks) { const n = t.stream.getAudioTracks()[0];n && n.label && (t.audioName = n.label); } } },t.close = function() { const e = r.b.reportApiInvoke(null,{ name:'Stream.close',options:arguments,tag:'tracer' });if (a.default.debug('['.concat(t.streamId,'] Close stream with id'),t.streamId),void 0 !== t.stream) { const n = t.stream.getTracks();for (const i in n)n.hasOwnProperty(i) && n[i].stop();t.stream = void 0; }Object(f.isSafari)() && t.pc && t.pc.peerConnection && t.pc.peerConnection.removeTrack && t.pc.peerConnection.getSenders && t.pc.peerConnection.getSenders().forEach(function(e) { e && (a.default.debug('['.concat(t.streamId,'] Remove Track'),e),t.pc.peerConnection.removeTrack(e)); });t.initialized = !1,t._onAudioMute = void 0,t._onAudioUnmute = void 0,t._onVideoMute = void 0,t._onVideoUnmute = void 0,t.lowStream && t.lowStream.close(),e(); },t.enableAudio = function() { let e; const n = r.b.reportApiInvoke(t.sid,{ name:'Stream.enableAudio',options:arguments,tag:'tracer' });return a.default.deprecate('['.concat(t.streamId,'] Stream.enableAudio is deprecated and will be removed in the future. Use Stream.unmuteAudio instead')),t.userMuteAudio || a.default.warning('['.concat(t.streamId,'] User already enableAudio')),t.userMuteAudio = !1,n(null,e = !t.peerMuteAudio && t._unmuteAudio()),e },t.disableAudio = function() { const e = r.b.reportApiInvoke(t.sid,{ name:'Stream.disableAudio',options:arguments,tag:'tracer' });a.default.deprecate('['.concat(t.streamId,'] Stream.disableAudio is deprecated and will be removed in the future. Use Stream.muteAudio instead')),t.userMuteAudio && a.default.warning('['.concat(t.streamId,'] User already disableAudio')),t.userMuteAudio = !0;const n = t._muteAudio();return e(null,n),n },t.enableVideo = function() { let e; const n = r.b.reportApiInvoke(t.sid,{ name:'Stream.enableVideo',options:arguments,tag:'tracer' });return a.default.deprecate('['.concat(t.streamId,'] Stream.enableVideo is deprecated and will be removed in the future. Use Stream.unmuteVideo instead')),t.userMuteVideo || a.default.warning('['.concat(t.streamId,'] User already enableVideo')),t.userMuteVideo = !1,t.lowStream && (t.lowStream.userMuteVideo = !1),n(null,e = !t.peerMuteVideo && t._unmuteVideo()),e },t.disableVideo = function() { const e = r.b.reportApiInvoke(t.sid,{ name:'Stream.disableVideo',options:arguments,tag:'tracer' });a.default.deprecate('['.concat(t.streamId,'] Stream.disableVideo is deprecated and will be removed in the future. Use Stream.muteVideo instead')),t.userMuteVideo && a.default.warning('['.concat(t.streamId,'] User already disableVideo')),t.userMuteVideo = !0,t.lowStream && (t.lowStream.userMuteVideo = !0);const n = t._muteVideo();return e(null,n),n },t.unmuteAudio = function() { let e; const n = r.b.reportApiInvoke(t.sid,{ name:'Stream.unmuteAudio',options:arguments,tag:'tracer' });return t.userMuteAudio || a.default.warning('['.concat(t.streamId,'] User already unmuteAudio')),t.userMuteAudio = !1,n(null,e = !t.peerMuteAudio && t._unmuteAudio()),e },t.muteAudio = function() { const e = r.b.reportApiInvoke(t.sid,{ name:'Stream.muteAudio',options:arguments,tag:'tracer' });t.userMuteAudio && a.default.warning('['.concat(t.streamId,'] User already muteAudio')),t.userMuteAudio = !0;const n = t._muteAudio();return e(null,n),n },t.unmuteVideo = function() { let e; const n = r.b.reportApiInvoke(t.sid,{ name:'Stream.unmuteVideo',options:arguments,tag:'tracer' });return t.userMuteVideo || a.default.warning('['.concat(t.streamId,'] User already unmuteVideo')),t.userMuteVideo = !1,t.lowStream && (t.lowStream.userMuteVideo = !1),n(null,e = !t.peerMuteVideo && t._unmuteVideo()),e },t.muteVideo = function() { const e = r.b.reportApiInvoke(t.sid,{ name:'Stream.muteVideo',options:arguments,tag:'tracer' });t.userMuteVideo && a.default.warning('['.concat(t.streamId,'] User already muteVideo')),t.userMuteVideo = !0,t.lowStream && (t.lowStream.userMuteVideo = !0);const n = t._muteVideo();return e(null,n),n },t._unmuteAudio = function() { return a.default.debug('['.concat(t.streamId,'] Unmuted audio stream with id '),t.streamId),t._flushAudioMixingMuteStatus(!1),!(!t.hasAudio() || !t.initialized || void 0 === t.stream || !0 === t.stream.getAudioTracks()[0].enabled) && (t._onAudioUnmute && t._onAudioUnmute(),t.pc && (t.pc.isAudioMute = !1),t.stream.getAudioTracks()[0].enabled = !0,!0) },t._isAudioMuted = function() { if (t.stream && t.hasAudio()) { const e = t.stream.getAudioTracks();return e.length > 0 && !e[0].enabled } return !1 },t._muteAudio = function() { return a.default.debug('['.concat(t.streamId,'] Muted audio stream with id '),t.streamId),t._flushAudioMixingMuteStatus(!0),!!(t.hasAudio() && t.initialized && void 0 !== t.stream && t.stream.getAudioTracks()[0].enabled) && (t._onAudioMute && t._onAudioMute(),t.pc && (t.pc.isAudioMute = !0),t.stream.getAudioTracks()[0].enabled = !1,t.sid && r.b.audioSendingStopped(t.sid,{ succ:!0,reason:'muteAudio' }),!0) },t._unmuteVideo = function() { return a.default.debug('['.concat(t.streamId,'] Unmuted video stream with id'),t.streamId),!(!t.initialized || void 0 === t.stream || !t.stream.getVideoTracks().length || !0 === t.stream.getVideoTracks()[0].enabled) && (t._onVideoUnmute && t._onVideoUnmute(),t.pc && (t.pc.isVideoMute = !1),t.stream.getVideoTracks()[0].enabled = !0,t.lowStream && t.lowStream._unmuteVideo(),!0) },t._muteVideo = function() { return a.default.debug('['.concat(t.streamId,'] Muted video stream with id'),t.streamId),!!(t.initialized && void 0 !== t.stream && t.stream.getVideoTracks().length && t.stream.getVideoTracks()[0].enabled) && (t._onVideoMute && t._onVideoMute(),t.pc && (t.pc.isVideoMute = !0),t.stream.getVideoTracks()[0].enabled = !1,t.lowStream && t.lowStream._muteVideo(),t.sid && r.b.videoSendingStopped(t.sid,{ succ:!0,reason:'muteVideo' }),!0) },t.addTrack = function(i) { const o = r.b.reportApiInvoke(t.sid,{ name:'Stream.addTrack',options:arguments,tag:'tracer' });if (t.pc && t.pc.addTrack(i,t.stream),i.kind == 'audio') { t._cleanupAudioMixing();const a = new MediaStream;t.userMuteAudio && (i.enabled = !1),a.addTrack(i);const s = t.stream.getVideoTracks()[0];s && (a.addTrack(s),t.audio = !0,e.audio = !0),t.stream = a,t.audioLevelHelper = null,t.player && t.player.video && (t.player.video.srcObject = t.stream); } else t.userMuteVideo && (i.enabled = !1),t.stream.addTrack(i),t.video = !0,e.video = !0;i.onended || (i.onended = n),o(); },t.removeTrack = function(n) { const i = r.b.reportApiInvoke(t.sid,{ name:'Stream.removeTrack',options:arguments,tag:'tracer' });t.pc && t.pc.removeTrack(n,t.stream),t.stream.removeTrack(n),t._cleanupAudioMixing(),n.kind === 'audio' ? (t.audio = !1,e.audio = !1) : (t.video = !1,e.video = !1),t.audioLevelHelper = null,n.readyState == 'live' && (n.stop(),a.default.debug('['.concat(t.streamId,'] Track ').concat(n.kind,' Stopped'))),i(); },t.setAudioOutput = function(e,n,i) { const o = r.b.reportApiInvoke(t.sid,{ callback(e,t) { if (e) return i && i(e);n && n(t); },name:'Stream.setAudioOutput',options:arguments,tag:'tracer' });return ee(e,1,255) ? (t.audioOutput = e,t.player ? void t.player.setAudioOutput(e,function() { return o() },o) : o()) : (a.default.error('['.concat(t.streamId,'] setAudioOutput Invalid Parameter'),e),o(A.INVALID_PARAMETER)) },t.play = function(e,n,i) { typeof n === 'function' && (i = n,n = null),a.default.debug('['.concat(t.streamId,'] play().'),e,n);const o = r.b.reportApiInvoke(t.sid,{ name:'Stream.play',options:arguments,tag:'tracer',callback:i });if (Q(e,'elementID'),se(n) || (se(n.fit) || K(n.fit,'fit',['cover','contain']),se(n.muted) || Z(n.muted,'muted')),t.player)a.default.warning('['.concat(t.streamId,'] Stream.play(): Stream is already playing. Fallback to resume stream')),t.resume().then(function() { o(null); })
  .catch(o);else { t.elementID = e,t.playOptions = n,!t.local || t.video || t.screen ? t.player = new C({ id:t.getId(),stream:t,elementID:e,options:n }) : t.hasAudio() && (t.player = new C({ id:t.getId(),stream:t,elementID:e,options:n }));const s = { audio:null,video:null };t.on('player-status-change',function e(n) { if (s[n.mediaType] = n,s.audio && s.video) if (t.removeEventListener('player-status-change',e),s.video.isErrorState || s.audio.isErrorState) { const i = s.video.isErrorState ? s.video : s.audio;o({ isErrorState:!0,status:i.status,reason:i.reason,video:s.video,audio:s.audio }); } else s.video.status === 'aborted' && s.audio.status === 'aborted' ? o({ status:'aborted',reason:'stop',video:s.video,audio:s.audio }) : o(null); }),t.audioOutput && t.player.setAudioOutput(t.audioOutput),void 0 !== t.audioLevel && t.player.setAudioVolume(t.audioLevel),t._flushAudioMixingMuteStatus(!1); } },t.stop = function() { const e = r.b.reportApiInvoke(t.sid,{ name:'Stream.stop',options:arguments,tag:'tracer' });a.default.debug('['.concat(t.streamId,'] Stop stream player with id '),t.streamId),t.player ? (t.player.destroy(),delete t.player) : a.default.error('['.concat(t.streamId,'] Stream.stop(): Stream is not playing')),t._flushAudioMixingMuteStatus(!0),e(); },t.isPlaying = function() { return !!t.player },t.isPaused = function() { return !!t.player && (!!(t.player.video && t.player.video.paused && t.player.mediaElemExists(t.player.video)) || !!(t.player.audio && t.player.audio.paused && t.player.mediaElemExists(t.player.audio))) },t.resume = function() { let e,n;return t.player ? (t.player.video && t.player.video.play && (e = t.player.video.play()),e = e || Promise.resolve(),t.player.audio && t.player.audio.play && (n = t.player.audio.play()),n = n || Promise.resolve(),Promise.all([e,n])) : Promise.reject('NO_PLAYER_FOUND') },t.getVideoTrack = function() { const e = r.b.reportApiInvoke(t.sid,{ name:'Stream.getVideoTrack',options:arguments,tag:'tracer' });if (t.stream && t.stream.getVideoTracks) { const n = t.stream.getVideoTracks()[0];if (n) return a.default.info('['.concat(t.streamId,'] getVideoTrack'),n),e(),n }a.default.info('['.concat(t.streamId,'] getVideoTrack None')),e(null,'getVideoTrack None'); },t.getAudioTrack = function() { const e = r.b.reportApiInvoke(t.sid,{ name:'Stream.getAudioTrack',options:arguments,tag:'tracer' });if (t.stream && t.stream.getAudioTracks) { const n = t.stream.getAudioTracks()[0];if (n) return a.default.info('['.concat(t.streamId,'] getAudioTracks'),n),e(),n }a.default.info('['.concat(t.streamId,'] getAudioTracks None')),e(null,'getAudioTracks None'); },t._replaceMediaStreamTrack = function(e,n,i) { if (t.stream) { if (e.kind == 'video') { if (r = t.stream.getVideoTracks()[0]) return t.userMuteVideo && (e.enabled = !1),t.stream.removeTrack(r),t.stream.addTrack(e),a.default.debug('['.concat(t.streamId,'] _replaceMediaStreamTrack ').concat(e.kind,' SUCCESS')),r.readyState == 'live' && (r.stop(),a.default.debug('['.concat(t.streamId,'] Track ').concat(r.kind,' Stopped'))),n && n();var o = 'MEDIASTREAM_TRACK_NOT_FOUND';return a.default.error('['.concat(t.streamId,'] MEDIASTREAM_TRACK_NOT_FOUND ').concat(e.kind)),i(o) } if (e.kind == 'audio') { var r;if (r = t.stream.getAudioTracks()[0]) { t.userMuteAudio && (e.enabled = !1);const s = new MediaStream;s.addTrack(e);const c = t.stream && t.stream.getVideoTracks()[0];return c && s.addTrack(c),t.stream = s,t.audioLevelHelper = null,t.player && t.player.video && (t.player.video.srcObject = t.stream),a.default.debug('['.concat(t.streamId,'] _replaceMediaStreamTrack SUCCESS')),r.readyState == 'live' && (r.stop(),a.default.debug('['.concat(t.streamId,'] Track ').concat(r.kind,' Stopped'))),n && n() }o = 'MEDIASTREAM_TRACK_NOT_FOUND';return a.default.error('['.concat(t.streamId,'] MEDIASTREAM_TRACK_NOT_FOUND ').concat(e.kind)),i(o) }o = 'INVALID_TRACK_TYPE';return a.default.error('['.concat(t.streamId,'] _replaceMediaStreamTrack ').concat(o,' ')
  .concat(e.kind)),i && i(o) }o = 'NO_STREAM_FOUND';return a.default.error('['.concat(t.streamId,'] _replaceMediaStreamTrack ').concat(o)),i && i(o) },t.replaceTrack = function(e,i,o) { const s = r.b.reportApiInvoke(t.sid,{ callback(e,t) { if (e) return o && o(e);i && i(t); },name:'Stream.replaceTrack',options:arguments,tag:'tracer' });return e && e.kind ? (t._cleanupAudioMixing(),e.onended || (e.onended = n),t.pc && t.pc.hasSender && t.pc.hasSender(e.kind) ? void t.pc.replaceTrack(e,function() { return a.default.debug('['.concat(t.streamId,'] PeerConnection.replaceTrack ').concat(e.kind,' SUCCESS')),t._replaceMediaStreamTrack(e,function(e) { return s(null,e) },s) },function(n) { return a.default.error('['.concat(t.streamId,'] PeerConnection.replaceTrack ').concat(e.kind,' Failed ')
  .concat(n)),s(n) }) : t._replaceMediaStreamTrack(e,function(e) { return s(null,e) },s)) : s('INVALID_TRACK') },t.setAudioVolume = function(e) { const n = r.b.reportApiInvoke(t.sid,{ name:'Stream.setAudioVolume',options:arguments,tag:'tracer' });$(e,'level',0,100),t.audioLevel = e,t.player && t.player.setAudioVolume(e),n(); },t.getStats = function(e,n,i) { const o = { type:'collectStats',promises:[],interval:i };t.dispatchEvent(o),Promise.all(o.promises).then(function(n) { for (var i = {},o = n.length - 1;o >= 0;o--) { const a = n[o];S()(i,a); }e && setTimeout(e.bind(t,i),0); })
  .catch(function(e) { n && setTimeout(n.bind(t,e),0); }); },t._getPCStats = function(e) { return new Promise(function(n,i) { if (!t.pc || t.pc.state !== 'established' || !t.pc.getStats) { return i('PEER_CONNECTION_NOT_ESTABLISHED') }t.pc.getStats(function(e) { if (!t.pc || t.pc.state !== 'established' || !t.pc.getStats) { return i('PEER_CONNECTION_STATE_CHANGE') } const o = t.pc.isSubscriber ? function(e) { const t = {};return e.forEach(function(e) { e.id && (!e.id.includes('recv') && !e.id.includes('inbound_rtp') && !e.id.includes('inbound-rtp') && !e.id.includes('InboundRTP') || (e.mediaType === 'audio' ? (J(t,'audioReceiveBytes',e.bytesReceived),J(t,'audioReceivePackets',e.packetsReceived),J(t,'audioReceivePacketsLost',e.packetsLost)) : (J(t,'videoReceiveBytes',e.bytesReceived),J(t,'videoReceivePacketsLost',e.packetsLost),J(t,'videoReceivePackets',e.packetsReceived),J(t,'videoReceiveFrameRate',e.googFrameRateReceived),J(t,'videoReceiveDecodeFrameRate',e.googFrameRateDecoded),J(t,'videoReceiveResolutionWidth',e.googFrameWidthReceived),J(t,'videoReceiveResolutionHeight',e.googFrameHeightReceived)))); }),t }(e) : function(e) { const t = {};return e.forEach(function(e) { e.id && (!e.id.includes('send') && !e.id.includes('outbound_rtp') && !e.id.includes('OutboundRTP') || (e.mediaType === 'audio' ? (J(t,'audioSendBytes',e.bytesSent),J(t,'audioSendPackets',e.packetsSent),J(t,'audioSendPacketsLost',e.packetsLost)) : (J(t,'videoSendBytes',e.bytesSent),J(t,'videoSendPackets',e.packetsSent),J(t,'videoSendPacketsLost',e.packetsLost),J(t,'videoSendFrameRate',e.googFrameRateSent),J(t,'videoSendResolutionWidth',e.googFrameWidthSent),J(t,'videoSendResolutionHeight',e.googFrameHeightSent)))); }),t }(e);return n(o) },e); }).then(function(e) { return t.pc.isSubscriber ? (Object(f.isFireFox)() || Object(f.isSafari)()) && (e.videoReceiveResolutionHeight && e.videoReceiveResolutionHeight !== '0' || e.videoReceiveResolutionWidth && e.videoReceiveResolutionWidth !== '0' || (J(e,'videoReceiveResolutionHeight',t.videoHeight),J(e,'videoReceiveResolutionWidth',t.videoWidth))) : ((Object(f.isSafari)() || Object(f.isFireFox)()) && (e.videoSendResolutionHeight && e.videoSendResolutionHeight !== '0' || e.videoSendResolutionWidth && e.videoSendResolutionWidth !== '0' || (J(e,'videoSendResolutionHeight',t.videoHeight),J(e,'videoSendResolutionWidth',t.videoWidth))),(Object(f.isSafari)() || Object(f.isFireFox)()) && t.uplinkStats && J(e,'videoSendPacketsLost',t.uplinkStats.uplink_cumulative_lost)),Promise.resolve(e) }) },t.getAudioLevel = function() { if (t.audioLevelHelper) return t.audioLevelHelper.getAudioLevel();if (t.stream) { if (t.stream.getAudioTracks().length !== 0) return t.audioLevelHelper = new G.a(t.stream),t.audioLevelHelper.getAudioLevel();a.default.warning('['.concat(t.streamId,'] can\'t get audioLevel beacuse no audio trace in stream')); } else a.default.warning('['.concat(t.streamId,'] can\'t get audioLevel beacuse no stream exist')); },t.setVideoProfile('480P'),t._switchVideoDevice = function(e,n,i) { if (e === t.cameraId) return n && n();const o = { video:S()({},t.videoConstraint,{ deviceId:{ exact:e } }),audio:!1 };a.default.debug('['.concat(t.streamId,'] ').concat(o)),H(o,function(o) { try { const a = function() { t.isPlaying() && (t.stop(),t.elementID && t.play(t.elementID,t.playOptions)),t.cameraId = e,t.videoConstraint.deviceId = { exact:e },t.userMuteVideo && (t.stream.getVideoTracks()[0].enabled = !1),n && n(); };Object(f.isSafari)() ? t.replaceTrack(o.getVideoTracks()[0],a,i) : (t.removeTrack(t.stream.getVideoTracks()[0]),t.addTrack(o.getVideoTracks()[0]),a()); } catch (e) { return i && i(e) } },function(e) { return i && i(e) }); },t._switchAudioDevice = function(e,n,i) { if (e === t.microphoneId) return n && n();const o = { video:!1,audio:S()({},t.audioConstraint,{ deviceId:{ exact:e } }) };a.default.debug('['.concat(t.streamId,'] '),o),H(o,function(o) { const a = function() { t._cleanupAudioMixing(),t.userMuteAudio && (t.stream.getAudioTracks()[0].enabled = !1),t.isPlaying() && (t.stop(),t.elementID && t.play(t.elementID)),t.microphoneId = e,t.audioConstraint.deviceId = { exact:e },n && n(); };try { Object(f.isSafari)() ? t.replaceTrack(o.getAudioTracks()[0],a,i) : (t.removeTrack(t.stream.getAudioTracks()[0]),t.addTrack(o.getAudioTracks()[0]),a()); } catch (e) { return i && i(e) } },function(e) { return i && i(e) }); },t.switchDevice = function(e,n,i,o) { const s = r.b.reportApiInvoke(t.sid,{ callback(e,t) { if (e) return o && o(e);i && i(t); },name:'Stream.switchDevice',options:arguments,tag:'tracer' });Q(n,'deviceId');const c = function() { return t.inSwitchDevice = !1,s() }; const d = function(e) { t.inSwitchDevice = !1,a.default.error('['.concat(t.streamId,'] '),e),s(e); };if (t.inSwitchDevice) return s('Device switch is in process.');if (t.inSwitchDevice = !0,!t.local) return d('Only the local stream can switch the device.');if (t.screen && e === 'video') return d('The device cannot be switched during screen-sharing.');if (t.videoSource || t.audioSource) return d('The device cannot be switched when using videoSource or audioSource.');if (t.lowStream) return d('The device cannot be switched when using lowstream.');let u = !1;for (const l in t.audioMixing.sounds) { if (t.audioMixing.sounds[l].state !== t.audioMixing.states.IDLE) { u = !0;break } } if (t.audioMixing.audioContextInited && u) return d('The device cannot be switched when using audio Mixing.');Y.getDeviceById(n,function() { if (e === 'video')t._switchVideoDevice(n,c,d);else { if (e !== 'audio') return d('Invalid type.');t._switchAudioDevice(n,c,d); } },function() { return d('The device does not exist.') }); },t }; const fe = n(14); const me = ['live','rtc','web','interop','h264_interop','web-only']; const ge = ['vp8','h264']; const ve = ['aes-128-xts','aes-256-xts','aes-128-ecb']; const Se = n(15); const Ie = n.n(Se); const he = function(e) { e && e.apply(this,[].slice.call(arguments,1)); }; const ye = n(6); const _e = function(e) { const t = s();return t.needReconnect = !0,t.isTimeout = !1,t.isInit = !0,t.sendbytes = 0,t.recvbytes = 0,t.startTime = Date.now(),t.lastMsgTime = null,t.clientId = e.clientId,t.hostIndex = 0,t.requestID = 0,Array.isArray(e.host) ? t.host = e.host : t.host = [e.host],t.getSendBytes = function() { return t.sendbytes },t.getRecvBytes = function() { return t.recvbytes },t.getDuration = function() { return Math.ceil((Date.now() - t.startTime) / 1e3) },t.getURL = function() { return t.connection.url },t.reconnect = function() { t.isInit = !0,t.creatConnection(); },t.connectNext = function() { t.isInit = !0,++t.hostIndex,a.default.debug('[' + t.clientId + '] Gateway length:' + t.host.length + ' current index:' + t.hostIndex),t.hostIndex >= t.host.length ? t.dispatchEvent(l({ type:'recover' })) : t.creatConnection(); },t.replaceHost = function(e) { t.host = e || t.host,t.hostIndex = 0,t.creatConnection(); },t.creatConnection = function() { t.needReconnect = !0,a.default.debug('[' + t.clientId + '] start connect:' + t.host[t.hostIndex]),t.lts = (new Date).getTime(),t.connection = new WebSocket('wss://' + t.host[t.hostIndex]),t.connection.binaryType = 'arraybuffer',t.connection.onopen = function(e) { a.default.debug('[' + t.clientId + '] websockect opened: ' + t.host[t.hostIndex]),t.needReconnect = !0,t.isTimeout = !1,t.isInit = !1,t.sendbytes = 0,t.recvbytes = 0,t.startTime = Date.now(),Object(ye.d)(),clearTimeout(t.timeoutCheck),t.dispatchEvent(l({ type:'onopen',event:e,socket:t })); },t.connection.onmessage = function(e) { if (e.data instanceof ArrayBuffer)t.dispatchEvent({ type:'onBinaryData',data:e.data });else { t.recvbytes += Object(G.e)(e.data);const n = JSON.parse(e.data);t.lastMsgTime = Date.now(),n.hasOwnProperty('_id') ? t.dispatchEvent(l({ type:n._id,msg:n })) : n.hasOwnProperty('_type') && t.dispatchSocketEvent(l({ type:n._type,msg:n.message })); } },t.connection.onclose = function(n) { t.needReconnect ? t.isTimeout || t.isInit ? (a.default.debug('[' + t.clientId + '] websockect connect timeout'),r.b.joinGateway(e.sid,{ lts:t.lts,succ:!1,ec:'timeout',addr:t.connection.url }),t.connectNext()) : t.dispatchEvent(l({ type:'disconnect',event:n })) : (a.default.debug('[' + t.clientId + '] websockect closeed'),he(e.onFailure,n),clearTimeout(t.timeoutCheck),t.dispatchEvent(l({ type:'close',event:n })),t.connection.onopen = void 0,t.connection.onclose = void 0,t.connection.onerror = void 0,t.connection.onmessage = void 0,t.connection = void 0); },t.connection.onerror = function(e) {},setTimeout(function() { t.connection && t.connection.readyState != WebSocket.OPEN && (t.isTimeout = !0,t.connection.close()); },5e3); },t.creatConnection(),t.sendMessage = function(e,n) { if (t.connection && t.connection.readyState == WebSocket.OPEN) { const i = JSON.stringify(e);t.sendbytes += Object(G.e)(i),t.connection.send(i); } else n({ error:'Gateway not connected' }); },t.disconnect = function() { t.needReconnect = !0,t.connection.close(); },t.close = function() { t.needReconnect = !1,t.connection.onclose = void 0,t.connection.close(); },t.sendSignalCommand = function(e,n) { e._id = '_request_' + t.requestID,t.requestID += 1,e._type !== 'publish_stats' && e._type !== 'subscribe_stats' && e._type !== 'publish_stats_low' && t.on(e._id,function(i) { i.msg && n && n(i.msg._result,i.msg.message),delete t.dispatcher.eventListeners[e._id]; }),t.sendMessage(e,function(e) { e.reason = 'NOT_CONNECTED',n && n(e.reason,e); }); },t }; const be = function(e,t) { var n = { connect() { t.host = e,n.signal = _e(t),n.on = n.signal.on,n.dispatchEvent = n.signal.dispatchEvent,n.signal.on('onopen',function(e) { n.signal.onEvent = function(e) { n.dispatchEvent(l({ type:e.event,msg:e })); },n.dispatchEvent(l({ type:'connect',msg:e })); }),n.signal.on('onError',function(e) { const t = e.msg;onError(t.code,'error'); }); },getLastMsgTime() { return n.signal && n.signal.lastMsgTime },getSendBytes() { return n.signal.getSendBytes() },getRecvBytes() { return n.signal.getRecvBytes() },getDuration() { return n.signal.getDuration() },disconnect() { n.signal.disconnect(); },close() { n.signal.close(); },getURL() { return n.signal.getURL() },reconnect() { n.signal.reconnect(); },connectNext() { n.signal.connectNext(); },replaceHost(e) { n.signal.replaceHost(e); },emitSimpleMessage(e,t) { n.signal.sendSignalCommand(e,t); } };return n.connect(),n }; const Ee = n(10); const Te = n.n(Ee); const Ae = n(16); const Re = n.n(Ae); const Ce = function(e,t) { let n = !1; let i = 0; const s = { command:'convergeAllocateEdge',sid:e.sid,appId:e.appId,token:e.token,uid:e.uid,cname:e.cname,ts:Math.floor(Date.now() / 1e3),version:o.VERSION,seq:0,requestId:1 };Object(o.getParameter)('PROXY_CS').map(function(c) { const d = (new Date).getTime();Oe('https://' + c + '/api/v1',s,function(s,u) { if (s) return a.default.debug('[' + e.clientId + '] Request proxy server failed: ',s),i++,r.b.requestProxyAppCenter(e.sid,{ lts:d,succ:!1,APAddr:c,workerManagerList:null,ec:JSON.stringify(s),response:JSON.stringify({ err:s,res:u }) }),void (i >= Object(o.getParameter)('PROXY_CS').length && t && t('Get proxy server failed: request all failed'));if (!n) if ((u = JSON.parse(u)).json_body) { const l = JSON.parse(u.json_body);if (a.default.debug('[' + e.clientId + '] App return:',l.servers),l.code !== 200) { s = 'Get proxy server failed: response code [' + l.code + '], reason [ ' + l.reason + ']';a.default.debug('[' + e.clientId + '] ' + s),r.b.requestProxyAppCenter(e.sid,{ lts:d,succ:!1,APAddr:c,workerManagerList:null,ec:s,response:JSON.stringify({ err:s,res:u }) }); } else { n = !0;const p = Ne(l.servers);r.b.requestProxyAppCenter(e.sid,{ lts:d,succ:!0,APAddr:c,workerManagerList:JSON.stringify(p),ec:null,response:JSON.stringify({ res:u }) }),t && t(null,p); } } else a.default.debug('[' + e.clientId + '] Get proxy server failed: no json_body'),r.b.requestProxyAppCenter(e.sid,{ lts:d,succ:!1,APAddr:c,workerManagerList:null,ec:'Get proxy server failed: no json_body',response:JSON.stringify({ res:u }) }); }); }); }; var Oe = function(e,t,n) { const i = { service_name:'webrtc_proxy',json_body:JSON.stringify(t) };Object(ye.c)(e,i,function(e) { n && n(null,e); },function(e) { n && n(e); },{ 'X-Packet-Service-Type':0,'X-Packet-URI':61 }); }; const we = function(e,t,n) { let i = !1; let o = 0; const s = { command:'request',gatewayType:'http',appId:e.appId,cname:e.cname,uid:e.uid + '',sdkVersion:'2.3.1',sid:e.sid,seq:1,ts:+new Date,requestId:3,clientRequest:{ appId:e.appId,cname:e.cname,uid:e.uid + '',sid:e.sid } };t.map(function(c) { const d = (new Date).getTime();!function(e,t,n) { Object(ye.c)(e,t,function(e) { n && n(null,e); },function(e) { n && n(e); }); }('https://' + c + ':4000/v2/machine',s,function(s,u) { if (s) return a.default.debug('[' + e.clientId + '] Request worker manager failed: ',s),o++,r.b.requestProxyWorkerManager(e.sid,{ lts:d,succ:!1,workerManagerAddr:c,ec:JSON.stringify(s),response:JSON.stringify({ res:u }) }),void (o >= t.length && n && n('requeet worker manager server failed: request failed'));if (!i) { if (!(u = JSON.parse(u)).serverResponse) return n && n('requeet worker manager server failed: serverResponse is undefined');i = !0,r.b.requestProxyWorkerManager(e.sid,{ lts:d,succ:!0,workerManagerAddr:c,ec:JSON.stringify(s),response:JSON.stringify({ res:u }) }),n && n(null,{ address:c,serverResponse:u.serverResponse }); } }); }); }; var Ne = function(e) { if (!e || Array.isArray([]) == !1) return [];const t = [];return e.forEach(function(e) { let n;e.address && e.tcp ? (e.address.match(/^[\.\:\d]+$/) ? n = ''.concat(e.address.replace(/[^\d]/g,'-'),'.edge.agora.io') : (a.default.info('[' + joinInfo.clientId + '] ' + 'Cannot recognized as IP address '.concat(e.address,'. Used As Host instead')),n = ''.concat(e.address,':').concat(e.tcp)),t.push(n)) : a.default.error('[' + joinInfo.clientId + '] Invalid address format ',e); }),t }; const De = function(e,t) { const n = S()({},e); let i = Object(o.getParameter)('WEBCS_DOMAIN').concat(Object(o.getParameter)('WEBCS_DOMAIN_BACKUP_LIST')); const a = []; let r = !1;(i = i.map(function(e) { return n.proxyServer ? 'https://'.concat(n.proxyServer,'/ap/?url=').concat(e + '/api/v1') : 'https://'.concat(e,'/api/v1') })).map(function(e) { !function(e,t,n) { const i = { flag:64,cipher_method:0,timeout:1e3,features:t };Object(ye.c)(e,i,function(e) { try { const t = JSON.parse(e);n && n(null,t); } catch (e) { n && n(e); }n && n(null,e); },function(e) { n && n(e); },{ 'X-Packet-Service-Type':0,'X-Packet-URI':54 }); }(e,n,function(e,n) { r || (e ? (a.push(e),a.length >= i.length && t && t('ALL_REQUEST_FAILED')) : (r = !0,t && t(null,n))); }); }); }; const ke = {}; const Me = function(e,t,n,i) { const o = (new Date).getTime(); let s = '';t.multiIP && t.multiIP.gateway_ip && (s = { vocs_ip:[t.multiIP.uni_lbs_ip],vos_ip:[t.multiIP.gateway_ip] });const c = { flag:4,ts:+new Date,key:t.appId,cname:t.cname,sid:t.sid,detail:{},uid:t.uid || 0 };s && (c.detail[5] = JSON.stringify(s)),Object(ye.c)(e + ''.concat(!e.includes('?') ? '?' : '&','action=wrtc_gateway'),c,function(s) { try { var c = JSON.parse(s).res; var d = c.code; } catch (e) { const u = 'requestChooseServer failed with unexpected body ' + s;return a.default.error('[' + joinInfo.clientId + ']',u),i(u) } if (d) { var l = y[c.code] || d;return r.b.joinChooseServer(t.sid,{ lts:o,succ:!1,csAddr:e,serverList:null,ec:l }),i('Get server node failed [' + l + ']',e,l) } const p = []; const f = ['.agora.io','.agoraio.cn']; let m = 0;if (e.includes(f[1]) && (m = 1),c.addresses.forEach(function(e) { let t;e.ip && e.port ? (e.ip.match(/^[\.\:\d]+$/) ? t = 'webrtc-'.concat(e.ip.replace(/[^\d]/g,'-')).concat(f[m++ % f.length],':')
  .concat(e.port) : (a.default.info('[' + joinInfo.clientId + '] ' + 'Cannot recognized as IP address '.concat(e.ip,'. Used As Host instead')),t = ''.concat(e.ip,':').concat(e.port)),p.push(t)) : a.default.error('[' + joinInfo.clientId + '] Invalid address format ',e); }),!p.length) { a.default.error('[' + joinInfo.clientId + '] Empty Address response',c);l = 'EMPTY_ADDRESS_RESPONSE';return r.b.joinChooseServer(t.sid,{ lts:o,succ:!1,csAddr:e,serverList:null,ec:l }),i('Get server node failed [' + l + ']',e,l) } const g = { gateway_addr:p,uid:c.uid,cid:c.cid,uni_lbs_ip:c.detail };return n(g,e) },function(e,n) { e.type === 'timeout' ? (r.b.joinChooseServer(t.sid,{ lts:o,succ:!1,csAddr:n,serverList:null,ec:'timeout' }),i('Connect choose server timeout',n)) : r.b.joinChooseServer(t.sid,{ lts:o,succ:!1,csAddr:n,serverList:null,ec:'server_wrong' }); },{ 'X-Packet-Service-Type':0,'X-Packet-URI':44 }); }; const Le = function(e,t,n) { let i = !1; let s = null; let c = 1; let d = 1; let u = null; const l = e.clientId;ke[l] = !0;const p = function t(n,d) { if (!i) { let p = !1; let m = !1; let g = []; const v = f.getBrowserInfo() || {};De({ device:v.name,system:v.os,vendor:e.appId,version:o.VERSION,cname:e.cname,sid:e.sid,session_id:Object(r.a)(),detail:'',proxyServer:n },function(t,n) { m = !0;try { const i = Object.keys(n.test_tags)[0]; const o = JSON.parse(n.test_tags[i]);u = o[1]; } catch (e) { u = null; }r.b.reportApiInvoke(e.sid,{ name:'_config-distribute-request',options:{ err:t,res:n } })(),p && d && d(g,u); }),function(e,t,n) { for (var i = (new Date).getTime(),s = !1,c = !0,d = function(n,o) { if (s)r.b.joinChooseServer(e.sid,{ lts:i,succ:!0,csAddr:o,serverList:n.gateway_addr,cid:n.cid + '',uid:n.uid + '',ec:null },!1);else { if (clearTimeout(g),s = !0,a.default.debug('[' + e.clientId + '] Get gateway address:',n.gateway_addr),e.proxyServer) { for (let c = n.gateway_addr,d = 0;d < c.length;d++) { const u = c[d].split(':');n.gateway_addr[d] = e.proxyServer + '/ws/?h=' + u[0] + '&p=' + u[1]; }a.default.debug('[' + e.clientId + '] Get gateway address:',n.gateway_addr); }t(n),r.b.joinChooseServer(e.sid,{ lts:i,succ:!0,csAddr:o,serverList:n.gateway_addr,cid:n.cid + '',uid:n.uid + '',ec:null },!0); } },u = function(t,i,o) { c && (a.default.error('[' + e.clientId + ']',t,i,o),o && !E.includes(o) && (c = !1,n(o))); },l = Object(o.getParameter)('WEBCS_DOMAIN'),p = 0;p < l.length;++p) { var f;if (typeof l[p] === 'string') { const m = l[p];f = e.proxyServer ? 'https://'.concat(e.proxyServer,'/ap/?url=').concat(m + '/api/v1') : 'https://'.concat(m,'/api/v1'),a.default.debug('[' + e.clientId + '] ' + 'Connect to choose_server: '.concat(f)),Me(f,e,d,u); } else a.default.error('[' + e.clientId + '] Invalid Host',l[p]); } var g = setTimeout(function() { if (!s) for (let t = Object(o.getParameter)('WEBCS_DOMAIN_BACKUP_LIST'),n = 0;n < t.length;++n) if (typeof t[n] === 'string') { const i = t[n];f = e.proxyServer ? 'https://'.concat(e.proxyServer,'/ap/?url=').concat(i + '/api/v1') : 'https://'.concat(i,'/api/v1'),a.default.debug('[' + e.clientId + '] ' + 'Connect to backup_choose_server: '.concat(f)),Me(f,e,d,u); } else a.default.error('[' + e.clientId + '] Invalid Host',t[n]); },1e3);setTimeout(function() { !s && c && n(); },Object(o.getParameter)('WEBCS_BACKUP_CONNECT_TIMEOUT')); }(e,function(e) { i = !0,p = !0,g = e,clearTimeout(s),m && d && d(g,u); },function(i) { i ? a.default.info('[' + e.clientId + '] Join failed: ' + i) : ke[l] && (a.default.debug('[' + e.clientId + '] Request gateway list will be restart in ' + c + 's'),s = setTimeout(function() { t(n,d); },1e3 * c),c = c >= 3600 ? 3600 : 2 * c); }); } };e.useProxyServer ? function n() { !function(e,t) { Ce(e,function(n,i) { if (n) return t && t(n);a.default.debug('[' + e.clientId + '] getProxyServerList: ',i),we(e,i,t); }); }(e,function(i,o) { if (i) { if (a.default.debug('[' + e.clientId + ']',i),!ke[l]) return;return a.default.debug('[' + e.clientId + '] Request proxy will be restart in ' + d + 's'),s = setTimeout(function() { n(); },1e3 * d),void (d = d >= 3600 ? 3600 : 2 * d) }clearTimeout(s);const c = o.address;e.proxyServer = c,e.turnServer = { url:o.address,tcpport:o.serverResponse.tcpport || '3433',udpport:o.serverResponse.udpport || '3478',username:o.serverResponse.username || 'test',credential:o.serverResponse.password || '111111',forceturn:!0 },e.turnServer.tcpport += '',e.turnServer.udpport += '',r.b.setProxyServer(c),a.default.setProxyServer(c),p(c,t); }); }() : p(null,t); }; const Pe = function(e,t) { const n = Date.now(); const i = { sid:t.sid,opid:10,appid:t.appId,string_uid:t.stringUid };return new Promise(function(o,s) { Object(ye.c)(e + ''.concat(!e.includes('?') ? '?' : '&','action=stringuid'),i,function(c) { try { var d = JSON.parse(c); var u = d.code; } catch (o) { var l = 'requestUserAccount failed with unexpected body ' + c;return a.default.error('[' + t.clientId + ']',l),s({ retryable:!0,info:l,url:e }),void r.b.reqUserAccount(i.sid,{ lts:n,success:!1,serverAddress:e,stringUid:i.stringUid,uid:null,extend:c,errorCode:'BODY_NOT_JSON' }) } if (u) { var p = b[d.code % 1e4] || 'REQ_ACCOUNT_ERR_'.concat(u);return r.b.reqUserAccount(i.sid,{ lts:n,success:!1,serverAddress:e,stringUid:i.stringUid,uid:null,errorCode:p,extend:i }),s({ retryable:!1,info:l = 'Get String Uid Failed [' + p + ']',url:e,error:p }) } const f = d.uid;if (!(f > 0 && f < 2 ** 32)) { a.default.error('[' + t.clientId + '] ' + 'Invalid Uint Uid '.concat(t.stringUid,' => ').concat(f),d);p = 'INVALID_UINT_UID_'.concat(f);return r.b.reqUserAccount(i.sid,{ lts:n,success:!1,serverAddress:e,stringUid:i.stringUid,uid:null,errorCode:p,extend:i }),s({ retryable:!0,error:p,info:'Get String Uid failed [' + p + ']',url:e }) }o({ uid:f,url:e }),r.b.reqUserAccount(i.sid,{ lts:n,success:!0,serverAddress:e,stringUid:i.stringUid,uid:f,errorCode:null,extend:i }); },function(e,t) { if (e.type === 'timeout') { const o = 'USER_ACCOUNT_TIMEOUT';r.b.reqUserAccount(i.sid,{ lts:n,success:!1,serverAddress:t,stringUid:i.stringUid,uid:null,errorCode:o,extend:i }),s({ retryable:!0,info:o,url:t }); } else { const a = 'USER_ACCOUNT_SERVER_WRONG_'.concat(e.type);r.b.reqUserAccount(i.sid,{ lts:n,success:!1,serverAddress:t,stringUid:i.stringUid,uid:null,errorCode:a,extend:i }),s({ retryable:!0,info:a,url:t }); } },{ 'X-Packet-Service-Type':0,'X-Packet-URI':72 }); }) }; const xe = function(e) {let t; const n = Object(o.getParameter)('ACCOUNT_REGISTER'); let r = !1; let s = Object(o.getParameter)('ACCOUNT_REGISTER_RETRY_TIMEOUT'); let c = null; let d = null; const u = new Promise(function() { const u = Re()(Te.a.mark(function u(l,p) { let f,m,g;return Te.a.wrap(function(u) { for (;;) switch (u.prev = u.next) { case 0:c = l,d = p,t = 0;case 3:if (!(t < Object(o.getParameter)('ACCOUNT_REGISTER_RETRY_COUNT_MAX'))) { u.next = 33;break } if (!r) { u.next = 6;break } return u.abrupt('return');case 6:return f = n[t % n.length],m = e.proxyServer ? 'https://'.concat(e.proxyServer,'/ap/?url=').concat(n[i] + '/api/v1') : 'https://'.concat(f,'/api/v1'),u.prev = 8,u.delegateYield(Te.a.mark(function t() { let n;return Te.a.wrap(function(t) { for (;;) switch (t.prev = t.next) { case 0:return t.next = 2,Pe(m,e);case 2:if (n = t.sent,!r) { t.next = 5;break } return t.abrupt('return',{ v:void 0 });case 5:r = !0,setTimeout(function() { a.default.debug('Get UserAccount Successfully',n),c(n); },0);case 7:case 'end':return t.stop() } },t,this) })(),'t0',10);case 10:if (g = u.t0,q()(g) !== 'object') { u.next = 13;break } return u.abrupt('return',g.v);case 13:u.next = 30;break;case 15:if (u.prev = 15,u.t1 = u.catch(8),!r) { u.next = 19;break } return u.abrupt('return');case 19:if (!u.t1.retryable) { u.next = 27;break } return (s = Math.ceil(s * Object(o.getParameter)('ACCOUNT_REGISTER_RETRY_RATIO'))) > Object(o.getParameter)('ACCOUNT_REGISTER_RETRY_TIMEOUT_MAX') && (s = Object(o.getParameter)('ACCOUNT_REGISTER_RETRY_TIMEOUT_MAX')),a.default.error(''.concat(u.t1.info,' ').concat(u.t1.url,' Will Fetch User Account in ')
  .concat(s / 1e3,' seconds')),u.next = 25,new Promise(function(e) { setTimeout(e,s); });case 25:u.next = 30;break;case 27:a.default.error('Get UserAccount Error: '.concat(u.t1.info,' ').concat(u.t1.url),u.t1.error),r = !0,d(u.t1);case 30:t++,u.next = 3;break;case 33:case 'end':return u.stop() } },u,this,[[8,15]]) }));return function(e,t) { return u.apply(this,arguments) } }());return u.cancel = function() { r || (r = !0,d({ info:'Request Cancelled',retryable:!1 })); },u.isFinished = function() { return r },u }; const Ve = { ERR_NO_VOCS_AVAILABLE:'tryNext',ERR_NO_VOS_AVAILABLE:'tryNext',ERR_JOIN_CHANNEL_TIMEOUT:'tryNext',WARN_REPEAT_JOIN:'quit',ERR_JOIN_BY_MULTI_IP:'recover',WARN_LOOKUP_CHANNEL_TIMEOUT:'tryNext',WARN_OPEN_CHANNEL_TIMEOUT:'tryNext',ERR_VOM_SERVICE_UNAVAILABLE:'tryNext',ERR_TOO_MANY_USERS:'tryNext',ERR_MASTER_VOCS_UNAVAILABLE:'tryNext',ERR_INTERNAL_ERROR:'tryNext',notification_test_recover:'recover',notification_test_tryNext:'tryNext',notification_test_retry:'retry' }; const Ue = { googResidualEchoLikelihood:'A_rel',googResidualEchoLikelihoodRecentMax:'A_rem',googTypingNoiseState:'A_tns',totalSamplesDuration:'A_sd',googAdaptationChanges:'A_ac',googBandwidthLimitedResolution:'A_blr',googCpuLimitedResolution:'A_clr',googEncodeUsagePercent:'A_eup',googHasEnteredLowResolution:'A_helr',googActualEncBitrate:'A_aeb',googAvailableReceiveBandwidth:'A_arb',googAvailableSendBandwidth:'A_asb',googRetransmitBitrate:'A_rb',googTargetEncBitrate:'A_teb',googCaptureStartNtpTimeMs:'A_csnt',googPreemptiveExpandRate:'A_per',googPreferredJitterBufferMs:'A_pjbm',googSecondaryDecodedRate:'A_sder',googSecondaryDiscardedRate:'A_sdir',googSpeechExpandRate:'A_ser',googFrameHeightReceived:'A_fhr',googInterframeDelayMax:'A_ifdm',googMinPlayoutDelayMs:'A_mpdm',aecDivergentFilterFraction:'A_dff',codecImplementationName:'A_cin',googEchoCancellationReturnLoss:'A_ecl',googEchoCancellationReturnLossEnhancement:'A_ece' }; const Fe = {};for (const Be in Ue) { const je = Ue[Be];Ue[je] && console.error('Key Conflict: '.concat(Be)),Fe[je] = Be; } const We = function(e) { return Ue[e] || e }; const He = function e(t) { let n = !1; const i = function(e) { return { _type:'control',message:e } }; const c = function(e) { const t = {};return Object.keys(e).forEach(function(n) { t[We(n)] = e[n]; }),{ _type:'subscribe_related_stats',options:t } }; const m = function(e,t,n) { return { _type:'publish',options:e,sdp:t,p2pid:n } }; const g = function(e,t) { const n = {};return Object.keys(t).forEach(function(e) { n[We(e)] = t[e]; }),{ _type:'subscribe_stats',options:{ id:e,stats:n },sdp:null } }; const v = e.DISCONNECTED; const I = e.CONNECTING; const h = e.CONNECTED; const y = e.DISCONNECTING; let b = v; const E = s();Object.defineProperty(E,'state',{ set(t) { const n = b;b = t,n !== t && E.dispatchEvent({ type:'connection-state-change',prevState:e.connetionStateMap[n],curState:e.connetionStateMap[t] }); },get() { return b } }),E.socket = void 0,E.state = v,E.mode = t.mode,E.role = t.role,E.codec = t.codec,E.config = {},E.timers = {},E.timer_counter = {},E.localStreams = {},E.remoteStreams = {},E.attemps = 1,E.p2p_attemps = 1,E.audioLevel = {},E.activeSpeaker = void 0,E.reconnectMode = 'retry',E.rejoinAttempt = 0,E.hasChangeBGPAddress = !1,E.traffic_stats = {},E.clientId = t.clientId,E.pingpongCounter = 0,E.p2ps = new Map,E.liveStreams = new Map,E.injectLiveStreams = new Map,E.remoteStreamsInChannel = new Set,E.inChannelInfo = { joinAt:null,duration:0 };const R = he;E.p2pCounter = Object(G.g)(1e5),E.generateP2PId = function() { return ++E.p2pCounter },E.audioVolumeIndication = { enabled:!1,sortedAudioVolumes:[],smooth:3,interval:2e3 },E.remoteVideoStreamTypes = { REMOTE_VIDEO_STREAM_HIGH:0,REMOTE_VIDEO_STREAM_LOW:1,REMOTE_VIDEO_STREAM_MEDIUM:2 },E.streamFallbackTypes = { STREAM_FALLBACK_OPTION_DISABLED:0,STREAM_FALLBACK_OPTION_VIDEO_STREAM_LOW:1,STREAM_FALLBACK_OPTION_AUDIO_ONLY:2 },E.configPublisher = function(e) { E.config = e; },E.getGatewayInfo = function(e,t) { N({ _type:'gateway_info' },e,t); },E.setClientRole = function(e,t) { a.default.debug('['.concat(E.clientId,'] setClientRole to ').concat(e));const n = r.b.reportApiInvoke(E.joinInfo.sid,{ name:'_setClientRole',callback:t });N(function(e) { return { _type:'set_client_role',message:e } }(e),function() { E.role = e,E.dispatchEvent({ type:'client-role-changed',role:e }),n && n(null,{ role:e }); },function(t) { const i = t && t.code ? t.code : 0; let o = T[i];if (o === 'ERR_ALREADY_IN_USE') return n && n(null);o || (o = 'UNKNOW_ERROR_'.concat(i)),a.default.error('set Client role error to ' + e + ': ' + o),n && n(o); }); },E.join = function(e,n,i,s) { e.useProxyServer && (E.hasChangeBGPAddress = !0);const c = (new Date).getTime(); const d = e.uid;if (E.inChannelInfo.joinAt && (E.inChannelInfo.duration += c - E.inChannelInfo.joinAt),E.inChannelInfo.joinAt = c,E.state !== I) return a.default.error('['.concat(E.clientId,'] GatewayClient.join Failed: state '),E.state),s && s(A.INVALID_OPERATION),void r.b.joinGateway(e.sid,{ lts:c,succ:!1,ec:A.INVALID_OPERATION,addr:null });if (d != null && parseInt(d) !== d) return a.default.error('['.concat(E.clientId,'] Input uid is invalid')),E.state = v,s && s(A.INVALID_PARAMETER),void r.b.joinGateway(e.sid,{ lts:c,succ:!1,ec:A.INVALID_PARAMETER,addr:null });const u = Ge.register(E,{ uid:d,cname:e && e.cname });if (u) return E.state = v,s && s(u),void r.b.joinGateway(e.sid,{ lts:c,succ:!1,ec:u,addr:null });E.joinInfo = S()({},e),E.uid = d,E.key = n,E.pingpongCounter = 0,w(e,function(n) { let u,p,f;E.state = h,a.default.debug('['.concat(E.clientId,'] Connected to gateway server')),E.pingTimer = setInterval(function() { const e = Object(o.getParameter)('PING_PONG_TIME_OUT');if (++E.pingpongCounter >= e) { const t = Date.now();a.default.warning('PINGPONG Timeout. Last Socket Message: '.concat(t - E.socket.getLastMsgTime(),'ms')),E.socket && E.socket.getLastMsgTime() && t - E.socket.getLastMsgTime() > Object(o.getParameter)('WEBSOCKET_TIMEOUT_MIN') && (E.pingpongCounter = 0,E.socket.close(),E.socket.dispatchEvent(l({ type:'disconnect',event:{ msg:'PING_PONG_TIME_OUT' } }))); } const n = Date.now();N({ _type:'ping' },function() { E.pingpongCounter = 0;const e = Date.now() - n;N({ _type:'signal_stats',message:{ pingpongElapse:e } },function() {},function(e) {}); },function(e) {}); },3e3),N((u = { role:E.role },p = u.role,f = { appId:t.appId,key:E.key,channel:E.joinInfo.cname,uid:E.uid,version:o.VERSION,browser:navigator.userAgent,mode:E.mode,codec:E.codec,role:p,config:E.config,processId:Object(r.a)() },E.joinInfo.hasOwnProperty('stringUid') && (f.stringUid = E.joinInfo.stringUid),E.dispatchEvent({ type:'join-message-hook',joinMessage:f }),{ _type:'join1',message:f }),function(t) { if (r.b.joinGateway(e.sid,{ lts:c,succ:!0,ec:null,vid:t.vid,addr:E.socket.getURL() }),E.rejoinAttempt = 0,i && i(t.uid),E.dispatchEvent({ type:'join' }),E.leaveOnConnected) { a.default.info('['.concat(E.clientId,'] Calling Leave() once joined'));const n = E.leaveOnConnected;E.leaveOnConnected = null,E.leave(n.onSuccess,n.onFailure); } },function(t) { if (a.default.error('['.concat(E.clientId,'] User join failed [').concat(t,']')),Ve[t] && E.rejoinAttempt < 4) { if (E._doWithAction(Ve[t],i,s),E.leaveOnConnected) { a.default.error('['.concat(E.clientId,'] Calling Leave() once joined: Join Failed'));const n = E.leaveOnConnected;E.leaveOnConnected = null,n.onFailure(A.JOIN_CHANNEL_FAILED); } } else s && s(t);r.b.joinGateway(e.sid,{ lts:c,succ:!1,ec:t,addr:E.socket.getURL() }); }),clearInterval(E.timers.trafficStats),E.timers.trafficStats = setInterval(function() { N({ _type:'traffic_stats' },function(e) { E.traffic_stats = e;const t = E.joinInfo.stringUid; const n = E.localStreams[d] || E.localStreams[t];n && (n.traffic_stats = { access_delay:e.access_delay }),e.peer_delay && e.peer_delay.forEach(function(t) { const n = E.remoteStreams[t.peer_uid];n && (n.traffic_stats = { access_delay:e.access_delay,e2e_delay:t.e2e_delay,audio_delay:t.audio_delay,video_delay:t.video_delay }); }),E.dispatchEvent({ type:'after-getTrafficStats',trafficStats:e }); }); },3e3); },function(t) { a.default.error('['.concat(E.clientId,'] User join failed [').concat(t,']')),s && s(t),r.b.joinGateway(e.sid,{ lts:c,succ:!1,ec:t,addr:E.socket.getURL() }); }),clearInterval(E.timers.trafficStats),E.timers.trafficStats = setInterval(function() { N({ _type:'traffic_stats' },function(e) { E.traffic_stats = e;const t = E.joinInfo.stringUid; const n = E.localStreams[d] || E.localStreams[t];n && (n.traffic_stats = { access_delay:e.access_delay }),e.peer_delay && e.peer_delay.forEach(function(t) { const n = E.remoteStreams[t.peer_uid];n && (n.traffic_stats = { access_delay:e.access_delay,e2e_delay:t.e2e_delay,audio_delay:t.audio_delay,video_delay:t.video_delay }); }); }); },3e3),E.resetAudioVolumeIndication(); },E.leave = function(e,t) { switch (E.state) { case v:return a.default.debug('['.concat(E.clientId,'] Client Already in DISCONNECTED status')),void R(e);case y:return a.default.error('['.concat(E.clientId,'] Client Already in DISCONNECTING status')),void R(t,A.INVALID_OPERATION);case I:return E.leaveOnConnected ? (a.default.error('['.concat(E.clientId,'] Client.leave() already called')),void R(t,A.INVALID_OPERATION)) : (a.default.debug('['.concat(E.clientId,'] Client connecting. Waiting for Client Fully Connected(And leave)')),void (E.leaveOnConnected = { onSuccess:e,onFailure:t })) } const n = Ge.unregister(E);if (n)a.default.error('['.concat(E.clientId,'] '),n);else { for (var i in E.state = y,clearInterval(E.pingTimer),E.timers)E.timers.hasOwnProperty(i) && clearInterval(E.timers[i]);for (var i in E.inChannelInfo.joinAt && (E.inChannelInfo.duration += Date.now() - E.inChannelInfo.joinAt,E.inChannelInfo.joinAt = null),N({ _type:'leave' },function(t) { E.socket.close(),E.socket = void 0,a.default.info('['.concat(E.clientId,'] Leave channel success')),E.state = v,e && e(t); },function(e) { a.default.error('['.concat(E.clientId,'] Leave Channel Failed'),e),E.state = h,t && t(e); }),E.localStreams) if (E.localStreams.hasOwnProperty(i)) { const o = E.localStreams[i];delete E.localStreams[i],void 0 !== o.pc && (o.pc.close(),o.pc = void 0); }M(); } },E.publish = function(e,t,n,o) { const s = (new Date).getTime(); let c = !1;if (e.publishLTS = s,q()(e) !== 'object' || e === null) return a.default.error('['.concat(E.clientId,'] Invalid local stream')),o && o(A.INVALID_LOCAL_STREAM),void r.b.publish(E.joinInfo.sid,{ lts:s,succ:!1,audioName:e.hasAudio() && e.audioName,videoName:e.hasVideo() && e.videoName,screenName:e.hasScreen() && e.screenName,ec:A.INVALID_LOCAL_STREAM });if (e.stream === null && void 0 === e.url) return a.default.error('['.concat(E.clientId,'] Invalid local media stream')),o && o(A.INVALID_LOCAL_STREAM),void r.b.publish(E.joinInfo.sid,{ lts:s,succ:!1,audioName:e.hasAudio() && e.audioName,videoName:e.hasVideo() && e.videoName,screenName:e.hasScreen() && e.screenName,ec:A.INVALID_LOCAL_STREAM });if (E.state !== h) return a.default.error('['.concat(E.clientId,'] User is not in the session')),o && o(A.INVALID_OPERATION),void r.b.publish(E.joinInfo.sid,{ lts:s,succ:!1,audioName:e.hasAudio() && e.audioName,videoName:e.hasVideo() && e.videoName,screenName:e.hasScreen() && e.screenName,ec:A.INVALID_OPERATION });const d = e.getAttributes() || {};if (e.local && void 0 === E.localStreams[e.getId()] && (e.hasAudio() || e.hasVideo() || e.hasScreen())) { const l = E.generateP2PId();if (E.p2ps.set(l,e),e.p2pId = l,void 0 !== e.url)D(m({ state:'url',audio:e.hasAudio(),video:e.hasVideo(),attributes:e.getAttributes(),mode:E.mode },e.url),function(t,n) { t === 'success' ? (e.getUserId() !== n && e.setUserId(n),E.localStreams[n] = e,e.onClose = function() { E.unpublish(e); }) : a.default.error('['.concat(E.clientId,'] Publish local stream failed'),t); });else { E.localStreams[e.getId()] = e,e.connectionSpec = { callback(d) { a.default.debug('['.concat(E.clientId,'] SDP exchange in publish : send offer --  '),JSON.parse(d)),D(m({ state:'offer',id:e.getId(),audio:e.hasAudio(),video:e.hasVideo() || e.hasScreen(),attributes:e.getAttributes(),streamType:t.streamType,dtx:e.DTX,hq:e.highQuality,lq:e.lowQuality,stereo:e.stereo,speech:e.speech,mode:E.mode,codec:E.codec,p2pid:l,turnip:E.joinInfo.turnServer.url,turnport:Number(E.joinInfo.turnServer.udpport),turnusername:E.joinInfo.turnServer.username,turnpassword:E.joinInfo.turnServer.credential },d),function(p,f) { if (p === 'error') return a.default.error('['.concat(E.clientId,'] Publish local stream failed')),o && o(A.PUBLISH_STREAM_FAILED),void r.b.publish(E.joinInfo.sid,{ lts:s,succ:!1,audioName:e.hasAudio() && e.audioName,videoName:e.hasVideo() && e.videoName,screenName:e.hasScreen() && e.screenName,localSDP:d,ec:A.PUBLISH_STREAM_FAILED });e.pc.onsignalingmessage = function(n) { e.pc.onsignalingmessage = function() {},D(m({ state:'ok',id:e.getId(),audio:e.hasAudio(),video:e.hasVideo(),screen:e.hasScreen(),streamType:t.streamType,attributes:e.getAttributes(),mode:E.mode },n)),e.getUserId() !== f.id && e.setUserId(f.id),a.default.info('['.concat(E.clientId,'] Local stream published with uid'),f.id),e.onClose = function() { E.unpublish(e); },e._onAudioUnmute = function() { N(i({ action:'audio-out-on',streamId:e.getId() }),function() {},function() {}); },e._onVideoUnmute = function() { N(i({ action:'video-out-on',streamId:e.getId() }),function() {},function() {}); },e._onAudioMute = function() { N(i({ action:'audio-out-off',streamId:e.getId() }),function() {},function() {}); },e._onVideoMute = function() { N(i({ action:'video-out-off',streamId:e.getId() }),function() {},function() {}); },e.getId() === e.getUserId() && (e.isAudioOn() || e.hasAudio() && (a.default.debug('['.concat(E.clientId,'] local stream audio mute')),e._onAudioMute()),e.isVideoOn() || (e.hasVideo() || e.hasScreen()) && (a.default.debug('['.concat(E.clientId,'] local stream video mute')),e._onVideoMute())); },e.pc.oniceconnectionstatechange = function(t) { if (t === 'failed') { if (E.timers[e.getId()] != null && (clearInterval(E.timers[e.getId()]),clearInterval(E.timers[e.getId()] + '_RelatedStats')),a.default.error('['.concat(E.clientId,'] Publisher connection is lost -- streamId: ').concat(e.getId(),', p2pId: ')
  .concat(l)),E.p2ps.delete(l),a.default.debug('['.concat(E.clientId,'] publish p2p failed: '),E.p2ps),!c) return c = !0,r.b.publish(E.joinInfo.sid,{ lts:s,succ:!1,audioName:e.hasAudio() && e.audioName,videoName:e.hasVideo() && e.videoName,screenName:e.hasScreen() && e.screenName,ec:A.PEERCONNECTION_FAILED }),E.dispatchEvent(u({ type:'pubP2PLost',stream:e })),o && o(A.PEERCONNECTION_FAILED);E.dispatchEvent(u({ type:'pubP2PLost',stream:e })); } else if (t === 'connected' && (a.default.debug('['.concat(E.clientId,'] publish p2p connected: '),E.p2ps),!c)) return c = !0,r.b.publish(E.joinInfo.sid,{ lts:s,succ:!0,audioName:e.hasAudio() && e.audioName,videoName:e.hasVideo() && e.videoName,screenName:e.hasScreen() && e.screenName,ec:null }),n && n() },a.default.debug('['.concat(E.clientId,'] SDP exchange in publish : receive answer --  '),JSON.parse(p)),e.pc.processSignalingMessage(p); }); },audio:e.hasAudio(),video:e.hasVideo(),screen:e.hasScreen(),isSubscriber:!1,stunServerUrl:E.stunServerUrl,turnServer:E.joinInfo.turnServer,maxAudioBW:d.maxAudioBW,minVideoBW:d.minVideoBW,maxVideoBW:d.maxVideoBW,mode:E.mode,codec:E.codec,isVideoMute:e.userMuteVideo || e.peerMuteVideo,isAudioMute:e.userMuteAudio || e.peerMuteAudio,maxFrameRate:e.attributes.maxFrameRate,clientId:E.clientId },e.pc = W(e.connectionSpec),e.pc.addStream(e.stream),a.default.debug('['.concat(E.clientId,'] PeerConnection add stream :'),e.stream),e.pc.onnegotiationneeded = function(t) { D(m({ state:'negotiation',p2pid:l },t),function(t,n) { e.pc.processSignalingMessage(t); }); },E.timers[e.getId()] = setInterval(function() { let t = 0;e && e.pc && e.pc.getStats && e.pc.getStatsRate(function(n) { n.forEach(function(n) { if (n && n.id && !/_recv$/.test(n.id) && !/^time$/.test(n.id) && e.getUserId()) if (!n.id.includes('outbound_rtp') && !n.id.includes('OutboundRTP') || n.mediaType !== 'video' || (n.googFrameWidthSent = e.videoWidth + '',n.googFrameHeightSent = e.videoHeight + ''),e.getId() == e.getUserId()) { var i = 200 * t;t++,setTimeout(function() { let e,t;N((e = n,t = {},Object.keys(e).forEach(function(n) { t[We(n)] = e[n]; }),{ _type:'publish_stats',options:{ stats:t },sdp:null }),null,null); },i); } else { i = 200 * t;t++,setTimeout(function() { let e,t;N((e = n,t = {},Object.keys(e).forEach(function(n) { t[We(n)] = e[n]; }),{ _type:'publish_stats_low',options:{ stats:t },sdp:null }),null,null); },i); } }); }); },3e3);const p = function() { e && e.pc && e.pc.getVideoRelatedStats && e.pc.getVideoRelatedStats(function(t) { let n,i;e.getId() === e.getUserId() ? N((n = t,i = {},Object.keys(n).forEach(function(e) { i[We(e)] = n[e]; }),{ _type:'publish_related_stats',options:i }),null,null) : N(function(e) { const t = {};return Object.keys(e).forEach(function(n) { t[We(n)] = e[n]; }),{ _type:'publish_related_stats_low',options:t } }(t),null,null); }); };p(),E.timers[e.getId() + '_RelatedStats'] = setInterval(p,1e3); } } },E.unpublish = function(e,t,n,i) { return q()(e) !== 'object' || e === null ? (a.default.error('['.concat(E.clientId,'] Invalid local stream')),void R(i,A.INVALID_LOCAL_STREAM)) : E.state !== h ? (a.default.error('['.concat(E.clientId,'] User not in the session')),void R(i,A.INVALID_OPERATION)) : (E.timers[e.getId()] != null && (clearInterval(E.timers[e.getId()]),clearInterval(E.timers[e.getId() + '_RelatedStats'])),void (void 0 !== E.socket ? e.local && void 0 !== E.localStreams[e.getId()] ? (delete E.localStreams[e.getId()],N((o = e.getUserId(),r = t.streamType,{ _type:'unpublish',message:o,streamType:r })),(e.hasAudio() || e.hasVideo() || e.hasScreen()) && void 0 === e.url && void 0 !== e.pc && (e.pc.close(),e.pc = void 0),e.onClose = void 0,e._onAudioMute = void 0,e._onAudioUnute = void 0,e._onVideoMute = void 0,e._onVideoUnmute = void 0,E.p2ps.delete(e.p2pId),n && n()) : (a.default.error('['.concat(E.clientId,'] Invalid local stream')),R(i,A.INVALID_LOCAL_STREAM)) : (a.default.error('['.concat(E.clientId,'] User not in the session')),R(i,A.INVALID_OPERATION))));let o,r; },E.subscribe = function(e,t,n) { const s = (new Date).getTime();e.subscribeLTS = s;let l = !1;if (a.default.info('['.concat(E.clientId,'] Gatewayclient ').concat(E.uid,' Subscribe ')
  .concat(e.getId(),': ')
  .concat(JSON.stringify(e.subscribeOptions))),q()(e) !== 'object' || e === null) return a.default.error('['.concat(E.clientId,'] Invalid remote stream')),n && n(A.INVALID_REMOTE_STREAM),void r.b.subscribe(E.joinInfo.sid,{ lts:s,succ:!1,video:e.subscribeOptions && e.subscribeOptions.video,audio:e.subscribeOptions && e.subscribeOptions.audio,peerid:e.getId(),ec:A.INVALID_REMOTE_STREAM });if (E.state !== h && (a.default.error('['.concat(E.clientId,'] User is not in the session')),!l)) return l = !0,r.b.subscribe(E.joinInfo.sid,{ lts:s,succ:!1,video:e.subscribeOptions && e.subscribeOptions.video,audio:e.subscribeOptions && e.subscribeOptions.audio,peerid:e.getId(),ec:A.INVALID_OPERATION }),n && n(A.INVALID_OPERATION);if (!e.local && E.remoteStreams.hasOwnProperty(e.getId())) if (e.hasAudio() || e.hasVideo() || e.hasScreen()) { const p = E.generateP2PId();E.p2ps.set(p,e),e.p2pId = p,e.pc = W({ callback(t) { a.default.debug('['.concat(E.clientId,'] SDP exchange in subscribe : send offer --  '),JSON.parse(t));let i; const c = S()({ streamId:e.getId(),video:!0,audio:!0,mode:E.mode,codec:E.codec,p2pid:p,turnip:E.joinInfo.turnServer.url,turnport:Number(E.joinInfo.turnServer.udpport),turnusername:E.joinInfo.turnServer.username,turnpassword:E.joinInfo.turnServer.credential,tcc:Object(o.getParameter)('SUBSCRIBE_TCC') },e.subscribeOptions);D({ _type:'subscribe',options:c,sdp:t,p2pid:i },function(t) { if (t === 'error') return a.default.error('['.concat(E.clientId,'] Subscribe remote stream failed, closing stream '),e.getId()),e.close(),n && n(A.SUBSCRIBE_STREAM_FAILED),void r.b.subscribe(E.joinInfo.sid,{ lts:s,succ:!1,video:e.subscribeOptions && e.subscribeOptions.video,audio:e.subscribeOptions && e.subscribeOptions.audio,peerid:e.getId(),ec:A.SUBSCRIBE_STREAM_FAILED });a.default.debug('['.concat(E.clientId,'] SDP exchange in subscribe : receive answer --  '),JSON.parse(t)),e.pc.processSignalingMessage(t); }); },nop2p:!0,audio:!0,video:!0,screen:e.hasScreen(),isSubscriber:!0,stunServerUrl:E.stunServerUrl,turnServer:E.joinInfo.turnServer,isVideoMute:e.userMuteVideo,isAudioMute:e.userMuteAudio,uid:e.getId(),clientId:E.clientId }),e.pc.onaddstream = function(t,n) { if (e._onAudioUnmute = function() { N(i({ action:'audio-in-on',streamId:e.getId() }),function() {},function() {}); },e._onAudioMute = function() { N(i({ action:'audio-in-off',streamId:e.getId() }),function() {},function() {}); },e._onVideoUnmute = function() { N(i({ action:'video-in-on',streamId:e.getId() }),function() {},function() {}); },e._onVideoMute = function() { N(i({ action:'video-in-off',streamId:e.getId() }),function() {},function() {}); },n === 'ontrack' && t.track.kind === 'video' || n === 'onaddstream') { a.default.info('['.concat(E.clientId,'] Remote stream subscribed with uid '),e.getId());const o = E.remoteStreams[e.getId()];if (E.remoteStreams[e.getId()].stream = n === 'onaddstream' ? t.stream : t.streams[0],E.remoteStreams[e.getId()].hasVideo()) { if (Object(f.isFireFox)() || Object(f.isSafari)()) { const r = E.remoteStreams[e.getId()].stream;Object(G.h)(r,function(t,n) { e.videoWidth = t,e.videoHeight = n; },function(e) { return a.default.warning('['.concat(E.clientId,'] vsResHack failed: ') + e) }); } } else { const s = E.remoteStreams[e.getId()];s.peerMuteVideo = !0,E._adjustPCMuteStatus(s); }o && o.isPlaying() && o.elementID && (a.default.debug('['.concat(E.clientId,'] Reload Player ').concat(o.elementID,' StreamId ')
  .concat(o.getId())),e.audioOutput = o.audioOutput,o.stop(),e.play(o.elementID,o.playOptions)),delete e.audioLevelHelper;const c = d({ type:'stream-subscribed',stream:E.remoteStreams[e.getId()] });E.dispatchEvent(c); } },E.timers[e.getId()] = setInterval(function() { let t = 0;e && e.pc && e.pc.getStats && e.pc.getStatsRate(function(n) { n.forEach(function(n) { if (n && n.id) { if (/_send$/.test(n.id) || /^time$/.test(n.id) || /^bweforvideo$/.test(n.id)) return;!n.id.includes('inbound_rtp') && !n.id.includes('inbound-rtp') || n.mediaType !== 'video' || (n.googFrameWidthReceived = e.videoWidth + '',n.googFrameHeightReceived = e.videoHeight + '');const i = 200 * t;t++;const o = e.getId();setTimeout(function() { D(g(o,n),null); },i); } }); }); },3e3),E.timers[e.getId() + '_RelatedStats'] = setInterval(function() { e && e.pc && (e.pc.getVideoRelatedStats && e.pc.getVideoRelatedStats(function(e) { N(c(e),null,null); }),e.pc.getAudioRelatedStats && e.pc.getAudioRelatedStats(function(e) { N(c(e),null,null); })); },1e3),E.audioLevel[e.getId()] = 0,E.timers[e.getId() + 'audio'] = setInterval(function() { E.hasListeners('active-speaker') && e && e.pc && e.pc.state === 'established' && e.pc.getStats && e.pc.getStats(function(t) { t.forEach(function(t) { if (t.mediaType === 'audio') { if (t.audioOutputLevel > 5e3) for (const n in E.audioLevel[e.getId()] < 20 && (E.audioLevel[e.getId()] += 1),E.audioLevel)n !== '' + e.getId() && E.audioLevel[n] > 0 && (E.audioLevel[n] -= 1);const i = Object.keys(E.audioLevel).sort(function(e,t) { return E.audioLevel[t] - E.audioLevel[e] });if (E.activeSpeaker !== i[0]) { const o = u({ type:'active-speaker',uid:i[0] });E.dispatchEvent(o),E.activeSpeaker = i[0],a.default.debug('['.concat(E.clientId,'] Update active speaker: ').concat(E.activeSpeaker)); } } }); },50); },50),e.pc.oniceconnectionstatechange = function(i) { if (i === 'failed')E.timers[e.getId()] != null && (clearInterval(E.timers[e.getId()]),clearInterval(E.timers[e.getId()] + 'audio')),a.default.error('['.concat(E.clientId,'] Subscriber connection is lost -- streamId: ').concat(e.getId(),', p2pId: ')
  .concat(p)),a.default.debug('['.concat(E.clientId,'] subscribe p2p failed: '),E.p2ps),l || (l = !0,n && n(A.PEERCONNECTION_FAILED),r.b.subscribe(E.joinInfo.sid,{ lts:s,succ:!1,video:e.subscribeOptions && e.subscribeOptions.video,audio:e.subscribeOptions && e.subscribeOptions.audio,peerid:e.getId(),ec:A.PEERCONNECTION_FAILED })),E.remoteStreams[e.getId()] && E.p2ps.has(p) && (E.p2ps.delete(p),E.dispatchEvent(u({ type:'subP2PLost',stream:e })));else if (i === 'connected' && (a.default.debug('['.concat(E.clientId,'] subscribe p2p connected: '),E.p2ps),!l)) { l = !0,r.b.subscribe(E.joinInfo.sid,{ lts:s,succ:!0,video:e.subscribeOptions && e.subscribeOptions.video,audio:e.subscribeOptions && e.subscribeOptions.audio,peerid:e.getId(),ec:null }),E._adjustPCMuteStatus(e);let o = !1; var c = setInterval(function() { e.pc ? e.pc.getStats(function(t) { t.forEach(function(t) { t.id.includes('recv') && t.mediaType === 'audio' && parseInt(t.googDecodingNormal) > 0 && (o || (o = !0,E.dispatchEvent({ type:'first-audio-frame-decode',stream:e }),clearInterval(c),r.b.reportApiInvoke(E.joinInfo.sid,{ name:'firstAudioDecode' })(null,{ elapse:Date.now() - e.subscribeLTS }))); }); },100) : clearInterval(c); },100); let d = !1; var f = setInterval(function() { e.pc ? e.pc.getStats(function(t) { t.forEach(function(t) { !t.id.includes('recv') && !t.id.includes('inbound_rtp') && !t.id.includes('inbound-rtp') && !t.id.includes('InboundRTP') || t.mediaType === 'video' && (t.framesDecoded > 0 || t.googFramesDecoded > 0) && (d || (d = !0,E.dispatchEvent({ type:'first-video-frame-decode',stream:e }),clearInterval(f),e.firstFrameTime = (new Date).getTime() - e.subscribeLTS,r.b.firstRemoteFrame(E.joinInfo.sid,{ lts:(new Date).getTime(),peerid:e.getId(),succ:!0,width:+t.googFrameWidthReceived,height:+t.googFrameHeightReceived }))); }); },100) : clearInterval(f); },100);return e.sid = E.joinInfo.sid,t && t() } }; } else a.default.error('['.concat(E.clientId,'] Invalid remote stream')),l || (l = !0,n && n(A.INVALID_REMOTE_STREAM),r.b.subscribe(E.joinInfo.sid,{ lts:s,succ:!1,video:e.subscribeOptions && e.subscribeOptions.video,audio:e.subscribeOptions && e.subscribeOptions.audio,peerid:e.getId(),ec:A.INVALID_REMOTE_STREAM }));else a.default.error('['.concat(E.clientId,'] No such remote stream')),l || (l = !0,n && n(A.NO_SUCH_REMOTE_STREAM),r.b.subscribe(E.joinInfo.sid,{ lts:s,succ:!1,video:e.subscribeOptions && e.subscribeOptions.video,audio:e.subscribeOptions && e.subscribeOptions.audio,peerid:e.getId(),ec:A.NO_SUCH_REMOTE_STREAM })); },E.subscribeChange = function(e,t,n) { let i; let o; const s = Date.now();a.default.info('['.concat(E.clientId,'] Gatewayclient ').concat(E.uid,' SubscribeChange ')
  .concat(e.getId(),': ')
  .concat(JSON.stringify(e.subscribeOptions))),E._adjustPCMuteStatus(e),N((i = e.getId(),o = e.subscribeOptions,{ _type:'subscribe_change',options:S()({ streamId:i },o) }),function(i) { if (i === 'error') return a.default.error('['.concat(E.clientId,'] Subscribe Change Failed ').concat(e.getId())),void R(n,'SUBSCRIBE_CHANGE_FAILED');const o = d({ type:'stream-subscribe-changed',stream:E.remoteStreams[e.getId()] });r.b.subscribe(E.joinInfo.sid,{ lts:s,succ:!0,video:e.subscribeOptions && e.subscribeOptions.video,audio:e.subscribeOptions && e.subscribeOptions.audio,peerid:e.getId(),ec:null }),E.dispatchEvent(o),t && t(); },n); },E._adjustPCMuteStatus = function(e) { !e.local && e.pc && e.pc.peerConnection.getReceivers && e.pc.peerConnection.getReceivers().forEach(function(t) { if (t && t.track && t.track.kind === 'audio') { let n = !e.userMuteAudio && !e.peerMuteAudio;e.subscribeOptions && !e.subscribeOptions.audio && (n = !1),t.track.enabled = !!n; } else if (t && t.track && t.track.kind === 'video') { let i = !e.userMuteVideo && !e.peerMuteVideo;e.subscribeOptions && !e.subscribeOptions.video && (i = !1),t.track.enabled = !!i; } }); },E.unsubscribe = function(e,t,n) { if (q()(e) !== 'object' || e === null) return a.default.error('['.concat(E.clientId,'] Invalid remote stream')),void R(n,A.INVALID_REMOTE_STREAM);if (E.state !== h) return a.default.error('['.concat(E.clientId,'] User is not in the session')),void R(n,A.INVALID_OPERATION);if (E.timers[e.getId()] != null && (clearInterval(E.timers[e.getId()]),clearInterval(E.timers[e.getId()] + 'audio')),E.audioLevel[e.getId()] != null && delete E.audioLevel[e.getId()],E.timer_counter[e.getId()] != null && delete E.timer_counter[e.getId()],E.remoteStreams.hasOwnProperty(e.getId())) { if (!E.socket) return a.default.error('['.concat(E.clientId,'] User is not in the session')),void R(n,A.INVALID_OPERATION);if (e.local) return a.default.error('['.concat(E.clientId,'] Invalid remote stream')),void R(n,A.INVALID_REMOTE_STREAM);e.close(),N({ _type:'unsubscribe',message:e.getId() },function(i) { if (i === 'error') return a.default.error('['.concat(E.clientId,'] Unsubscribe remote stream failed ').concat(e.getId())),void R(n,A.UNSUBSCRIBE_STREAM_FAILED);void 0 !== e.pc && (e.pc.close(),e.pc = void 0),e.onClose = void 0,e._onAudioMute = void 0,e._onAudioUnute = void 0,e._onVideoMute = void 0,e._onVideoUnmute = void 0,delete e.subscribeOptions,E.p2ps.delete(e.p2pId),a.default.info('['.concat(E.clientId,'] Unsubscribe stream success')),t && t(); },n); } else R(n,A.NO_SUCH_REMOTE_STREAM); },E.setRemoteVideoStreamType = function(e,t) { if (a.default.debug('['.concat(E.clientId,'] Switching remote video stream ').concat(e.getId(),' to ')
  .concat(t)),q()(e) === 'object' && e !== null) if (E.state === h) { if (!e.local) { switch (t) { case E.remoteVideoStreamTypes.REMOTE_VIDEO_STREAM_HIGH:case E.remoteVideoStreamTypes.REMOTE_VIDEO_STREAM_LOW:case E.remoteVideoStreamTypes.REMOTE_VIDEO_STREAM_MEDIUM:break;default:return }N(function(e,t) { return { _type:'switchVideoStream',message:{ id:e,type:t } } }(e.getId(),t),null,null); } } else a.default.error('['.concat(E.clientId,'] User is not in the session'));else a.default.error('['.concat(E.clientId,'] Invalid remote stream')); },E.renewToken = function(e,t,n) { e ? E.key ? E.state !== h ? (a.default.debug('['.concat(E.clientId,'] Client is not connected. Trying to rejoin')),E.key = e,E.rejoin(),t && t()) : (a.default.debug('['.concat(E.clientId,'] renewToken from ').concat(E.key,' to ')
  .concat(e)),N(function(e) { return { _type:'renew_token',message:{ token:e } } }(e),t,n)) : (a.default.error('['.concat(E.clientId,'] Client is previously joined without token')),n && n(A.INVALID_PARAMETER)) : (a.default.error('['.concat(E.clientId,'] Invalid Token ').concat(e)),n && n(A.INVALID_PARAMETER)); },E.setStreamFallbackOption = function(e,t) { if (a.default.debug('['.concat(E.clientId,'] Set stream fallback option ').concat(e.getId(),' to ')
  .concat(t)),q()(e) === 'object' && e !== null) if (E.state === h) { if (!e.local) { switch (t) { case E.streamFallbackTypes.STREAM_FALLBACK_OPTION_DISABLED:case E.streamFallbackTypes.STREAM_FALLBACK_OPTION_VIDEO_STREAM_LOW:case E.streamFallbackTypes.STREAM_FALLBACK_OPTION_AUDIO_ONLY:break;default:return }N(function(e,t) { return { _type:'setFallbackOption',message:{ id:e,type:t } } }(e.getId(),t),null,null); } } else a.default.error('['.concat(E.clientId,'] User is not in the session'));else a.default.error('['.concat(E.clientId,'] Invalid remote stream')); },E.startLiveStreaming = function(e,t) { E.liveStreams.set(e,t),a.default.debug('['.concat(E.clientId,'] Start live streaming ').concat(e,' ')
  .concat(t,' ')
  .concat(t)),E.state === h ? N(function(e,t) { return { _type:'start_live_streaming',message:{ url:e,transcodingEnabled:t } } }(e,t),null,null) : a.default.error('['.concat(E.clientId,'] User is not in the session')); },E.stopLiveStreaming = function(e) { a.default.debug('['.concat(E.clientId,'] Stop live streaming ').concat(e)),E.state === h ? (E.liveStreams.delete(e),N(function(e) { return { _type:'stop_live_streaming',message:{ url:e } } }(e),null,null)) : a.default.error('['.concat(E.clientId,'] User is not in the session')); },E.setLiveTranscoding = function(e) { Object(G.d)(e) && (E.transcoding = e,a.default.debug('['.concat(E.clientId,'] Set live transcoding '),e),E.state === h ? N(function(e) { return { _type:'set_live_transcoding',message:{ transcoding:e } } }(e),null,null) : a.default.error('['.concat(E.clientId,'] User is not in the session'))); },E.addInjectStreamUrl = function(e,t) { E.injectLiveStreams.set(e,t),a.default.debug('['.concat(E.clientId,'] Add inject stream url ').concat(e,' config '),t),E.state === h ? N(function(e,t) { return { _type:'add_inject_stream_url',message:{ url:e,config:t } } }(e,t),null,null) : a.default.error('['.concat(E.clientId,'] User is not in the session')); },E.removeInjectStreamUrl = function(e) { a.default.debug('['.concat(E.clientId,'] Remove inject stream url ').concat(e)),E.state === h ? (E.injectLiveStreams.delete(e),N(function(e) { return { _type:'remove_inject_stream_url',message:{ url:e } } }(e),null,null)) : a.default.error('['.concat(E.clientId,'] User is not in the session')); },E.enableAudioVolumeIndicator = function(e,t) { E.audioVolumeIndication.enabled = !0,E.audioVolumeIndication.interval = e,E.audioVolumeIndication.smooth = t,E.resetAudioVolumeIndication(); },E.resetAudioVolumeIndication = function() { if (clearInterval(E.timers.audioVolumeIndication),clearInterval(E.timers.audioVolumeSampling),E.audioVolumeIndication.enabled && E.audioVolumeIndication.interval) { const e = Math.floor(1e3 * E.audioVolumeIndication.smooth / 100);E.timers.audioVolumeSampling = setInterval(function() { E.audioVolumeSampling || (E.audioVolumeSampling = {});const t = {};for (const n in E.remoteStreams) { const i = E.remoteStreams[n];if (i.stream && i.hasAudio()) { let o = i.getAudioLevel();o > 0 && o < 1 && (o *= 100);const a = E.audioVolumeSampling[n] || [];for (a.push(o);a.length > e;)a.shift();t[n] = a; } }E.audioVolumeSampling = t; },100),E.timers.audioVolumeIndication = setInterval(function() { const e = [];for (const t in E.remoteStreams) if (E.audioVolumeSampling && E.audioVolumeSampling[t]) { const n = E.audioVolumeSampling[t]; var i = 0;n.forEach(function(e) { i += e; });const o = { uid:t,level:Math.floor(i / n.length) };o.level && e.push(o); } const r = e.sort(function(e,t) { return e.level - t.level });a.default.debug('['.concat(E.clientId,'] volume-indicator '),JSON.stringify(r)),E.audioVolumeIndication.sortedAudioVolumes = r;const s = u({ type:'volume-indicator',attr:r });E.dispatchEvent(s); },E.audioVolumeIndication.interval); } },E.closeGateway = function() { a.default.debug('['.concat(E.clientId,'] close gateway')),E.state = v,E.socket.close(),C(); };var C = function() { for (var e in E.dispatchEvent({ type:'before-clear-connection' }),E.timers)E.timers.hasOwnProperty(e) && clearInterval(E.timers[e]);for (var e in E.remoteStreams) if (E.remoteStreams.hasOwnProperty(e)) { const t = E.remoteStreams[e]; const n = u({ type:'stream-removed',uid:t.getId(),stream:t });E.dispatchEvent(n); }E.p2ps.clear(),M(),k(),clearInterval(E.pingTimer); };E.rejoin = function() { E.socket && (clearInterval(E.pingTimer),E.socket.close(),E.socket = void 0),E.state = I,O(); };var O = function(e,t) { E.dispatchEvent(u({ type:'rejoin-start' })),e = e || function(e) { a.default.info('['.concat(E.clientId,'] User ').concat(e,' is re-joined to ')
  .concat(E.joinInfo.cname)),E.dispatchEvent(u({ type:'rejoin' })),E.liveStreams && E.liveStreams.size && E.liveStreams.forEach(function(e,t) { e && E.setLiveTranscoding(E.transcoding),E.startLiveStreaming(t,e); }),E.injectLiveStreams && E.injectLiveStreams.size && E.injectLiveStreams.forEach(function(e,t) { E.addInjectStreamUrl(t,e); }); },t = t || function(e) { a.default.error('['.concat(E.clientId,'] Re-join to channel failed '),e),E.dispatchEvent(d({ type:'error',reason:e })); },E.key ? (++E.rejoinAttempt,E.join(E.joinInfo,E.key,e,t)) : a.default.error('['.concat(E.clientId,'] Connection recover failed [Invalid channel key]')); }; var w = function(e,t,i) { let o;E.onConnect = t,E.socket ? (E.dispatchEvent({ type:'reconnect' }),E.reconnectMode === 'retry' ? (a.default.debug('['.concat(E.clientId,'] Retry current gateway')),E.socket.reconnect()) : E.reconnectMode === 'tryNext' ? (a.default.debug('['.concat(E.clientId,'] Try next gateway')),E.socket.connectNext()) : E.reconnectMode === 'recover' && (a.default.debug('['.concat(E.clientId,'] Recover gateway')),a.default.debug('['.concat(E.clientId,'] Try to reconnect choose server and get gateway list again ')),Le(E.joinInfo,function(e) { E.socket.replaceHost(e.gateway_addr); }))) : (o = e.gatewayAddr,E.socket = be(o,{ sid:E.joinInfo.sid,clientId:E.clientId }),E.socket.on('onUplinkStats',function(e) { E.OutgoingAvailableBandwidth = e.uplink_available_bandwidth,E.localStreams[E.uid] && (E.localStreams[E.uid].uplinkStats = e); }),E.socket.on('connect',function() { E.dispatchEvent({ type:'connected' }),E.attemps = 1,N(function(e) { let t = e;return e.uni_lbs_ip && (t = S()(e,{ wanip:e.uni_lbs_ip,hasChange:E.hasChangeBGPAddress })),{ _type:'token',message:t } }(e),E.onConnect,i); }),E.socket.on('recover',function() { E.state = I,a.default.debug('['.concat(E.clientId,'] Try to reconnect choose server and get gateway list again ')),Le(E.joinInfo,function(e) { E.socket.replaceHost(e.gateway_addr); }); }),E.socket.on('disconnect',function(e) { if (E.state !== v) { E.state = v;const t = d({ type:'error',reason:A.SOCKET_DISCONNECTED });if (E.dispatchEvent(t),E.p2ps.size === 0 ? E.reconnectMode = 'tryNext' : E.reconnectMode = 'retry',C(),n != 1) { let i; const o = (i = E.attemps,1e3 * Math.min(30,2 ** i - 1));a.default.error('['.concat(E.clientId,'] Disconnect from server [').concat(JSON.stringify(e),'], attempt to recover [#')
  .concat(E.attemps,'] after ')
  .concat(o / 1e3,' seconds'));setTimeout(function() { E.attemps++,E.state = I,O(); },o); } } }),E.socket.on('onAddAudioStream',function(e) { if (a.default.info('['.concat(E.clientId,'] Newly added audio stream with uid ').concat(e.id)),E.joinInfo.stringUid && typeof e.id !== 'string' && a.default.error('StringUID is Mixed with UintUID'),E.remoteStreamsInChannel.has(e.id) || E.remoteStreamsInChannel.add(e.id),void 0 === E.remoteStreams[e.id]) { const t = pe({ streamID:e.id,local:!1,audio:e.audio,video:e.video,screen:e.screen,attributes:e.attributes });t.peerMuteVideo = !0,E.remoteStreams[e.id] = t;const n = d({ type:'stream-added',stream:t });E.dispatchEvent(n); } }),E.socket.on('onUpdateStream',function(e) { const t = E.remoteStreams[e.id];if (E.joinInfo.stringUid && typeof e.id !== 'string' && a.default.error('StringUID is Mixed with UintUID'),t) { delete e.id,t.audio = e.audio,t.video = e.video,t.screen = e.screen,t.pc && E._adjustPCMuteStatus(t);const n = d({ type:'stream-updated',stream:t });E.dispatchEvent(n); } else a.default.debug('['.concat(E.clientId,'] Ignoring onUpdateStream event before onAddStream for uid ').concat(e.id)); }),E.socket.on('onAddVideoStream',function(e) { if (a.default.info('['.concat(E.clientId,'] Newly added remote stream with uid ').concat(e.id,'.')),E.joinInfo.stringUid && typeof e.id !== 'string' && a.default.error('StringUID is Mixed with UintUID'),E.remoteStreamsInChannel.has(e.id) || E.remoteStreamsInChannel.add(e.id),void 0 === E.remoteStreams[e.id]) { var t = pe({ streamID:e.id,local:!1,audio:e.audio,video:e.video,screen:e.screen,attributes:e.attributes });E.remoteStreams[e.id] = t;const n = d({ type:'stream-added',stream:t });E.dispatchEvent(n); } else { const i = E.remoteStreams[e.id];if (i.peerMuteVideo = !1,i.video = !0,void 0 !== i.stream) { if ((t = E.remoteStreams[e.id]).pc && E._adjustPCMuteStatus(t),a.default.info('['.concat(E.clientId,'] Stream changed: enable video ').concat(e.id)),t.isPlaying()) { const o = t.player.elementID;t.stop(),t.play(o,t.playOptions); } } else if (i.p2pId)E.remoteStreams[e.id].video = !0;else { t = pe({ streamID:e.id,local:!1,audio:!0,video:!0,screen:!1,attributes:e.attributes });E.remoteStreams[e.id] = t,a.default.info('['.concat(E.clientId,'] Stream changed: modify video ').concat(e.id)); } } }),E.socket.on('onRemoveStream',function(e) { E.remoteStreamsInChannel.has(e.id) && E.remoteStreamsInChannel.delete(e.id);const t = E.remoteStreams[e.id];if (t) { delete E.remoteStreams[e.id];const n = d({ type:'stream-removed',stream:t });E.dispatchEvent(n),t.close(),void 0 !== t.pc && (t.pc.close(),t.pc = void 0,E.p2ps.delete(t.p2pId)); } else console.log('ERROR stream ',e.id,' not found onRemoveStream ',e); }),E.socket.on('onPublishStream',function(e) { const t = E.localStreams[e.id]; const n = d({ type:'streamPublished',stream:t });E.dispatchEvent(n); }),E.socket.on('mute_audio',function(e) { a.default.info('['.concat(E.clientId,'] rcv peer mute audio: ').concat(e.peerid));const t = u({ type:'mute-audio',uid:e.peerid }); const n = E.remoteStreams[e.peerid];n ? (n.peerMuteAudio = !0,n.pc && E._adjustPCMuteStatus(n)) : a.default.debug('Ignoring event '.concat(e.type),e),E.dispatchEvent(t); }),E.socket.on('unmute_audio',function(e) { a.default.info('['.concat(E.clientId,'] rcv peer unmute audio: ').concat(e.peerid));const t = u({ type:'unmute-audio',uid:e.peerid }); const n = E.remoteStreams[e.peerid];n ? (n.peerMuteAudio = !1,n.pc && E._adjustPCMuteStatus(n)) : a.default.debug('Ignoring event '.concat(e.type),e),E.dispatchEvent(t); }),E.socket.on('mute_video',function(e) { a.default.info('['.concat(E.clientId,'] rcv peer mute video: ').concat(e.peerid));const t = u({ type:'mute-video',uid:e.peerid }); const n = E.remoteStreams[e.peerid];n ? (n.peerMuteVideo = !0,n.pc && E._adjustPCMuteStatus(n)) : a.default.debug('Ignoring event '.concat(e.type),e),E.dispatchEvent(t); }),E.socket.on('unmute_video',function(e) { a.default.info('['.concat(E.clientId,'] rcv peer unmute video: ').concat(e.peerid));const t = u({ type:'unmute-video',uid:e.peerid }); const n = E.remoteStreams[e.peerid];n ? (n.peerMuteVideo = !1,n.pc && E._adjustPCMuteStatus(n)) : a.default.debug('Ignoring event '.concat(e.type),e),E.dispatchEvent(t); }),E.socket.on('user_banned',function(e) { a.default.info('['.concat(E.clientId,'] user banned uid: ').concat(e.id,' error: ')
  .concat(e.errcode));const t = u({ type:'client-banned',uid:e.id,attr:e.errcode });E.dispatchEvent(t),n = !0; }),E.socket.on('stream_fallback',function(e) { a.default.info('['.concat(E.clientId,'] stream fallback uid: ').concat(e.id,' peerId: ')
  .concat(e.peerid,' type: ')
  .concat(e.type));const t = u({ type:'stream-fallback',uid:e.id,stream:e.peerid,attr:e.type });E.dispatchEvent(t); }),E.socket.on('stream_recover',function(e) { a.default.info('['.concat(E.clientId,'] stream recover uid: ').concat(e.id,' peerId: ')
  .concat(e.peerid,' type: ')
  .concat(e.type));const t = u({ type:'stream-recover',uid:e.id,stream:e.peerid,attr:e.type });E.dispatchEvent(t); }),E.socket.on('onP2PLost',function(e) { a.default.debug('['.concat(E.clientId,'] p2plost: '),e,'p2ps:',E.p2ps);let t; let n = 'DTLS failed';(t = E.localStreams[e.uid] || E.remoteStreams[e.uid]) ? (t.pc && t.pc.offerCandidates && t.pc.offerCandidates.length === 0 && (n = 'NO_CANDIDATES_IN_OFFER'),e.event === 'publish' && r.b.publish(E.joinInfo.sid,{ lts:t.publishLTS,succ:!1,audioName:t.hasAudio() && t.audioName,videoName:t.hasVideo() && t.videoName,screenName:t.hasScreen() && t.screenName,ec:n }),e.event === 'subscribe' && r.b.subscribe(E.joinInfo.sid,{ lts:t.subscribeLTS,succ:!1,video:t.subscribeOptions && t.subscribeOptions.video,audio:t.subscribeOptions && t.subscribeOptions.audio,peerid:e.uid + '',ec:n })) : a.default.warning('P2PLost Stream Not found',e),a.default.debug('['.concat(E.clientId,'] p2plost:'),e.p2pid),(t = E.p2ps.get(e.p2pid)) && (E.p2ps.delete(e.p2pid),t.local ? E.dispatchEvent(u({ type:'pubP2PLost',stream:t,attr:n })) : E.remoteStreams[t.getId()] && E.dispatchEvent(u({ type:'subP2PLost',stream:t,attr:n }))); }),E._sendMessage = function(e,t) { switch (e) { case 'SubscribeStats':N(g.apply(void 0,Ie()(t))); } },E.socket.on('onTokenPrivilegeWillExpire',function(e) { a.default.debug('['.concat(E.clientId,'] Received Message onTokenPrivilegeWillExpire')),E.dispatchEvent(u({ type:'onTokenPrivilegeWillExpire' })); }),E.socket.on('onTokenPrivilegeDidExpire',function() { a.default.warning('['.concat(E.clientId,'] Received Message onTokenPrivilegeDidExpire, please get new token and join again')),E.closeGateway(),E.dispatchEvent(u({ type:'onTokenPrivilegeDidExpire' })); }),E._doWithAction = function(e,t,n) { e === 'tryNext' ? function(e,t) { a.default.debug('['.concat(E.clientId,'] Connect next gateway')),E.state = v,E.socket.close(),C(),E.reconnectMode = 'tryNext',O(e,t); }(t,n) : e === 'retry' ? function(e,t) { a.default.debug('['.concat(E.clientId,'] Reconnect gateway')),E.state = v,E.socket.close(),C(),E.reconnectMode = 'retry',O(e,t); }(t,n) : e === 'quit' ? (a.default.debug('['.concat(E.clientId,'] quit gateway')),E.state = v,E.socket.close(),C()) : e === 'recover' && (a.default.debug('['.concat(E.clientId,'] Reconnect gateway')),E.state = v,E.socket.close(),C(),E.reconnectMode = 'recover',O()); },E.socket.on('notification',function(e) { if (a.default.debug('['.concat(E.clientId,'] Receive notification: '),e),_[e.code] === 'ERR_JOIN_BY_MULTI_IP') return E.dispatchEvent({ type:'onMultiIP',arg:e });e.detail ? E._doWithAction(Ve[_[e.code]]) : e.action && E._doWithAction(e.action); }),E.socket.on('onPeerLeave',function(e) { const t = u({ type:'peer-leave',uid:e.id });if (E.remoteStreamsInChannel.has(e.id) && E.remoteStreamsInChannel.delete(e.id),E.remoteStreams.hasOwnProperty(e.id) && (t.stream = E.remoteStreams[e.id]),E.dispatchEvent(t),E.remoteStreams.hasOwnProperty(e.id)) { a.default.info('['.concat(E.clientId,'] closing stream on peer leave'),e.id);const n = E.remoteStreams[e.id];n.close(),delete E.remoteStreams[e.id],void 0 !== n.pc && (n.pc.close(),n.pc = void 0,E.p2ps.delete(n.p2pId)); }E.timers.hasOwnProperty(e.id) && (clearInterval(E.timers[e.id]),clearInterval(E.timers[e.id] + '_RelatedStats'),delete E.timers[e.id]),E.audioLevel[e.id] != null && delete E.audioLevel[e.id],E.timer_counter[e.id] != null && delete E.timer_counter[e.id]; }),E.socket.on('onUplinkStats',function(e) {}),E.socket.on('liveStreamingStarted',function(e) { const t = p({ type:'liveStreamingStarted',url:e.url });E.dispatchEvent(t); }),E.socket.on('liveStreamingFailed',function(e) { const t = p({ type:'liveStreamingFailed',url:e.url });E.dispatchEvent(t); }),E.socket.on('liveStreamingStopped',function(e) { const t = p({ type:'liveStreamingStopped',url:e.url });E.dispatchEvent(t); }),E.socket.on('liveTranscodingUpdated',function(e) { const t = p({ type:'liveTranscodingUpdated',reason:e.reason });E.dispatchEvent(t); }),E.socket.on('streamInjectedStatus',function(e) { const t = p({ type:'streamInjectedStatus',url:e.url,uid:e.uid,status:e.status });E.dispatchEvent(t); }),E.socket.on('onUserOnline',function(e) { E.joinInfo.stringUid && typeof e.id !== 'string' && a.default.error('StringUID is Mixed with UintUID'),E.dispatchEvent({ type:'peer-online',uid:e.id }); })); }; var N = function(e,t,n) { if (void 0 === E.socket) return a.default.error('['.concat(E.clientId,'] No socket available')),void R(n,A.INVALID_OPERATION);try { E.socket.emitSimpleMessage(e,function(e,i) { e === 'success' ? typeof t === 'function' && t(i) : typeof n === 'function' && n(_[i] || i); }); } catch (t) { a.default.error('['.concat(E.clientId,'] Socket emit message failed ').concat(JSON.stringify(e))),a.default.error('['.concat(E.clientId,'] '),t),R(n,A.SOCKET_ERROR); } }; var D = function(e,t) { if (void 0 !== E.socket) try { E.socket.emitSimpleMessage(e,function(e,n) { t && t(e,n); }); } catch (e) { a.default.error('['.concat(E.clientId,'] Error in sendSimpleSdp [').concat(e,']')); } else a.default.error('['.concat(E.clientId,'] Error in sendSimpleSdp [socket not ready]')); }; var k = function() { for (const e in E.localStreams) if (void 0 !== E.localStreams[e]) { const t = E.localStreams[e];delete E.localStreams[e],void 0 !== t.pc && (t.pc.close(),t.pc = void 0); } }; var M = function() { for (const e in E.remoteStreamsInChannel.clear(),E.remoteStreams) if (E.remoteStreams.hasOwnProperty(e)) { const t = E.remoteStreams[e];t.isPlaying() && t.stop(),t.close(),delete E.remoteStreams[e],void 0 !== t.pc && (t.pc.close(),t.pc = void 0); } };return E }; var Ge = { _gatewayClients:{},register(e,t) { if (!t.uid) { var n = 'NO_UID_PROVIDED';return a.default.error('['.concat(e.clientId,'] '),n,t),n } if (t.cname) { if (this._gatewayClients[t.cname] && this._gatewayClients[t.cname][t.uid] && this._gatewayClients[t.cname][t.uid] !== e) { n = 'UID_CONFLICT';return a.default.error('['.concat(e.clientId,'] '),n,t),n } return a.default.debug('['.concat(e.clientId,'] register client Channel'),t.cname,'Uid',t.uid),this._gatewayClients[t.cname] || (this._gatewayClients[t.cname] = {}),this._gatewayClients[t.cname][t.uid] = e,null } var n = 'NO_CHANNEL_PROVIDED';return a.default.error('['.concat(e.clientId,'] '),n,t),n },unregister(e) { const t = e && e.uid; const n = e.joinInfo && e.joinInfo.cname;if (!t || !n) { var i = 'INVALID_GATEWAYCLIENT';return a.default.error('['.concat(e.clientId,'] '),i),i } if (this._gatewayClients[n] && this._gatewayClients[n][t]) { if (this._gatewayClients[n][t] !== e) { i = 'GATEWAYCLIENT_UID_CONFLICT';return a.default.error('['.concat(e.clientId,'] '),i),i } return a.default.debug('['.concat(e.clientId,'] unregister client '),e.uid),delete this._gatewayClients[n][t],null } var i = 'GATEWEAY_CLIENT_UNREGISTERED';a.default.error('['.concat(e.clientId,'] '),i); } };He.DISCONNECTED = 0,He.CONNECTING = 1,He.CONNECTED = 2,He.DISCONNECTING = 3,He.connetionStateMap = { 0:'DISCONNECTED',1:'CONNECTING',2:'CONNECTED',3:'DISCONNECTING' };const Je = He; const Ye = function(e) { let t;switch (e) { case '120p':case '120p_1':t = ['120p_1','120p_1','120p_1'];break;case '120p_3':t = ['120p_3','120p_3','120p_3'];break;case '180p':case '180p_1':t = ['90p_1','90p_1','180p_1'];break;case '180p_3':t = ['120p_3','120p_3','180p_3'];break;case '180p_4':t = ['120p_1','120p_1','180p_4'];break;case '240p':case '240p_1':t = ['120p_1','120p_1','240p_1'];break;case '240p_3':t = ['120p_3','120p_3','240p_3'];break;case '240p_4':t = ['120p_4','120p_4','240p_4'];break;case '360p':case '360p_1':case '360p_4':case '360p_9':case '360p_10':case '360p_11':t = ['90p_1','90p_1','360p_1'];break;case '360p_3':case '360p_6':t = ['120p_3','120p_3','360p_3'];break;case '360p_7':case '360p_8':t = ['120p_1','120p_1','360p_7'];break;case '480p':case '480p_1':case '480p_2':case '480p_4':case '480p_10':t = ['120p_1','120p_1','480p_1'];break;case '480p_3':case '480p_6':t = ['120p_3','120p_3','480p_3'];break;case '480p_8':case '480p_9':t = ['120p_4','120p_4','480p_8'];break;case '720p':case '720p_1':case '720p_2':case '720p_3':t = ['90p_1','90p_1','720p_1'];break;case '720p_5':case '720p_6':t = ['120p_1','120p_1','720p_5'];break;case '1080p':case '1080p_1':case '1080p_2':case '1080p_3':case '1080p_5':t = ['90p_1','90p_1','1080p_1'];break;case '1440p':case '1440p_1':case '1440p_2':t = ['90p_1','90p_1','1440p_1'];break;case '4k':case '4k_1':case '4k_3':t = ['90p_1','90p_1','4k_1'];break;default:t = ['120p_1','120p_1','360p_7']; } return Object(f.isOpera)() ? [e,15,50] : Object(f.isFireFox)() ? [t[1],15,100] : Object(f.isSafari)() ? [t[2],15,50] : [t[0],15,50] }; const ze = { 1001:'FRAMERATE_INPUT_TOO_LOW',1002:'FRAMERATE_SENT_TOO_LOW',1003:'SEND_VIDEO_BITRATE_TOO_LOW',1005:'RECV_VIDEO_DECODE_FAILED',2001:'AUDIO_INPUT_LEVEL_TOO_LOW',2002:'AUDIO_OUTPUT_LEVEL_TOO_LOW',2003:'SEND_AUDIO_BITRATE_TOO_LOW',2005:'RECV_AUDIO_DECODE_FAILED',3001:'FRAMERATE_INPUT_TOO_LOW_RECOVER',3002:'FRAMERATE_SENT_TOO_LOW_RECOVER',3003:'SEND_VIDEO_BITRATE_TOO_LOW_RECOVER',3005:'RECV_VIDEO_DECODE_FAILED_RECOVER',4001:'AUDIO_INPUT_LEVEL_TOO_LOW_RECOVER',4002:'AUDIO_OUTPUT_LEVEL_TOO_LOW_RECOVER',4003:'SEND_AUDIO_BITRATE_TOO_LOW_RECOVER',4005:'RECV_AUDIO_DECODE_FAILED_RECOVER' }; const qe = { FramerateInput:1001,FramerateSent:1002,SendVideoBitrate:1003,VideoDecode:1005,AudioIntputLevel:2001,AudioOutputLevel:2002,SendAudioBitrate:2003,AudioDecode:2005 }; const Ke = function(e) { const t = { remoteStreamStorage:{},localStreamStorage:{} };return t.gatewayClient = e,t.checkAudioOutputLevel = function(e) { return !(e && parseInt(e.audioRecvBytesDelta) > 0 && parseInt(e.audioDecodingNormalDelta) > 0 && parseInt(e.audioOutputLevel) === 0) },t.checkAudioIntputLevel = function(e) { return !e || parseInt(e.audioInputLevel) !== 0 },t.checkFramerateInput = function(e,t) { if (!e || !t.attributes) return !0;const n = parseInt(t.attributes.maxFrameRate); const i = parseInt(e.googFrameRateInput);return !n || !i || !(n > 10 && i < 5 || n < 10 && n >= 5 && i <= 1) },t.checkFramerateSent = function(e) { return !(e && parseInt(e.googFrameRateInput) > 5 && parseInt(e.googFrameRateSent) <= 1) },t.checkSendVideoBitrate = function(e) { return !e || parseInt(e.videoSendBytesDelta) !== 0 },t.checkSendAudioBitrate = function(e) { return !e || parseInt(e.audioSendBytesDelta) !== 0 },t.checkVideoDecode = function(e) { return !e || parseInt(e.videoRecvBytesDelta) === 0 || parseInt(e.googFrameRateDecoded) !== 0 },t.checkAudioDecode = function(e) { return !e || parseInt(e.audioRecvBytesDelta) === 0 || parseInt(e.audioDecodingNormalDelta) !== 0 },t.record = function(e,n,i,o,a) { i[e] || (i[e] = { isPrevNormal:!0,record:[] });const r = i[e]; const s = t['check' + e](n,a);if (r.record.push(s),r.record.length >= 5) { r.isCurNormal = r.record.includes(!0);const c = qe[e];r.isPrevNormal && !r.isCurNormal && t.gatewayClient.dispatchEvent({ type:'exception',code:c,msg:ze[c],uid:o }),!r.isPrevNormal && r.isCurNormal && t.gatewayClient.dispatchEvent({ type:'exception',code:c + 2e3,msg:ze[c + 2e3],uid:o }),r.isPrevNormal = r.isCurNormal,r.record = []; } },t.setLocalStats = function(e) { const n = {};Object.keys(e).map(function(i) { const o = e[i]; const a = t.gatewayClient.localStreams[parseInt(i)]; const r = t.localStreamStorage[i] || {};a && a.hasVideo() && (t.record('SendVideoBitrate',o.videoStats,r,i),t.record('FramerateInput',o.videoStats,r,i,a),t.record('FramerateSent',o.videoStats,r,i)),a && a.hasAudio() && (t.record('AudioIntputLevel',o.audioStats,r,i),t.record('SendAudioBitrate',o.audioStats,r,i)),n[i] = r; }),t.localStreamStorage = n; },t.setRemoteStats = function(n) { const i = {};Object.keys(n).map(function(o) { const a = n[o]; const r = e.remoteStreams[o]; const s = t.remoteStreamStorage[o] || {};r && r.hasVideo() && r.isPlaying() && t.record('VideoDecode',a.videoStats,s,o),r && r.hasAudio() && r.isPlaying() && (t.record('AudioOutputLevel',a.audioStats,s,o),t.record('AudioDecode',a.audioStats,s,o)),i[o] = s; }),t.remoteStreamStorage = i; },t }; const Xe = new function() { const e = s();return e.states = { UNINIT:'UNINIT',INITING:'INITING',INITED:'INITED' },e.state = e.states.UNINIT,e.type = null,e.lastConnectedAt = null,e.lastDisconnectedAt = null,e.lastTypeChangedAt = null,e.networkChangeTimer = null,e._init = function(t,n) { if (e.state = e.states.INITING,navigator.connection && navigator.connection.addEventListener) { const i = e._getNetworkInfo();e.type = i && i.type,e.state = e.states.INITED,t && t(); } else e.state = e.states.UNINIT,n && n('DO_NOT_SUPPORT'); },e._getNetworkInfo = function() { return navigator.connection },e._reloadNetworkInfo = function() { const t = e._getNetworkInfo(); const n = t && t.type || 'UNSUPPORTED'; const i = Date.now();if (n !== e.type) { e.lastTypeChangedAt = i,n == 'none' ? e.lastDisconnectedAt = i : e.type == 'none' && (e.lastConnectedAt = i),e.type = n;const o = { type:'networkTypeChanged',networkType:n };e.dispatchEvent(o); } },e.getStats = function(t,n) { const i = {}; const o = e._getNetworkInfo();o && (i.NetworkType = o.type || 'UNSUPPORTED'),setTimeout(function() { t(i); },0); },e._init(function() { navigator.connection.addEventListener('change',function() { e._reloadNetworkInfo(); }),e.networkChangeTimer = setInterval(function() { e._reloadNetworkInfo(); },5e3); },function(e) {}),e }; const Qe = function(e) { const t = { key:void 0,highStream:null,lowStream:null,lowStreamParameter:null,isDualStream:!1,highStreamState:2,lowStreamState:2,proxyServer:null,turnServer:{},useProxyServer:!1 };t.mode = e.mode,t.clientId = Object(G.b)().slice(0,5),t.uintUid = null;e = S()({},e);return t.aespassword = null,t.aesmode = 'none',t.hasPublished = !1,t.getSessionId = function() { return e.sessionId },t.getConnectionState = function() { const n = r.b.reportApiInvoke(e.sessionId,{ name:'Client.getConnectionState',options:arguments,tag:'tracer' }); const i = Je.connetionStateMap[t.gatewayClient.state];return n(),i },t.setClientRole = function(n,i) { const o = r.b.reportApiInvoke(e.sessionId,{ callback:i,name:'Client.setClientRole',options:arguments,tag:'tracer' });if (K(n,'setClientRole',['host','audience']),t.mode === 'rtc') { const s = 'RTC mode can not use setClientRole';return a.default.warning('['.concat(t.clientId,'] ').concat(s)),o && o(s) }t.gatewayClient && t.gatewayClient.state === Je.CONNECTED ? (n === 'audience' && (this.highStreamState === 0 ? this._unpublish(this.highStream,function() { o && o(null,{ role:n }); },function(e) { o && o(e); }) : t.gatewayClient.setClientRole('audience',o)),n === 'host' && t.gatewayClient.setClientRole('host',o)) : (t.gatewayClient.role = n,o && o(null,{ role:n })); },t.getGatewayInfo = function(e) { if (t.gatewayClient.state !== Je.CONNECTED) { const n = 'Client is not in connected state';return a.default.error('['.concat(t.clientId,'] ').concat(n)),void e(n) }t.gatewayClient.getGatewayInfo(function(t) { e(null,t); },e); },t.renewToken = function(n,i,o) { const s = r.b.reportApiInvoke(e.sessionId,{ callback(e,t) { if (e) return o && o(e);i && i(t); },name:'Client.renewToken',options:arguments,tag:'tracer' });if (!ie(n)) throw new Error('Invalid token: Token is of the string type .Length of the string: [1,255]. ASCII characters only.');return t.gatewayClient ? t.key ? (t.key = n,void t.gatewayClient.renewToken(n,function(e) { return s(null,e) },s)) : (a.default.error('['.concat(t.clientId,'] renewToken should not be called before user join')),s(A.INVALID_OPERATION)) : (a.default.error('['.concat(t.clientId,'] renewToken Failed. GatewayClient not Exist')),s(A.INVALID_OPERATION)) },t.setLowStreamParameter = function(n) { const i = r.b.reportApiInvoke(e.sessionId,{ name:'Client.setLowStreamParameter',options:arguments,tag:'tracer' });X(n,'param');const o = n.width; const s = n.height; const c = n.framerate; const d = n.bitrate;se(o) || $(o,'width'),se(s) || $(s,'height'),se(c) || $(c,'framerate'),se(d) || $(d,'bitrate',1,1e7),(!o && s || o && !s) && a.default.warning('['.concat(t.clientId,'] The width and height parameters take effect only when both are set')),t.lowStreamParameter = n,i(); },t.init = function(n,i,o) { const s = r.b.reportApiInvoke(e.sessionId,{ callback(e,t) { if (e) return o && o(e);i && i(t); },name:'Client.init',options:arguments,tag:'tracer' });Q(n),Object(f.isChromeKernel)() && Object(f.getChromeKernelVersion)() <= 48 ? o ? s(A.BAD_ENVIRONMENT) : Object(G.f)() : (a.default.info('['.concat(t.clientId,'] Initializing AgoraRTC client, appId: ').concat(n,'.')),e.appId = n,e.sessionId = Object(G.b)(),s()); },t.setTurnServer = function(n) { const i = r.b.reportApiInvoke(e.sessionId,{ name:'Client.setTurnServer',options:arguments,tag:'tracer' });if (t.gatewayClient && t.gatewayClient.state !== Je.DISCONNECTED) throw new Error('Set turn server before join channel');if (t.useProxyServer) throw new Error('You have already set the proxy');X(n,'turnServer');const o = n.turnServerURL; const s = n.username; const c = n.password; const d = n.udpport; const u = n.forceturn; const l = n.tcpport;Q(o,'turnServerURL'),Q(s,'username'),Q(c,'password'),Q(d,'udpport'),se(u) || Z(u,'forceturn'),t.turnServer.url = o,t.turnServer.udpport = d,t.turnServer.username = s,t.turnServer.credential = c,t.turnServer.forceturn = u || !1,se(l) || (Q(l,'tcpport'),t.turnServer.tcpport = l,a.default.info('['.concat(t.clientId,'] Set turnserver tcpurl. ').concat(t.turnServer.url,':')
  .concat(t.turnServer.tcpport))),a.default.info('['.concat(t.clientId,'] Set turnserver udpurl. ').concat(t.turnServer.url,':')
  .concat(t.turnServer.udpport,',username: ')
  .concat(t.turnServer.uername,',password: ')
  .concat(t.turnServer.credential)),i(); },t.setProxyServer = function(n) { const i = r.b.reportApiInvoke(e.sessionId,{ name:'Client.setProxyServer',options:arguments,tag:'tracer' });if (t.gatewayClient && t.gatewayClient.state !== Je.DISCONNECTED) throw new Error('Set proxy server before join channel');if (!n) throw new Error('Do not set the proxyServer parameter as empty');if (t.useProxyServer) throw new Error('You have already set the proxy');Q(n,'proxyServer'),t.proxyServer = n,r.b.setProxyServer(n),a.default.setProxyServer(n),i(); },t.startProxyServer = function() { const n = r.b.reportApiInvoke(e.sessionId,{ name:'Client.startProxyServer',options:arguments,tag:'tracer' });if (t.gatewayClient && t.gatewayClient.state !== Je.DISCONNECTED) throw new Error('Start proxy server before join channel');if (t.proxyServer || t.turnServer.url) throw new Error('You have already set the proxy');t.useProxyServer = !0,n(); },t.stopProxyServer = function() { const n = r.b.reportApiInvoke(e.sessionId,{ name:'Client.stopProxyServer',options:arguments,tag:'tracer' });if (t.gatewayClient && t.gatewayClient.state !== Je.DISCONNECTED) throw new Error('Stop proxy server after leave channel');r.b.setProxyServer(),a.default.setProxyServer(),t.turnServer = {},t.proxyServer = null,t.useProxyServer = !1,n(); },t.setEncryptionSecret = function(n) { const i = r.b.reportApiInvoke(e.sessionId,{ name:'Client.setEncryptionSecret',options:arguments,tag:'tracer' });Q(n,'password'),t.aespassword = n,i(); },t.setEncryptionMode = function(n) { const i = r.b.reportApiInvoke(e.sessionId,{ name:'Client.setEncryptionMode',options:arguments,tag:'tracer' });if (Q(n,'encryptionMode'),!ve.includes(n)) throw new Error('Invalid encryptionMode: encryptionMode should be "aes-128-xts" | "aes-256-xts" | "aes-128-ecb"');t.aesmode = n,i(); },t.configPublisher = function(n) { const i = r.b.reportApiInvoke(e.sessionId,{ name:'Client.configPublisher',options:arguments,tag:'tracer' });X(n,'config');const o = n.width; const a = n.height; const s = n.framerate; const c = n.bitrate; const d = n.publisherUrl;$(o,'width'),$(a,'height'),$(s,'framerate'),$(c,'bitrate',1,1e7),d && Q(d,'publisherUrl'),t.gatewayClient.configPublisher(n),i(); },t.enableDualStream = function(n,i) { const o = r.b.reportApiInvoke(e.sessionId,{ callback(e,t) { if (e) return i && i(e);n && n(t); },name:'Client.enableDualStream',options:arguments,tag:'tracer' });return Object(f.getBrowserOS)() === 'iOS' ? (r.b.streamSwitch(e.sessionId,{ lts:(new Date).getTime(),isdual:!0,succ:!1 }),o(A.IOS_NOT_SUPPORT)) : Object(f.isWeChatBrowser)() ? (r.b.streamSwitch(e.sessionId,{ lts:(new Date).getTime(),isdual:!0,succ:!1 }),o(A.WECHAT_NOT_SUPPORT)) : (r.b.streamSwitch(e.sessionId,{ lts:(new Date).getTime(),isdual:!0,succ:!0 }),t.isDualStream = !0,void (t.highStreamState === 0 ? t._publishLowStream(function(e) { return o(null,e) },function(e) { a.default.warning('['.concat(t.clientId,']'),e),o(A.ENABLE_DUALSTREAM_FAILED); }) : t.highStreamState === 1 ? o(A.STILL_ON_PUBLISHING) : o(null))) },t.disableDualStream = function(n,i) { const o = r.b.reportApiInvoke(e.sessionId,{ callback(e,t) { if (e) return i && i(e);n && n(t); },name:'Client.disableDualStream',options:arguments,tag:'tracer' });r.b.streamSwitch(e.sessionId,{ lts:(new Date).getTime(),isdual:!1,succ:!0 }),t.isDualStream = !1,t.highStreamState === 0 ? t._unpublishLowStream(function() { t.highStream.lowStream = null,o(); },function(e) { a.default.warning('['.concat(t.clientId,']'),e),o(A.DISABLE_DUALSTREAM_FAILED); }) : t.highStreamState === 1 ? o(A.STILL_ON_PUBLISHING) : o(); },t._createLowStream = function(e,n) { if (t.highStream && t.highStream.stream) { const i = S()({},t.highStream.params);if (i.streamID += 1,i.audio = !1,i.video) { const r = t.highStream.stream.getVideoTracks()[0];r ? Y.getVideoCameraIdByLabel(r.label,function(r) { i.cameraId = r;const s = new pe(i);if (s.streamId = t.highStream.getId() + 1,t.lowStreamParameter) { const c = S()({},t.lowStreamParameter);if (!c.width || !c.height) { const d = Ye(t.highStream.profile); var u = o.SUPPORT_RESOLUTION_LIST[d[0]];c.width = u[0],c.height = u[1]; } if (c.framerate = c.framerate || 5,c.bitrate = c.bitrate || 50,Object(f.isSafari)() || Object(f.isOpera)()) { a.default.debug('['.concat(t.clientId,'] Shimming lowStreamParameter'));u = o.SUPPORT_RESOLUTION_LIST[t.highStream.profile];c.width = u[0],c.height = u[1]; }s.setVideoProfileCustomPlus(c); } else s.setVideoProfileCustom(Ye(t.highStream.profile));s.init(function() { t.highStream.lowStream = s,t.highStream.userMuteVideo && s.muteVideo(),e && e(s); },n); },n) : n && n(A.HIGH_STREAM_NOT_VIDEO_TRACE); } else n && n(A.HIGH_STREAM_NOT_VIDEO_TRACE); } else n && n(A.HIGH_STREAM_NOT_VIDEO_TRACE); },t._getLowStream = function(e,n) { t.lowStream ? e(t.lowStream) : t._createLowStream(function(n) { t.lowStream = n,e(t.lowStream); },n); },t._publishLowStream = function(e,n) { return t.lowStreamState !== 2 ? n && n(A.LOW_STREAM_ALREADY_PUBLISHED) : t.highStream && t.highStream.hasScreen() ? n && n(A.SHARING_SCREEN_NOT_SUPPORT) : void t._getLowStream(function(i) { t.lowStreamState = 1,t.gatewayClient.publish(i,{ streamType:1 },function() { t.lowStreamState = 0,e && e(); },function(e) { a.default.debug('['.concat(t.clientId,'] publish low stream failed')),n && n(e); }); },n) },t._unpublishLowStream = function(e,n) { if (t.lowStreamState !== 0) return n && n(A.LOW_STREAM_NOT_YET_PUBLISHED);t.lowStream && (t.gatewayClient.unpublish(t.lowStream,{ streamType:1 },function() {},function(e) { a.default.debug('['.concat(t.clientId,'] unpublish low stream failed')),n && n(e); }),t.lowStream.close(),t.lowStream = null,t.lowStreamState = 2,e && e()); },t.join = function(n,i,o,s,c) { let d; const u = r.b.reportApiInvoke(e.sessionId,{ callback(e,t) { if (e) return c && c(e);s && s(t); },name:'Client.join',options:arguments,tag:'tracer' });if (n && !ie(n)) return a.default.warning('['.concat(t.clientId,'] Param channelKey should be string')),u(A.INVALID_PARAMETER);if (!re(d = i) || !/^[a-zA-Z0-9!#$%&()+-:;<=.>?@[\]^_{}|~,\s]{1,64}$/.test(d)) return a.default.error('Invalid Channel Name '.concat(i)),a.default.warning('['.concat(t.clientId,'] The length must be within 64 bytes. The supported characters: a-z,A-Z,0-9,space,!, #, $, %, &, (, ), +, -, :, ;, <, =, ., >, ?, @, [, ], ^, _,  {, }, |, ~, ,')),u(A.INVALID_PARAMETER);if (typeof i === 'string' && i === '') return a.default.warning('['.concat(t.clientId,'] Param channel should not be empty')),u(A.INVALID_PARAMETER);if (o && !Object(G.c)(o) && !ee(o,1,255)) return a.default.error('Invalid UID '.concat(o,' ').concat(q()(o))),a.default.warning('['.concat(t.clientId,'] [String uid] Length of the string: [1,255]. ASCII characters only. [Number uid] The value range is [0,10000]')),u(A.INVALID_PARAMETER);if (typeof o === 'string' && o.length == 0) return a.default.warning('['.concat(t.clientId,'] String uid should not be empty')),u(A.INVALID_PARAMETER);if (typeof o === 'string' && o.length > 256) return a.default.warning('['.concat(t.clientId,'] Length of string uid should be less than 255')),u(A.INVALID_PARAMETER);t.highStream = null,t.lowStream = null,t.lowStreamParameter = null,t.isDualStream = !1,t.highStreamState = 2,t.lowStreamState = 2;const l = { clientId:t.clientId,appId:e.appId,sid:e.sessionId,cname:i,uid:o,turnServer:t.turnServer,proxyServer:t.proxyServer,token:n || e.appId,useProxyServer:t.useProxyServer };if (typeof o === 'string' && (l.stringUid = o,t.uintUid ? (l.uid = t.uintUid,delete t.uintUid) : l.uid = 0),t.aespassword && t.aesmode !== 'none' && S()(l,{ aespassword:t.aespassword,aesmode:t.aesmode }),r.b.sessionInit(e.sessionId,{ lts:(new Date).getTime(),cname:i,appid:e.appId,mode:e.mode,succ:!0 }),t.onSuccess = function(e) { t.rtcStatsCollector.startNetworkQualityTimer(),t.onSuccess = null,u(null,e); },t.onFailure = function(e) { return u(e) },t.channel = i,t.gatewayClient.state !== Je.DISCONNECTED) return a.default.error('['.concat(t.clientId,'] Client already in connecting/connected state')),u(A.INVALID_OPERATION),void r.b.joinGateway(e.sessionId,{ lts:Date.now(),succ:!1,ec:A.INVALID_OPERATION,addr:null });t.gatewayClient.state = Je.CONNECTING;const p = function(o,r) { a.default.info('['.concat(t.clientId,'] Joining channel: ').concat(i)),t.gatewayClient.dispatchEvent({ type:'config-distribute',config:r,joinInfo:l }),t.key = n || e.appId,l.cid = o.cid,l.uid || (l.uid = o.uid),l.clientId = t.clientId,o.uni_lbs_ip && o.uni_lbs_ip[1] && (l.uni_lbs_ip = o.uni_lbs_ip[1]),l.gatewayAddr = o.gateway_addr,t.joinInfo = l,t.gatewayClient.join(l,t.key,function(e) { a.default.info('['.concat(t.clientId,'] Join channel ').concat(i,' success, join with uid: ')
  .concat(e,'.')),t.onSuccess = null,t.rtcStatsCollector.startNetworkQualityTimer(),u(null,e); },function(e) { return u(e) }); };l.stringUid && !l.uid ? (self.userAccountReq && !self.userAccountReq.isFinished() && self.userAccountReq.cancel(),self.userAccountReq = xe(l),self.userAccountReq.then(function(e) { a.default.debug('getUserAccount Success '.concat(e.url,' ').concat(l.stringUid,' => ')
  .concat(e.uid)),l.uid = e.uid,Le(l,p); }).catch(function(e) { a.default.error('getUserAccount rejected',e),u(e); })) : Le(l,p); },t.renewChannelKey = function(n,i,o) { const s = r.b.reportApiInvoke(e.sessionId,{ callback(e,t) { if (e) return o && o(e);i && i(t); },name:'Client.renewChannelKey',options:arguments,tag:'tracer' });Q(n,'key',1,2047),void 0 === t.key ? (a.default.error('['.concat(t.clientId,'] renewChannelKey should not be called before user join')),s(A.INVALID_OPERATION)) : (t.key = n,t.gatewayClient.key = n,t.gatewayClient.rejoin(),s()); },t.leave = function(n,i) { let s = !1; const c = r.b.reportApiInvoke(e.sessionId,{ callback(e,o) { if (e) return i && i(e);let a,r;a = t.clientId,r = !1,ke[a] = r,t._renewSession(),t.rtcStatsCollector.clearNetworkQualityTimer(),n && n(o); },name:'Client.leave',options:arguments,tag:'tracer' });a.default.info('['.concat(t.clientId,'] Leaving channel')),self.userAccountReq && !self.userAccountReq.isFinished() && (self.userAccountReq.cancel(),t.gatewayClient.state === Je.CONNECTING && (t.gatewayClient.state = Je.DISCONNECTED)),t.gatewayClient.leave(function(e) { s = !0,c(null,e); },c),setTimeout(function() { s || (t.gatewayClient.socket && (t.gatewayClient.socket.close(),t.gatewayClient.socket = null),t.gatewayClient.state = Je.DISCONNECTED,c(null,'LEAVE_MSG_TIMEOUT')); },Object(o.getParameter)('LEAVE_MSG_TIMEOUT')); },t._renewSession = function() { const n = Object(G.b)();if (a.default.debug('renewSession '.concat(e.sessionId,' => ').concat(n)),e.sessionId = n,t.joinInfo && (t.joinInfo.sid = n),t.gatewayClient && (t.gatewayClient.joinInfo && (t.gatewayClient.joinInfo.sid = n),t.gatewayClient.localStreams)) for (const i in t.gatewayClient.localStreams) { const o = t.gatewayClient.localStreams[i];o && (o.sid = n); } },t._publish = function(n,i,o) { if (t.highStreamState !== 2) return a.default.warning('['.concat(t.clientId,'] Can\'t publish stream when stream already publish ').concat(n.getId())),o && o(A.STREAM_ALREADY_PUBLISHED);a.default.info('['.concat(t.clientId,'] Publishing stream, uid ').concat(n.getId())),t.highStream = n,t.highStreamState = 1,t.highStream.streamId = t.joinInfo.stringUid || t.joinInfo.uid,t.hasPublished = !1;const r = function(n,i,o) { t.gatewayClient.publish(n,{ streamType:0 },function() { n.sid = e.sessionId,t.highStreamState = 0,a.default.info('['.concat(t.clientId,'] Publish success, uid: ').concat(n.getId())),t.isDualStream ? t._publishLowStream(function() { i && i(); },function(e) { a.default.warning('['.concat(t.clientId,'] '),e),i && i(); }) : i && i(); },o); };t.gatewayClient.role === 'audience' && t.mode === 'live' ? t.gatewayClient.setClientRole('host',function(e) { if (e) return o && o(e);r(n,i,o); }) : r(n,i,o); },t._unpublish = function(e,n,i) { if (t.highStreamState !== 0) return a.default.warning('['.concat(t.clientId,'] Can\'t unpublish stream when stream not publish')),i && i(A.STREAM_NOT_YET_PUBLISHED);a.default.info('['.concat(t.clientId,'] Unpublish stream, uid ').concat(e.getId()));const o = function(e,n,i) { t.isDualStream && t.lowStream && t._unpublishLowStream(null,i),t.gatewayClient.unpublish(e,{ streamType:0 },function() { t.highStreamState = 2,a.default.info('['.concat(t.clientId,'] Unpublish stream success, uid: ').concat(e.getId())),n && n(); },function(n) { a.default.info('['.concat(t.clientId,'] Unpublish stream fail, uid: ').concat(e.getId())),i && i(n); }); };t.gatewayClient.role === 'host' && t.mode === 'live' ? t.gatewayClient.setClientRole('audience',function(t) { if (t) return i && i(t);o(e,n,i); }) : o(e,n,i); },t.publish = function(n,i) { const o = r.b.reportApiInvoke(e.sessionId,{ callback(e,t) { if (e) return i && i(e) },name:'Client.publish',tag:'tracer',options:{ stream:'too long to show',onFailure:!!i } });t.highStreamState === 2 ? t._publish(n,function(e) { return o(null,e) },function(e) { return o(e) }) : o(A.STREAM_ALREADY_PUBLISHED); },t.unpublish = function(n,i,o) { const a = r.b.reportApiInvoke(e.sessionId,{ callback(e,t) { if (e) return i && i(e);o && o(t); },name:'Client.unpublish',tag:'tracer',options:{ stream:'too long to show',onFailure:!!i } });t.highStreamState === 0 ? t._unpublish(n,function(e) { return a(null,e) },function(e) { return a(e) }) : a(A.STREAM_NOT_YET_PUBLISHED); },t.subscribe = function(n,i,o) { const s = r.b.reportApiInvoke(e.sessionId,{ callback(e,t) { if (e) return o && o(e) },name:'Client.subscribe',tag:'tracer',options:{ stream:'too long to show',options:i,onFailure:!!o } });typeof i === 'function' && (o = i,i = null),X(n,'stream'),se(i) || (X(i,'options'),se(i.video) || Z(i.video,'options.video'),se(i.audio) || Z(i.audio,'options.audio'));const c = { video:!0,audio:!0 };if (!se(i)) { if (Object(f.isSafari)() && (!i.video || !i.audio)) { var d = 'SAFARI_NOT_SUPPORTED_FOR_TRACK_SUBSCRIPTION';return a.default.error('['.concat(t.clientId,'] '),d),void s(d) } if (!se(i.video) && !ne(i.video) || !se(i.audio) && !ne(i.audio) || !1 === i.audio && !1 === i.video) { d = 'INVALID_PARAMETER '.concat(JSON.stringify(i));return a.default.error('['.concat(t.clientId,'] '),d),void s(d) } }n.subscribeOptions ? (S()(n.subscribeOptions,c,i),t.gatewayClient.subscribeChange(n,function(e) { return s(null,e) },s)) : (n.subscribeOptions = S()({},c,i),t.gatewayClient.subscribe(n,function(e) { return s(null,e) },s)); },t.unsubscribe = function(n,i) { const o = r.b.reportApiInvoke(e.sessionId,{ callback(e,t) { if (e) return i && i(e) },name:'Client.unsubscribe',tag:'tracer',options:{ stream:'too long to show',onFailure:!!i } });a.default.info('['.concat(t.clientId,'] Unsubscribe stream, uid: ').concat(n.getId())),t.gatewayClient.unsubscribe(n,function(e) { return o(null,e) },o); },t.setRemoteVideoStreamType = function(n,i) { const o = r.b.reportApiInvoke(e.sessionId,{ name:'Client.setRemoteVideoStreamType',tag:'tracer',options:{ stream:'too long to show',streamType:i } });K(i,'streamType',[0,1]),t.gatewayClient.setRemoteVideoStreamType(n,i),o(); },t.setStreamFallbackOption = function(n,i) { const o = r.b.reportApiInvoke(e.sessionId,{ name:'Client.setStreamFallbackOption',tag:'tracer',options:{ stream:'too long to show',fallbackType:i } });K(i,'fallbackType',[0,1,2]),t.gatewayClient.setStreamFallbackOption(n,i),o(); },t.startLiveStreaming = function(n,i) { const o = r.b.reportApiInvoke(e.sessionId,{ name:'Client.startLiveStreaming',options:arguments,tag:'tracer' });Q(n,'url'),se(i) || Z(i,'transcodingEnabled'),t.gatewayClient.startLiveStreaming(n,i),o(); },t.stopLiveStreaming = function(n) { const i = r.b.reportApiInvoke(e.sessionId,{ name:'Client.stopLiveStreaming',options:arguments,tag:'tracer' });Q(n,'url'),t.gatewayClient.stopLiveStreaming(n),i(); },t.setLiveTranscoding = function(n) { const i = r.b.reportApiInvoke(e.sessionId,{ name:'Client.setLiveTranscoding',options:arguments,tag:'tracer' });X(n,'transcoding');const o = n.width; const a = n.height; const s = n.videoBitrate; const c = n.videoFramerate; const d = n.lowLatency; const u = n.audioSampleRate; const l = n.audioBitrate; const p = n.audioChannels; const f = n.videoGop; const m = n.videoCodecProfile; const g = n.userCount; const v = n.backgroundColor; const I = n.transcodingUsers;if (se(o) || $(o,'width'),se(a) || $(a,'height'),se(s) || $(s,'videoBitrate',1,1e6),se(c) || $(c,'videoFramerate'),se(d) || Z(d,'lowLatency'),se(u) || K(u,'audioSampleRate',[32e3,44100,48e3]),se(l) || $(l,'audioBitrate',1,128),se(p) || K(p,'audioChannels',[1,2,3,4,5]),se(f) || $(f,'videoGop'),se(m) || K(m,'videoCodecProfile',[66,77,100]),se(g) || $(g,'userCount',0,17),se(v) || $(v,'backgroundColor',0,16777215),!se(I)) { if (!(Array.isArray(I))) throw new Error('[transcodingUsers]: transcodingUsers should be Array');if (I.length > 17) throw new Error('The length of transcodingUsers cannot greater than 17');I.map(function(e,t) { if (!se(e.uid) && !Object(G.c)(e.uid) && !ee(e.uid,1,255)) throw new Error('[String uid] Length of the string: [1,255]. ASCII characters only. [Number uid] The value range is [0,10000]');if (se(e.x) || $(e.x,'transcodingUser['.concat(t,'].x'),0,1e4),se(e.y) || $(e.y,'transcodingUser['.concat(t,'].y'),0,1e4),se(e.width) || $(e.width,'transcodingUser['.concat(t,'].width'),0,1e4),se(e.height) || $(e.height,'transcodingUser['.concat(t,'].height'),0,1e4),se(e.zOrder) || $(e.zOrder,'transcodingUser['.concat(t,'].zOrder'),0,100),!(se(e.alpha) || typeof e.alpha === 'number' && e.alpha <= 1 && e.alpha >= 0)) throw new Error('transcodingUser[${index}].alpha: The value range is [0, 1]') }); }S()($e,n),t.gatewayClient.setLiveTranscoding($e),i(); },t.addInjectStreamUrl = function(n,i) { const o = r.b.reportApiInvoke(e.sessionId,{ name:'Client.addInjectStreamUrl',options:arguments,tag:'tracer' });Q(n,'url',1,255),X(i,'config'),!se(i && i.width) && $(i.width,'config.width',0,1e4),!se(i && i.height) && $(i.height,'config.height',0,1e4),!se(i && i.videoGop) && $(i.videoGop,'config.videoGop',1,1e4),!se(i && i.videoFramerate) && $(i.videoFramerate,'config.videoFramerate',1,1e4),!se(i && i.videoBitrate) && $(i.videoBitrate,'config.videoBitrate',1,1e4),!se(i && i.audioSampleRate) && K(i.audioSampleRate,'config.audioSampleRate',[32e3,44100,48e3]),!se(i && i.audioBitrate) && $(i.audioBitrate,'config.audioBitrate',1,1e4),!se(i && i.audioChannels) && $(i.audioChannels,'config.audioChannels',1,2),S()(Ze,i),t.gatewayClient.addInjectStreamUrl(n,Ze),o(); },t.removeInjectStreamUrl = function(n) { const i = r.b.reportApiInvoke(e.sessionId,{ name:'Client.removeInjectStreamUrl',options:arguments,tag:'tracer' });Q(n,'url',1,255),t.gatewayClient.removeInjectStreamUrl(n),i(); },t.enableAudioVolumeIndicator = function(n,i) { const o = r.b.reportApiInvoke(e.sessionId,{ name:'Client.enableAudioVolumeIndicator',options:arguments,tag:'tracer' });n = n || 2e3,$(i = i || 3,'smooth',1,100),$(n,'interval',50,1e5),t.audioVolumeIndication = t.audioVolumeIndication || { enabled:!0 },t.audioVolumeIndication.interval = n,t.audioVolumeIndication.smooth = i,t.audioVolumeIndication = { interval:n,smooth:i },a.default.info('['.concat(t.clientId,'] enableAudioVolumeIndicator interval ').concat(n,' smooth ')
  .concat(i)),t.gatewayClient.enableAudioVolumeIndicator(n,i),o(); },t.getNetworkStats = function(e,n) { return a.default.deprecate('['.concat(t.clientId,'] client.getNetworkStats is deprecated. Use client.getTransportStats instead.')),Xe.getStats(e,n) },t.getSystemStats = function(e,t) { return g.getStats(e,t) },t.getRecordingDevices = function(e,t) { return Y.getRecordingDevices(e,t) },t.getPlayoutDevices = function(e,t) { return Y.getPlayoutDevices(e,t) },t.getCameras = function(e,t) { return Y.getCameras(e,t) },t.getRemoteAudioStats = function(e,n) { return t.rtcStatsCollector.getRemoteAudioStats(e,n) },t.getLocalAudioStats = function(e,n) { return t.rtcStatsCollector.getLocalAudioStats(e,n) },t.getRemoteVideoStats = function(e,n) { return t.rtcStatsCollector.getRemoteVideoStats(e,n) },t.getLocalVideoStats = function(e,n) { return t.rtcStatsCollector.getLocalVideoStats(e,n) },t._getRemoteVideoQualityStats = function(e,n) { return t.rtcStatsCollector.getRemoteVideoQualityStats(e,n) },t._getRemoteAudioQualityStats = function(e,n) { return t.rtcStatsCollector.getRemoteAudioQualityStats(e,n) },t.getTransportStats = function(e,n) { return t.rtcStatsCollector.getTransportStats(function(t) { return Xe.getStats(function(n) { const i = S()({},t,n);e && e(i); },n) },n) },t.getSessionStats = function(e,n) { return t.rtcStatsCollector.getSessionStats(e,n) },t.onNetworkQuality = function() { return t.rtcStatsCollector.onNetworkQuality(onSuccess,onFailure) },e.clientId = t.clientId,t.gatewayClient = Je(e),t.on = t.gatewayClient.on,t.off = t.gatewayClient.removeEventListener,t.rtcStatsCollector = function(e) { const t = s();return t.gatewayClient = e,t.exceptionMonitor = new Ke(e),t.localStats = {},t.remoteStats = {},t.session = { sendBytes:0,recvBytes:0,WSSendBytes:0,WSSendBytesDelta:0,WSRecvBytes:0,WSRecvBytesDelta:0,HTTPSendBytes:0,HTTPSendBytesDelta:0,HTTPRecvBytes:0,HTTPRecvBytesDelta:0 },t.getRemoteAudioStats = function(e) { const n = {};for (const i in t.remoteStats) { const o = {}; const a = t.remoteStats[i];J(o,'End2EndDelay',a.peer_delay && a.peer_delay.audio_delay),J(o,'TransportDelay',a.peer_delay && a.peer_delay.e2e_delay),J(o,'PacketLossRate',a.peer_delay && a.peer_delay.e2e_audio_lost_ratio_400ms),J(o,'RecvLevel',a.audioStats && a.audioStats.audioOutputLevel),J(o,'RecvBitrate',a.audioRecvBitrate),J(o,'CodecType',a.audioStats && a.audioStats.googCodecName),J(o,'MuteState',a.audioDisabled),J(o,'TotalFreezeTime',a.audioStats && a.audioStats.audioTotalFreezeTime),J(o,'TotalPlayDuration',a.audioStats && a.audioStats.audioTotalPlayDuration),n[i] = o; }e && e(n); },t.getLocalAudioStats = function(e) { const n = {};for (const i in t.localStats) { const o = {}; const a = t.localStats[i];J(o,'RecordingLevel',a.audioStats && a.audioStats.audioInputLevel),J(o,'SendLevel',a.audioStats && a.audioStats.totalAudioEnergy),J(o,'SamplingRate',a.audioStats && a.audioStats.totalSamplesDuration),J(o,'SendBitrate',a.audioSendBitrate),J(o,'CodecType',a.audioStats && a.audioStats.googCodecName),J(o,'MuteState',a.audioDisabled);const r = t.gatewayClient.localStreams[i];r && r.isPlaying() && J(o,'MuteState',r.userMuteAudio ? '1' : '0'),n[i] = o; }e && e(n); },t.getRemoteVideoStats = function(e) { const n = {};for (const i in t.remoteStats) { const o = {}; const a = t.remoteStats[i];J(o,'End2EndDelay',a.peer_delay && a.peer_delay.video_delay),J(o,'TransportDelay',a.peer_delay && a.peer_delay.e2e_delay),J(o,'PacketLossRate',a.peer_delay && a.peer_delay.e2e_video_lost_ratio_400ms),J(o,'RecvBitrate',a.videoRecvBitrate),J(o,'RecvResolutionWidth',a.videoStats && a.videoStats.googFrameWidthReceived),J(o,'RecvResolutionHeight',a.videoStats && a.videoStats.googFrameHeightReceived),J(o,'RenderResolutionWidth',a.videoStats && a.videoStats.renderRemoteWidth),J(o,'RenderResolutionHeight',a.videoStats && a.videoStats.renderRemoteHeight),J(o,'RenderFrameRate',a.videoStats && a.videoStats.googFrameRateOutput),J(o,'MuteState',a.videoDisabled),J(o,'TotalFreezeTime',a.videoStats && a.videoStats.videoTotalFreezeTime),J(o,'TotalPlayDuration',a.videoStats && a.videoStats.videoTotalPlayDuration),n[i] = o; }e && e(n); },t.getLocalVideoStats = function(e) { const n = {};for (const i in t.localStats) { const o = {}; const a = t.localStats[i];J(o,'TargetSendBitrate',a.videoTargetSendBitrate),J(o,'SendFrameRate',a.videoStats && a.videoStats.googFrameRateSent),J(o,'SendBitrate',a.videoSendBitrate),J(o,'SendResolutionWidth',a.videoStats && a.videoStats.googFrameWidthSent),J(o,'SendResolutionHeight',a.videoStats && a.videoStats.googFrameHeightSent),J(o,'CaptureResolutionWidth',a.videoStats && a.videoStats.googFrameWidthInput),J(o,'CaptureResolutionHeight',a.videoStats && a.videoStats.googFrameHeightInput),J(o,'EncodeDelay',a.videoStats && a.videoStats.googAvgEncodeMs),J(o,'MuteState',a.videoDisabled),J(o,'TotalFreezeTime',a.videoStats && a.videoStats.videoTotalFreezeTime),J(o,'TotalDuration',a.videoStats && a.videoStats.videoTotalPlayDuration),J(o,'CaptureFrameRate',a.videoStats && a.videoStats.googFrameRateSent),a.videoStats.googFrameWidthInput || J(o,'CaptureResolutionWidth',a.videoStats && a.videoStats.renderLocalWidth),a.videoStats.googFrameHeightInput || J(o,'CaptureResolutionHeight',a.videoStats && a.videoStats.renderLocalHeight),n[i] = o,e && e(n); } },t.getRemoteVideoQualityStats = function(e) { const n = {};for (const i in t.remoteStats) { const o = {}; const a = t.remoteStats[i];J(o,'videoReceiveDelay',a.videoStats && a.videoStats.googCurrentDelayMs),J(o,'VideoFreezeRate',a.videoStats && a.videoStats.videoFreezeRate),J(o,'FirstFrameTime',a.firstFrameTime),n[i] = o; }e && e(n); },t.getRemoteAudioQualityStats = function(e) { const n = {};for (const i in t.remoteStats) { const o = {}; const a = t.remoteStats[i];J(o,'audioReceiveDelay',a.audioStats && a.audioStats.googCurrentDelayMs),J(o,'AudioFreezeRate',a.videoStats && a.videoStats.videoFreezeRate),n[i] = o; }e && e(n); },t.getTransportStats = function(e) { const n = {}; const i = {}; const o = t.gatewayClient.traffic_stats; const a = o.peer_delay;if (J(n,'OutgoingAvailableBandwidth',t.gatewayClient.OutgoingAvailableBandwidth / 1e3),J(n,'RTT',o && o.access_delay),a) { let r = !0; let s = !1; let c = void 0;try { for (var d,u = a[Symbol.iterator]();!(r = (d = u.next()).done);r = !0) { const l = d.value;l.downlink_estimate_bandwidth && (i[l.peer_uid] = l.downlink_estimate_bandwidth / 1e3 + ''); } } catch (e) { s = !0,c = e; } finally { try { r || u.return == null || u.return(); } finally { if (s) throw c } } }n.IncomingAvailableBandwidth = i,e && e(n); },t.getSessionStats = function(e) { const n = {}; const i = t.gatewayClient.traffic_stats; const o = t.gatewayClient.socket; let a = 0; let r = 0;for (var s in t.remoteStats)(c = t.remoteStats[s]) && c.videoStats && c.videoStats.videoRecvBytesDelta && (r += parseInt(c.videoStats.videoRecvBytesDelta)),c && c.audioStats && c.audioStats.audioRecvBytesDelta && (r += parseInt(c.audioStats.audioRecvBytesDelta));for (var s in t.localStats) { var c;(c = t.localStats[s]) && c.videoStats && c.videoStats.videoSendBytesDelta && (a += parseInt(c.videoStats.videoSendBytesDelta)),c && c.audioStats && c.audioStats.audioSendBytesDelta && (a += parseInt(c.audioStats.audioSendBytesDelta)); } const d = a + t.session.WSSendBytesDelta + t.session.HTTPSendBytesDelta; const u = r + t.session.WSRecvBytesDelta + t.session.HTTPRecvBytesDelta; let l = t.session.sendBytes + Object(ye.b)(); let p = t.session.recvBytes + Object(ye.a)();t.gatewayClient.socket && t.gatewayClient.socket.state === t.gatewayClient.CONNECTED && (l += o.getSendBytes(),p += o.getRecvBytes());let f = 1;i.peer_delay && (f = i.peer_delay.length,f += 1),J(n,'Duration',o.getDuration()),J(n,'UserCount',f),J(n,'SendBytes',l),J(n,'RecvBytes',p),J(n,'SendBitrate',8 * d / 1e3),J(n,'RecvBitrate',8 * u / 1e3),e && e(n); },t.isLocalVideoFreeze = function(e,t) { let n = 0; let i = 0;if (!e || !t) return !1;if (Object(f.isChrome)() || Object(f.isOpera)())n = e.googFrameRateInput,i = e.googFrameRateSent;else if (Object(f.isSafari)())n = parseInt(e.framerateMean),i = parseInt(e.framesEncoded) - parseInt(t.framesEncoded);else { if (!Object(f.isFireFox)()) return !1;n = parseInt(e.framerateMean),i = parseInt(e.framesEncoded) - parseInt(t.framesEncoded); } return n > 5 && i < 3 },t.isRemoteVideoFreeze = function(e,t) { let n = 0; let i = 0;if (!e || !t) return !1;if (Object(f.isChrome)() || Object(f.isOpera)())n = e.googFrameRateReceived,i = e.googFrameRateDecoded;else if (Object(f.isSafari)())n = e.framerateMean,i = parseInt(e.framesDecoded) - parseInt(t.framesDecoded);else { if (!Object(f.isFireFox)()) return !1;n = parseInt(e.framesReceived) - parseInt(t.framesReceived),i = parseInt(e.framesDecoded) - parseInt(t.framesDecoded); } return n > 5 && n < 10 && i < 3 || n > 10 && n < 20 && i < 4 || n > 20 && i < 5 },t.isAudioFreeze = function(e) { if (Object(f.isChrome)() && e) { if (e.googDecodingPLC && e.googDecodingPLCCNG && e.googDecodingCTN) return (parseInt(e.googDecodingPLC) + parseInt(e.googDecodingPLCCNG)) / parseInt(e.googDecodingCTN) > .2 } else if ((Object(f.isSafari)() || Object(f.isFireFox)()) && e.packetsLost && e.packetsReceived) return parseInt(e.packetsLost) / (parseInt(e.packetsLost) + parseInt(e.packetsReceived)) > .2;return !1 },t.isAudioDecodeFailed = function(e) { return !!((Object(f.isChrome)() || Object(f.isOpera)()) && e && parseInt(e.bytesReceived) > 0 && parseInt(e.googDecodingNormal) === 0) },t.startNetworkQualityTimer = function() { t.clearNetworkQualityTimer(),t.networkQualityTimer = setInterval(function() { if (t.gatewayClient.state !== Je.CONNECTED)t.gatewayClient.dispatchEvent({ type:'network-quality',uplinkNetworkQuality:0,downlinkNetworkQuality:0 });else { const e = t.gatewayClient.traffic_stats;t.gatewayClient.dispatchEvent({ type:'network-quality',uplinkNetworkQuality:t.networkQualityTrans(e.uplink_network_quality),downlinkNetworkQuality:t.networkQualityTrans(e.downlink_network_quality) }); } },2e3); },t.clearNetworkQualityTimer = function() { t.networkQualityTimer && clearInterval(t.networkQualityTimer); },t.networkQualityTrans = function(e) { return e >= 0 && e < .17 ? 1 : e >= .17 && e < .36 ? 2 : e >= .36 && e < .59 ? 3 : e >= .59 && e <= 1 ? 4 : e > 1 ? 5 : 0 },t.getStatsTimer = setInterval(function() { const e = t.gatewayClient.traffic_stats; const n = Date.now();t.gatewayClient.dispatchEvent({ type:'_testException' }),Object.keys(t.localStats).length && t.exceptionMonitor.setLocalStats(t.localStats),Object.keys(t.remoteStats).length && t.exceptionMonitor.setRemoteStats(t.remoteStats);const i = {};Object.keys(t.gatewayClient.remoteStreams).forEach(function(o) { const a = t.gatewayClient.remoteStreams[o]; const r = t.remoteStats[o]; const s = { id:o,updatedAt:n };i[o] = s,s.firstFrameTime = a.firstFrameTime,r ? (s.audioTotalPlayDuration = r.audioTotalPlayDuration + 1,s.audioTotalFreezeTime = r.audioTotalFreezeTime,s.isAudioFreeze = !1,s.isAudioDecodeFailed = !1,s.videoTotalPlayDuration = r.videoTotalPlayDuration + 1,s.videoTotalFreezeTime = r.videoTotalFreezeTime,s.isVideoFreeze = !1) : (s.audioTotalPlayDuration = 1,s.audioTotalFreezeTime = 0,s.videoTotalPlayDuration = 1,s.videoTotalFreezeTime = 0);const c = e && e.peer_delay && e.peer_delay.find(function(e) { return e.peer_uid == o });c && (s.peer_delay = c),a && (a.isPlaying() && (s.audioDisabled = a.userMuteAudio || a.peerMuteAudio ? '1' : '0',s.videoDisabled = a.userMuteVideo || a.peerMuteVideo ? '1' : '0'),r && r.peer_delay && c && r.peer_delay.stream_type !== c.stream_type && t.gatewayClient.dispatchEvent({ type:'streamTypeChange',uid:o,streamType:c.stream_type }),a.pc && a.pc.state == 'established' && a.pc.getStats(function(e) { if (s.pcStats = e,s.audioStats = e.find(function(e) { return e.mediaType == 'audio' && (e.id.includes('_recv') || e.id.toLowerCase().includes('inbound')) }),s.videoStats = e.find(function(e) { return e.mediaType == 'video' && (e.id.includes('_recv') || e.id.toLowerCase().includes('inbound')) }),r && r.audioStats && s.audioStats) { const n = parseInt(s.audioStats.bytesReceived) - parseInt(r.audioStats.bytesReceived); const i = parseInt(s.audioStats.googDecodingNormal) - parseInt(r.audioStats.googDecodingNormal);if (s.audioStats.audioRecvBytesDelta = n,s.audioStats.audioDecodingNormalDelta = i,t.session.recvBytes += n,isFinite(n) && s.audioStats.timestamp) { var o = s.audioStats.timestamp.getTime() - r.audioStats.timestamp.getTime();s.audioRecvBitrate = Math.floor(8 * n / o); }t.isAudioFreeze(s.audioStats) && s.audioTotalPlayDuration > 10 && (s.audioTotalFreezeTime++,s.isAudioFreeze = !0),t.isAudioDecodeFailed(s.audioStats) && s.audioTotalPlayDuration > 10 && (s.isAudioDecodeFailed = !0),s.audioStats.audioTotalFreezeTime = s.audioTotalFreezeTime,s.audioStats.audioTotalPlayDuration = s.audioTotalPlayDuration,s.audioStats.audioFreezeRate = Math.ceil(100 * s.audioTotalFreezeTime / s.audioTotalPlayDuration); } if (r && r.videoStats && s.videoStats) { const c = parseInt(s.videoStats.bytesReceived) - parseInt(r.videoStats.bytesReceived);s.videoStats.videoRecvBytesDelta = c,t.session.recvBytes += c,isFinite(c) && s.videoStats.timestamp && (o = s.videoStats.timestamp.getTime() - r.videoStats.timestamp.getTime(),s.videoRecvBitrate = Math.floor(8 * c / o)),t.isRemoteVideoFreeze(s.videoStats,r.videoStats) && (s.videoTotalFreezeTime++,s.isVideoFreeze = !0),s.videoStats.videoTotalFreezeTime = s.videoTotalFreezeTime,s.videoStats.videoTotalPlayDuration = s.videoTotalPlayDuration,s.videoStats.videoFreezeRate = Math.ceil(100 * s.videoTotalFreezeTime / s.videoTotalPlayDuration),a.player && a.player.video && a.player.video.videoWidth && a.player.video.videoHeight ? (s.videoStats.renderRemoteWidth = a.player.video.videoWidth,s.videoStats.renderRemoteHeight = a.player.video.videoHeight) : (s.videoStats.renderRemoteWidth = a.videoWidth || s.videoStats.googFrameWidthReceived,s.videoStats.renderRemoteHeight = a.videoHeight || s.videoStats.googFrameHeightReceived); } })); }),t.remoteStats = i;const o = {};if (Object.keys(t.gatewayClient.localStreams).forEach(function(e) { const i = t.gatewayClient.localStreams[e]; const a = t.localStats[e]; const r = { id:e,updatedAt:n };o[e] = r,a ? (r.videoTotalPlayDuration = a.videoTotalPlayDuration + 1,r.videoTotalFreezeTime = a.videoTotalFreezeTime,r.isVideoFreeze = !1) : (r.videoTotalPlayDuration = 1,r.videoTotalFreezeTime = 0),i && (i.isPlaying() && (r.audioDisabled = i.userMuteAudio ? '1' : '0',r.videoDisabled = i.userMuteVideo ? '1' : '0'),i.video && i.attributes.maxVideoBW ? r.videoTargetSendBitrate = i.attributes.maxVideoBW : i.video && i.screenAttributes && (r.videoTargetSendBitrate = i.screenAttributes.maxVideoBW),i.pc && i.pc.state == 'established' && i.pc.getStats(function(e) { if (r.pcStats = e.reverse(),r.audioStats = e.find(function(e) { return e.mediaType == 'audio' && (e.id.includes('_send') || e.id.toLowerCase().includes('outbound')) }),r.videoStats = e.find(function(e) { return e.mediaType == 'video' && (e.id.includes('_send') || e.id.toLowerCase().includes('outbound')) }),r.audioStats && a && a.audioStats) { const n = parseInt(r.audioStats.bytesSent) - parseInt(a.audioStats.bytesSent);if (r.audioStats.audioSendBytesDelta = n,t.session.sendBytes += n,isFinite(n) && r.audioStats.timestamp) { var o = r.audioStats.timestamp.getTime() - a.audioStats.timestamp.getTime();r.audioSendBitrate = Math.floor(8 * n / o); } } if (r.videoStats && a && a.videoStats) { const s = parseInt(r.videoStats.bytesSent) - parseInt(a.videoStats.bytesSent);r.videoStats.videoSendBytesDelta = s,t.session.sendBytes += s,isFinite(s) && r.videoStats.timestamp && (o = r.videoStats.timestamp.getTime() - a.videoStats.timestamp.getTime(),r.videoSendBitrate = Math.floor(8 * s / o)),t.isLocalVideoFreeze(r.videoStats,a.videoStats) && (r.videoTotalFreezeTime++,r.isVideoFreeze = !0),r.videoStats.videoTotalFreezeTime = r.videoTotalFreezeTime,r.videoStats.videoTotalPlayDuration = r.videoTotalPlayDuration,r.videoStats.videoFreezeRate = Math.ceil(100 * r.videoTotalFreezeTime / r.videoTotalPlayDuration),r.videoStats.renderLocalWidth = i.videoWidth || r.videoStats.googFrameWidthSent,r.videoStats.renderLocalHeight = i.videoHeight || r.videoStats.googFrameHeightSent; } })); }),t.localStats = o,t.session.HTTPSendBytesDelta = Object(ye.b)() - t.session.HTTPSendBytes,t.session.HTTPSendBytes = Object(ye.b)(),t.session.HTTPRecvBytesDelta = Object(ye.a)() - t.session.HTTPRecvBytes,t.session.HTTPRecvBytes = Object(ye.a)(),t.gatewayClient.socket && t.gatewayClient.socket.state === t.gatewayClient.CONNECTED) { const a = t.gatewayClient.socket;t.session.WSSendBytesDelta = a.getSendBytes() - t.session.WSSendBytes,t.session.WSSendBytes = a.getSendBytes(),t.session.WSRecvBytesDelta = a.getRecvBytes() - t.session.WSRecvBytes,t.session.WSRecvBytes = a.getRecvBytes(); } },1e3),t.gatewayClient.on('join',function() { t.session = { sendBytes:0,recvBytes:0,WSSendBytes:0,WSSendBytesDelta:0,WSRecvBytes:0,WSRecvBytesDelta:0,HTTPSendBytes:0,HTTPSendBytesDelta:0,HTTPRecvBytes:0,HTTPRecvBytesDelta:0 }; }),t }(t.gatewayClient),t.configDistributManager = function(e) { const t = {};return t.client = e,t.client.on('config-distribute',function(n) { const i = n.joinInfo; const a = n.config;if (a) { se(a.uploadLog) || (Object(o.setParameter)('UPLOAD_LOG',a.uploadLog),r.b.reportApiInvoke(i.sid,{ name:'_configDistribute',options:{ feature:'uploadLog',value:a.uploadLog } })()),se(a.dualStream) || (e.isDualStream = a.dualStream,r.b.reportApiInvoke(i.sid,{ name:'_configDistribute',options:{ feature:'dualStream',value:a.dualStream } })()),se(a.streamFallbackOption) || t.client.on('stream-subscribed',function(e) { const n = e.stream;n ? (t.client.gatewayClient.setStreamFallbackOption(n,a.streamFallbackOption),r.b.reportApiInvoke(i.sid,{ name:'_configDistribute',options:{ feature:'streamFallbackOption',value:a.streamFallbackOption,streamId:n.getId() } })()) : r.b.reportApiInvoke(i.sid,{ name:'_configDistribute',options:{ feature:'streamFallbackOption',value:a.streamFallbackOption,streamId:n.getId(),err:'invalid stream' } })(); });try { Object.keys(a).map(function(e) { return Object(o.setParameter)(e,a[e]) }); } catch (e) {} } }),t }(t),se(e.turnServer) || t.setTurnServer(e.turnServer),se(e.proxyServer) || t.setProxyServer(e.proxyServer),t.mode === 'live' && (t.gatewayClient.role = 'audience'),t.mode === 'rtc' && (t.gatewayClient.role = 'host'),t.on('onMultiIP',function(e) { t.gatewayClient.closeGateway(),t.gatewayClient.socket = void 0,t.gatewayClient.hasChangeBGPAddress = !0,t.joinInfo.multiIP = e.arg.option,t.gatewayClient.state = Je.CONNECTING;const n = function(e) { a.default.info('['.concat(t.clientId,'] Joining channel: ').concat(t.channel)),t.joinInfo.cid = e.cid,t.joinInfo.uid || (t.joinInfo.uid = e.uid),t.joinInfo.uni_lbs_ip = e.uni_lbs_ip,t.joinInfo.gatewayAddr = e.gateway_addr,t.onSuccess ? t.gatewayClient.join(t.joinInfo,t.key,function(e) { a.default.info('['.concat(t.clientId,'] Join channel ').concat(t.channel,' success'));const n = t.onSuccess;t.onSuccess = null,t.onFailure = null,n(e); },t.onFailure) : (t.gatewayClient.joinInfo = S()({},t.joinInfo),t.gatewayClient.rejoin()); };t.joinInfo.stringUid && !t.joinInfo.uid ? (self.userAccountReq && !self.userAccountReq.isFinished() && self.userAccountReq.cancel(),self.userAccountReq = xe(joinInfo),self.userAccountReq.then(function(e) { a.default.error('getUserAccount Success '.concat(e.url,' ').concat(joinInfo.stringUid,' => ')
  .concat(e.uid)),t.joinInfo.uid = e.uid,Le(t.joinInfo,n); }).catch(function(e) { a.default.error('getUserAccount rejected',e),t.onFailure(e); })) : Le(t.joinInfo,n); }),t.on('rejoin-start',function() { t._renewSession(),r.b.sessionInit(e.sessionId,{ lts:(new Date).getTime(),extend:{ rejoin:!0 },cname:t.channel,appid:e.appId,mode:e.mode,succ:!0 }); }),t.on('recover',function() { t._renewSession(),r.b.sessionInit(e.sessionId,{ lts:(new Date).getTime(),extend:{ recover:!0 },cname:t.channel,appid:e.appId,mode:e.mode,succ:!0 }); }),t.on('rejoin',function() { const e = t.highStreamState === 2 ? 2 : 0;if (t.onSuccess) { const n = t.onSuccess;t.onSuccess = null,t.onFailure = null,n(); }t.highStream && e === 0 && (a.default.info('['.concat(t.clientId,'] publish after rejoin')),t.highStreamState = 2,t.lowStreamState = 2,t.publish(t.highStream,function(e) { e && a.default.info('['.concat(t.clientId,'] '),e); })); }),t.on('streamPublished',function(e) { t.hasPublished || (t.hasPublished = !0,t.gatewayClient.dispatchEvent(d({ type:'stream-published',stream:e.stream }))); }),t.on('pubP2PLost',function(e) { a.default.debug('['.concat(t.clientId,'] Start reconnect local peerConnection: ').concat(t.highStream.getId())),t.gatewayClient.dispatchEvent({ type:'stream-reconnect-start',uid:t.highStream.getId() }),t.highStreamState === 1 && (t.highStreamState = 0,t.lowStreamState = 0),t._unpublish(t.highStream,function() { t._publish(t.highStream,function() { a.default.debug('['.concat(t.clientId,'] Reconnect local peerConnection success: ').concat(t.highStream.getId())),t.gatewayClient.dispatchEvent({ type:'stream-reconnect-end',uid:t.highStream.getId(),success:!0,reason:'' }); },function(e) { a.default.debug('['.concat(t.clientId,'] Reconnect local peerConnection failed: ').concat(e)),t.gatewayClient.dispatchEvent({ type:'stream-reconnect-end',uid:t.highStream.getId(),success:!1,reason:e }); }); },function(e) { a.default.debug('['.concat(t.clientId,'] Reconnect local peerConnection failed: ').concat(e)),t.gatewayClient.dispatchEvent({ type:'stream-reconnect-end',uid:t.highStream.getId(),success:!1,reason:e }); }); }),t.on('subP2PLost',function(e) { a.default.debug('['.concat(t.clientId,'] Start reconnect remote peerConnection: ').concat(e.stream.getId())),t.gatewayClient.dispatchEvent({ type:'stream-reconnect-start',uid:e.stream.getId() }),t.gatewayClient.unsubscribe(e.stream,function() { t.gatewayClient.subscribe(e.stream,function() { a.default.debug('['.concat(t.clientId,'] Reconnect remote peerConnection success: ').concat(e.stream.getId())),t.gatewayClient.dispatchEvent({ type:'stream-reconnect-end',uid:e.stream.getId(),success:!1,reason:'' }); },function(n) { a.default.debug('['.concat(t.clientId,'] Reconnect remote peerConnection failed: '),n),t.gatewayClient.dispatchEvent({ type:'stream-reconnect-end',uid:e.stream.getId(),success:!1,reason:n }); }); },function(n) { a.default.debug('['.concat(t.clientId,'] " + \'Reconnect remote peerConnection failed: '),n),t.gatewayClient.dispatchEvent({ type:'stream-reconnect-end',uid:e.stream.getId(),success:!1,reason:n }); }); }),Xe.on('networkTypeChanged',function(e) { t.gatewayClient && t.gatewayClient.dispatchEvent(e);const n = S()({},e,{ type:'network-type-changed' });t.gatewayClient.dispatchEvent(n); }),Y.on('recordingDeviceChanged',function(e) { t.gatewayClient && t.gatewayClient.dispatchEvent(e);const n = S()({},e,{ type:'recording-device-changed' });t.gatewayClient.dispatchEvent(n); }),Y.on('playoutDeviceChanged',function(e) { t.gatewayClient && t.gatewayClient.dispatchEvent(e);const n = S()({},e,{ type:'playout-device-changed' });t.gatewayClient.dispatchEvent(n); }),Y.on('cameraChanged',function(e) { t.gatewayClient && t.gatewayClient.dispatchEvent(e);const n = S()({},e,{ type:'camera-changed' });t.gatewayClient.dispatchEvent(n); }),t.gatewayClient.on('streamTypeChange',function(n) { const i = S()({},n,{ type:'stream-type-changed' });t.gatewayClient.dispatchEvent(i),r.b.reportApiInvoke(e.sessionId,{ name:'streamTypeChange' })(null,JSON.stringify(n)); }),t }; var $e = { width:640,height:360,videoBitrate:400,videoFramerate:15,lowLatency:!1,audioSampleRate:48e3,audioBitrate:48,audioChannels:1,videoGop:30,videoCodecProfile:100,userCount:0,userConfigExtraInfo:{},backgroundColor:0,transcodingUsers:[] }; var Ze = { width:0,height:0,videoGop:30,videoFramerate:15,videoBitrate:400,audioSampleRate:44100,audioBitrate:48,audioChannels:1 }; const et = Y.getDevices; const tt = U; const nt = JSON.parse(JSON.stringify(o.SUPPORT_RESOLUTION_LIST));t.default = { TranscodingUser:{ uid:0,x:0,y:0,width:0,height:0,zOrder:0,alpha:1 },LiveTranscoding:$e,createClient(e) { const t = r.b.reportApiInvoke(null,{ name:'createClient',options:arguments,tag:'tracer' });(e = S()({},e || {})).codec || (e.codec = function(e) { switch (e) { case 'h264_interop':return 'h264';default:return 'vp8' } }(e.mode));const n = function(e) { return !me.includes(e.mode) ? A.INVALID_CLIENT_MODE : !ge.includes(e.codec) ? A.INVALID_CLIENT_CODEC : e.mode == 'h264_interop' && e.codec !== 'h264' && A.CLIENT_MODE_CODEC_MISMATCH }(e);if (n) throw a.default.error('Invalid parameter setting MODE: '.concat(e.mode,' CODEC: ').concat(e.codec,' ERROR ')
  .concat(n)),t(n),new Error(n);return a.default.info('Creating client, MODE: '.concat(e.mode,' CODEC: ').concat(e.codec)),function(e) { switch (e.mode) { case 'interop':case 'h264_interop':e.mode = 'live';break;case 'web-only':e.mode = 'rtc'; } }(e),t(null,e),Qe(e) },createStream(e) { const t = r.b.reportApiInvoke(null,{ name:'createStream',options:arguments,tag:'tracer' });X(e,'StreamSpec');const n = e.streamID; const i = e.audio; const o = e.video; const s = e.screen; const c = (e.audioSource,e.videoSource,e.cameraId); const d = e.microphoneId; const u = e.mirror; const l = e.extensionId; const p = e.mediaSource; const f = e.audioProcessing;if (!se(n) && !Object(G.c)(n) && !ee(n,1,255)) throw new Error('[String streamID] Length of the string: [1,255]. ASCII characters only. [Number streamID] The value range is Uint32');if (Z(i,'audio'),Z(o,'video'),se(s) || Z(s,'screen'),se(c) || Q(c,'cameraId',0,255,!1),se(d) || Q(d,'microphoneId',0,255,!1),se(l) || Q(l,'extensionId'),se(p) || K(p,'mediaSource',['screen','application','window']),se(u) || Z(u,'mirror'),!se(f)) { const m = f.AGC; const g = f.AEC; const v = f.ANS;se(m) || Z(m,'AGC'),se(g) || Z(g,'AEC'),se(v) || Z(v,'ANS'); }a.default.debug('Create stream');const S = pe(e);return t(),S },Logger:a.default,report:r.b,getDevices:et,getScreenSources:tt,getParameter:o.getParameter,setParameter:o.setParameter,checkSystemRequirements() { const e = r.b.reportApiInvoke(null,{ name:'checkSystemRequirements',options:arguments,tag:'tracer' }); const t = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection; const n = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.msGetUserMedia || navigator.mozGetUserMedia || navigator.mediaDevices && navigator.mediaDevices.getUserMedia; const i = window.WebSocket; const o = !!t && !!n && !!i; let s = !1;a.default.debug(f.getBrowserInfo(),'isAPISupport:' + o),f.isChrome() && f.getBrowserVersion() >= 58 && f.getBrowserOS() !== 'iOS' && (s = !0),f.isFireFox() && f.getBrowserVersion() >= 56 && (s = !0),f.isOpera() && f.getBrowserVersion() >= 45 && (s = !0),f.isSafari() && f.getBrowserVersion() >= 11 && (s = !0),f.isEdge() && (s = !0),(f.isWeChatBrowser() || f.isQQBrowser()) && f.getBrowserOS() !== 'iOS' && (s = !0),f.isSupportedPC() || f.isSupportedMobile() || (s = !1);const c = o && s;return e(null,c),c },getSupportedCodec:fe.getSupportedCodec,VERSION:o.VERSION,BUILD:o.BUILD,PROFILE_TABLE:nt,AUDIO_SAMPLE_RATE_32000:32e3,AUDIO_SAMPLE_RATE_44100:44100,AUDIO_SAMPLE_RATE_48000:48e3,VIDEO_CODEC_PROFILE_BASELINE:66,VIDEO_CODEC_PROFILE_MAIN:77,VIDEO_CODEC_PROFILE_HIGH:100,REMOTE_VIDEO_STREAM_HIGH:0,REMOTE_VIDEO_STREAM_LOW:1,REMOTE_VIDEO_STREAM_MEDIUM:2 }; }]).default });
});

var AgoraRTC$1 = unwrapExports(AgoraRTC);
var AgoraRTC_1 = AgoraRTC.AgoraRTC;

export default AgoraRTC$1;
export { AgoraRTC_1 as AgoraRTC, AgoraRTC as __moduleExports };
